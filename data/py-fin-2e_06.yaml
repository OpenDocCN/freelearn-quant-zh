- en: Chapter 6. Capital Asset Pricing Model
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。资本资产定价模型
- en: '**Capital Asset Pricing Model** (**CAPM**) is probably the most widely used
    model in assets pricing. There are several reasons behind its popularity. First,
    it is quite simple since it is a one-factor linear model. Second, it is quite
    easy to implement this one-factor model. Any interested reader could download
    historical price data for a listed company and market index data to calculate
    return first, and then estimate the market risk for the stock. Third, this simplest
    one-factor asset pricing model could be served as the first model for other more
    advanced ones, such as Fama-French 3-factor, Fama-French-Carhart 4-factor, and
    Fama-French 5-factor models introduced in the next chapter ([Chapter 7](ch07.html
    "Chapter 7. Multifactor Models and Performance Measures"), *Multifactor Models
    and Performance Measures*). In this chapter, the following topics will be covered:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**资本资产定价模型**（**CAPM**）可能是资产定价中使用最广泛的模型。其流行背后有几个原因。首先，它非常简单，因为它是一个单因素线性模型。其次，实施这种单因素模型非常容易。任何感兴趣的读者都可以下载上市公司的历史价格数据和市场指数数据，首先计算回报率，然后估计股票的市场风险。第三，这种最简单的单因素资产定价模型可以作为其他更高级模型的第一模型，例如第七章介绍的Fama-French三因子模型、Fama-French-Carhart四因子模型和五因子模型（[第7章](ch07.html
    "第7章。多因子模型和绩效衡量")，*多因子模型和绩效衡量*）。在本章中，将涵盖以下主题：'
- en: Introduction to CAPM
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CAPM介绍
- en: How to download data from Yahoo Finance
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何从Yahoo Finance下载数据
- en: Rolling beta
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滚动贝塔
- en: Several Python programs to estimate beta for multiple stocks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多只股票的贝塔估计的几个Python程序
- en: Adjusted beta and portfolio beta estimation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整贝塔和投资组合贝塔估计
- en: Scholes and Williams (1977) adjustment for beta
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scholes和Williams（1977年）对贝塔的调整
- en: Dimson (1979) adjustment for beta
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dimson（1979年）对贝塔的调整
- en: Output data to various types of external files
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输出数据到各种类型的外部文件
- en: Simple string manipulation
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单的字符串操作
- en: Python via Canopy
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Canopy平台上的Python
- en: Introduction to CAPM
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CAPM介绍
- en: 'According to the famous CAPM, the expected returns of a stock are linearly
    correlated with expected market returns. Here, we use the international business
    machine with a ticker of IBM as an example and this linear one-factor asset pricing
    model could be applied to any other stocks or portfolios. The formula is given
    here:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 根据著名的CAPM，股票的预期回报与预期市场回报线性相关。在此，我们以国际商业机器（IBM）的股票为例，其股票代码为IBM，这个线性单因素资产定价模型可适用于任何其他股票或投资组合。公式如下：
- en: '![Introduction to CAPM](img/B06175_06_24.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![Introduction to CAPM](img/B06175_06_24.jpg)'
- en: 'Here, `E()` is the expectation, *E(R[IBM])* is the expected return for IBM,
    *R[f]* is the risk-free rate, and *E(R[mkt])* is the expected market return. For
    instance, the S&P500 index could be served as a market index. The slope of the
    preceding equation or ![Introduction to CAPM](img/B06175_06_40.jpg) is a measure
    of IBM''s market risk. To make our notation simpler, the expectation could be
    dropped:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`E()`表示期望值，*E(R[IBM])*是IBM的预期回报，*R[f]*是无风险利率，*E(R[mkt])*是预期市场回报。例如，标准普尔500指数可以作为市场指数。前述方程的斜率或![Introduction
    to CAPM](img/B06175_06_40.jpg)是IBM的市场风险的度量。为了简化符号，可以省略期望值符号：
- en: '![Introduction to CAPM](img/B06175_06_25.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![Introduction to CAPM](img/B06175_06_25.jpg)'
- en: 'Actually, we could consider the relationship between the excess stock returns
    and the excess market returns. The following formula is essentially the same as
    the preceding formula, but it has a better and clearer interpretation:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们可以考虑股票超额回报与市场超额回报之间的关系。下面的公式本质上与前述公式相同，但解释更好更清晰：
- en: '![Introduction to CAPM](img/B06175_06_26.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![Introduction to CAPM](img/B06175_06_26.jpg)'
- en: 'Recall that in [Chapter 3](ch03.html "Chapter 3. Time Value of Money"), *Time
    Value of Money*, we learnt that the difference between a stock''s expected return
    and the risk free rate is called risk premium. This is true for both individual
    stocks and for a market index. Thus, the meaning of the *Equation (3)* is quite
    easy to interpret: the risk premium of individual stock depends on two components:
    its market risk and the market risk-premium.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，在[第3章](ch03.html "第3章。时间价值")，*时间价值*，我们学到，股票预期回报与无风险利率之间的差异称为风险溢价。这对个别股票和市场指数都是如此。因此，*方程（3）*的含义非常容易解释：个别股票的风险溢价取决于两个因素：其市场风险和市场风险溢价。
- en: 'Mathematically, the slop of the preceding linear regression could be written
    as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在数学上，前述线性回归的斜率可以写成如下形式：
- en: '![Introduction to CAPM](img/B06175_06_27.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![Introduction to CAPM](img/B06175_06_27.jpg)'
- en: 'Here ![Introduction to CAPM](img/B06175_06_41.jpg) is the covariance between
    IBM''s returns and the market index returns and ![Introduction to CAPM](img/B06175_06_42.jpg)
    is the variance of the market returns. Since ![Introduction to CAPM](img/B06175_06_43.jpg),
    where ![Introduction to CAPM](img/B06175_06_44.jpg) is the correlation between
    IBM''s return and the index returns, the preceding equation could be written as
    the following one:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 ![CAPM简介](img/B06175_06_41.jpg) 是IBM股票回报与市场指数回报之间的协方差，! [CAPM简介](img/B06175_06_42.jpg)
    是市场回报的方差。由于 ![CAPM简介](img/B06175_06_43.jpg)，其中 ![CAPM简介](img/B06175_06_44.jpg)
    是IBM回报与指数回报之间的相关性，上述方程可以写成以下形式：
- en: '![Introduction to CAPM](img/B06175_06_28.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![CAPM简介](img/B06175_06_28.jpg)'
- en: The meaning of beta is that when the expected market risk-premium increases
    by 1%, the individual stock's expected return would increase by β%, vice versa.
    Thus, beta (market risk) could be viewed as an amplifier. The average beta of
    all stocks is one. Thus, if a stock's beta is higher than 1, it means that its
    market risk is higher than that of an average stock.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 贝塔值的含义是，当预期的市场风险溢价增加1%时，个别股票的预期回报将增加β%；反之亦然。因此，贝塔（市场风险）可以视为一个放大器。所有股票的平均贝塔值为1。因此，如果某只股票的贝塔值大于1，则意味着其市场风险高于平均股票的市场风险。
- en: 'The following lines of code are an example of this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下几行代码是此示例的一个实现：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To see all information about the OLS results, we will use the command of `print(results.summary())`,
    see the following screenshot:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看OLS结果的所有信息，我们将使用 `print(results.summary())` 命令，参见以下屏幕截图：
- en: '![Introduction to CAPM](img/B06175_06_01.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![CAPM简介](img/B06175_06_01.jpg)'
- en: 'At the moment, readers could just pay attention to the values of two coefficients
    and their corresponding T-values and P-values. We would discuss other results,
    such as Durbin-Watson statistics and the Jarque-Bera normality test in [Chapter
    8](ch08.html "Chapter 8. Time-Series Analysis"), *Time-Series Analysis*. The beta
    is 0.3571, which has a T-value of 2.152\. Since it is bigger than 2, we could
    claim that it is significantly different from zero. Alternatively, based on the
    P-value of 0.084, we would have the same conclusion if we choose a 10% as our
    cut-off point. Here is the second example:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，读者可以关注两个系数的值及其相应的T值和P值。我们将在[第8章](ch08.html "第8章 时间序列分析")，*时间序列分析*中讨论其他结果，例如Durbin-Watson统计量和Jarque-Bera正态性检验。贝塔值为0.3571，对应的T值为2.152。由于T值大于2，我们可以声明其显著不同于零。或者，根据0.084的P值，如果我们选择10%作为临界点，我们也会得出相同的结论。以下是第二个示例：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The corresponding result is shown here:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对应的结果如下所示：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Again, the `help()` function could be used to get more information about this
    function, see the following first few lines:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用 `help()` 函数可以获取更多关于此函数的信息，参见以下的前几行：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Help on the `linregress` function in the `scipy.stats._stats_mstats_common`
    module:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`scipy.stats._stats_mstats_common` 模块中 `linregress` 函数的帮助：'
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Calculate a linear least-squares regression for two sets of measurements.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 计算两组测量数据的线性最小二乘回归。
- en: 'Parameters `x`, `y`: array like two sets of measurements. Both arrays should
    have the same length. If only `x` is given (and `y=None`), then it must be a two-
    dimensional array where one dimension has length 2\. The two sets of measurements
    are then found by splitting the array along the length-2 dimension.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 参数 `x`，`y`：类似数组的两个测量集合。两个数组的长度应相同。如果只给定 `x`（且 `y=None`），则它必须是一个二维数组，其中一个维度的长度为2。然后，通过沿着长度为2的维度拆分数组来获得两个测量集合。
- en: 'For the third example, we generate a known set of `y` and `x` observations
    with known intercept and slop, such as *alpha=1* and *beta=0.8*, see the following
    formula:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第三个示例，我们生成一个已知截距和斜率的 `y` 和 `x` 观测值集，例如 *alpha=1* 和 *beta=0.8*，参见以下公式：
- en: '![Introduction to CAPM](img/B06175_06_29.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![CAPM简介](img/B06175_06_29.jpg)'
- en: Here, *yi* is the *ith* observation for dependent variable `y`, 1 is the intercept,
    0.8 is the slope (beta), *xi* is the *ith* observation for an independent variable
    of *x*, and
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*yi* 是因变量 `y` 的第 *i* 个观测值，1是截距，0.8是斜率（贝塔值），*xi* 是自变量 *x* 的第 *i* 个观测值，且
- en: '![Introduction to CAPM](img/B06175_06_45.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![CAPM简介](img/B06175_06_45.jpg)'
- en: 'is the random value. For the preceding equation, after we have generated a
    set of `y` and `x`, we could run a linear regression. For this purpose, a set
    of random numbers are used:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 是随机值。对于上述方程，在生成了一组 `y` 和 `x` 数据后，我们可以进行线性回归。为此，使用了一组随机数：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the preceding code, the `sp.random.rand()` function would call a set of
    random numbers. In order to get the same set of random numbers, the `sp.random.seed()`
    function is applied. In other words, whenever the same seed is used, any programmers
    would get the same set of random numbers. This will be discussed in more detail
    in [Chapter 12](ch12.html "Chapter 12. Monte Carlo Simulation"), *Monte Carlo
    Simulation*. The result is shown here:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，`sp.random.rand()`函数将会调用一组随机数。为了得到相同的一组随机数，使用了`sp.random.seed()`函数。换句话说，每当使用相同的种子时，任何程序员都会得到相同的随机数。这将在[第12章](ch12.html
    "第12章. 蒙特卡洛模拟")，*蒙特卡洛模拟*中详细讨论。结果如下：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now let''s look at how to estimate the beta (market risk) for Microsoft. Assume
    that we are interested in the period from 1/1/2012 to 12/31/2016, for a total
    of five year''s data. The complete Python program is shown here:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何估算微软的贝塔值（市场风险）。假设我们对2012年1月1日到2016年12月31日这一时期的数据感兴趣，共计五年的数据。完整的Python程序如下：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To estimate the beta of IBM using five year data, the main function used to
    download historical price data in the preceding Python program is `matplotlib.finance.quotes_historical_yahoo_ochl`
    . Here is the related link [https://matplotlib.org/api/finance_api.html](https://matplotlib.org/api/finance_api.html).
    The ticker symbol of `^GSPC` stands for the S&P500 market index. The result is
    shown here:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用五年数据估算IBM的贝塔值，在前面的Python程序中，下载历史价格数据的主要函数是`matplotlib.finance.quotes_historical_yahoo_ochl`。这里是相关链接：[https://matplotlib.org/api/finance_api.html](https://matplotlib.org/api/finance_api.html)。`^GSPC`的股票代码代表S&P500市场指数。结果如下：
- en: '![Introduction to CAPM](img/B06175_06_02.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![CAPM简介](img/B06175_06_02.jpg)'
- en: 'Based the preceding results, the beta for IBM is 0.41, while the intercept
    is 0.004\. In addition, the R2 is 0.36 and P-value is almost zero. In the preceding
    program, the risk-free rate is ignored. The impact of its omission on beta (slop)
    is small. In the next chapter, we will show how to include the risk free rate
    when discussing the Fama-French 3-factor model. To get more information about
    the `quotes_historical_yahoo_ochl`, the help function could be used:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 根据之前的结果，IBM的贝塔值为0.41，截距为0.004。此外，R²为0.36，P值几乎为零。在前面的程序中，风险无关利率被忽略了。忽略它对贝塔值（斜率）的影响很小。在下一章，我们将展示如何在讨论Fama-French三因素模型时考虑风险无关利率。要获取更多关于`quotes_historical_yahoo_ochl`的信息，可以使用帮助函数：
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Obviously, it is a good idea to write a function to get data with just three
    import values: ticker, beginning, and ending dates, see the following code:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，编写一个函数，通过三个输入值：股票代码、起始日期和结束日期，来获取数据是一个好主意，参见以下代码：
- en: '[PRE9]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output for Walmart''s beta (market risk) is as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 沃尔玛的贝塔值（市场风险）的输出结果如下：
- en: '![Introduction to CAPM](img/B06175_06_03.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![CAPM简介](img/B06175_06_03.jpg)'
- en: 'Alternatively, we could call the `p4f.dailyReturnYahoo()` function, see the
    following code:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，我们可以调用`p4f.dailyReturnYahoo()`函数，参见以下代码：
- en: '[PRE10]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Moving beta
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动贝塔值
- en: 'Sometimes, researchers need to generate a beta time series based on, for example,
    a three-year moving window. In such cases, we could write a loop or double loops.
    Let''s look at a simpler case: estimating the annual beta for IBM over several
    years. First, let''s look at two ways of getting years from a date variable:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，研究人员需要基于例如三年的移动窗口生成贝塔时间序列。在这种情况下，我们可以编写一个循环或双重循环。让我们来看一个更简单的例子：估算IBM在若干年的年化贝塔值。首先，让我们看看从日期变量中获取年份的两种方式：
- en: '[PRE11]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The Python program used to estimate the annual beta is shown here:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 用于估算年化贝塔值的Python程序如下：
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The corresponding output is shown here:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的输出结果如下：
- en: '![Moving beta](img/B06175_06_04.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![移动贝塔值](img/B06175_06_04.jpg)'
- en: Adjusted beta
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整后的贝塔值
- en: 'Many researchers and professionals find that beta has a mean-reverting tendency.
    It means that if this period''s beta is less than 1, there is a good chance that
    the next beta would be higher. On the other hand, if the current beta is higher
    than 1, the next beta might be smaller. The adjusted beta has the following formula:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 许多研究人员和专业人士发现，贝塔值具有均值回归的趋势。这意味着，如果本期的贝塔值小于1，那么下期贝塔值较高的概率较大。相反，如果当前贝塔值大于1，下期贝塔值可能会较小。调整后的贝塔值的公式如下：
- en: '![Adjusted beta](img/B06175_06_30.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![调整后的贝塔值](img/B06175_06_30.jpg)'
- en: 'Here, *βadj* is the adjusted beta and *β* is our estimated beta. The beta of
    a portfolio is the weighted beta of individual stocks within the portfolio:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*βadj*是调整后的贝塔值，*β*是我们估算的贝塔值。一个投资组合的贝塔值是投资组合中各个股票贝塔值的加权平均值：
- en: '![Adjusted beta](img/B06175_06_31.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![调整后的贝塔值](img/B06175_06_31.jpg)'
- en: 'Here ![Adjusted beta](img/B06175_06_46.jpg) is the beta of a portfolio, *wi*
    (*βi*) is the weight (beta) of its stock, and *n* is the number of stocks in the
    portfolio. The weight of *wi* is calculated according to the following equation:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这里![调整后的贝塔](img/B06175_06_46.jpg)是投资组合的贝塔，*wi* (*βi*)是其股票的权重（贝塔），*n*是投资组合中的股票数量。*wi*的权重按照以下公式计算：
- en: '![Adjusted beta](img/B06175_06_32.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![调整后的贝塔](img/B06175_06_32.jpg)'
- en: Here *vi* is the value of stock *i*, and summation of all *vi*, the denominator
    in the preceding equation is the value of the portfolio.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这里*vi*是股票*i*的价值，前面公式中的分母是所有*vi*的和，即投资组合的价值。
- en: Scholes and William adjusted beta
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Scholes和William调整后的贝塔
- en: 'Many researchers find that *β* would have an upward bias for frequently traded
    stocks and a downward bias for infrequently traded stocks. To overcome this, Sholes
    and Williams recommend the following adjustment:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 许多研究人员发现，*β*对于频繁交易的股票会存在上行偏差，而对于不常交易的股票则会存在下行偏差。为了克服这一点，Scholes和Williams建议如下调整方法：
- en: '![Scholes and William adjusted beta](img/B06175_06_33.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![Scholes和William调整后的贝塔](img/B06175_06_33.jpg)'
- en: 'Here, *β* is the stock or portfolio beta and *ρm* is the autocorrelation for
    the market return. The three betas in the preceding formula are defined by the
    following three equations:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*β*是股票或投资组合的贝塔，*ρm*是市场回报的自相关性。前面公式中的三个贝塔由以下三个方程定义：
- en: '![Scholes and William adjusted beta](img/B06175_06_34.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![Scholes和William调整后的贝塔](img/B06175_06_34.jpg)'
- en: 'Here, let''s look at how to add a lag to an array. The program is in the left
    panel, while the output is shown in the right one:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们来看一下如何给数组添加滞后。程序在左侧面板，输出结果显示在右侧面板：
- en: '[PRE13]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In the preceding program the `.shift()` function is applied. Since we need
    the market return one period ahead, we could specify a negative value of `-1`
    in the `.shift()` function, see the following code:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的程序中应用了`.shift()`函数。由于我们需要市场回报滞后一周期，我们可以在`.shift()`函数中指定一个负值`-1`，见以下代码：
- en: '[PRE14]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The output is as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Scholes and William adjusted beta](img/B06175_06_05.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![Scholes和William调整后的贝塔](img/B06175_06_05.jpg)'
- en: 'First, let''s look at a Python dataset related to monthly data with a name
    of `yanMonthly.pkl`, [http://canisius.edu/~yany/python/yanMonthly.pkl](http://canisius.edu/~yany/python/yanMonthly.pkl).
    The following code would read in the dataset:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，看看一个与每月数据相关的Python数据集，文件名为`yanMonthly.pkl`，[http://canisius.edu/~yany/python/yanMonthly.pkl](http://canisius.edu/~yany/python/yanMonthly.pkl)。以下代码将读取该数据集：
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The related output is shown here:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 相关输出显示如下：
- en: '![Scholes and William adjusted beta](img/B06175_06_06.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![Scholes和William调整后的贝塔](img/B06175_06_06.jpg)'
- en: 'Let''s look at what kind of securities are included in this monthly dataset,
    see the following output:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个每月数据集中包含了哪些证券，见以下输出：
- en: '[PRE16]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'From the output shown here, we can see that there are `129` securities:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里显示的输出结果中，我们可以看到有`129`只证券：
- en: '![Scholes and William adjusted beta](img/B06175_06_07.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![Scholes和William调整后的贝塔](img/B06175_06_07.jpg)'
- en: 'To get S&P500 data, we would use ^`GSPC` since this is the ticker symbol used
    by Yahoo!Finance:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获取S&P500数据，我们将使用^`GSPC`，因为这是Yahoo!Finance使用的股票代码：
- en: '[PRE17]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The first 10 lines are shown here:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示的是前10行：
- en: '![Scholes and William adjusted beta](img/B06175_06_08.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![Scholes和William调整后的贝塔](img/B06175_06_08.jpg)'
- en: After estimating returns, we could estimate their lag and lead, and then three
    different regressions to estimate those three betas.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在估计回报后，我们可以估计其滞后和领先，并进行三次不同的回归来估计这三个贝塔。
- en: 'Along the same line, Dimson (1979) suggests the following method to adjust
    beta:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，Dimson（1979）建议以下方法来调整贝塔：
- en: '![Scholes and William adjusted beta](img/B06175_06_35.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![Scholes和William调整后的贝塔](img/B06175_06_35.jpg)'
- en: 'The most frequently used *k* value is *1*. Thus, we have the following equation:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最常用的*k*值是*1*。因此，我们有以下公式：
- en: '![Scholes and William adjusted beta](img/B06175_06_36.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![Scholes和William调整后的贝塔](img/B06175_06_36.jpg)'
- en: Since this is equivalent to running a three-factor linear model, we will leave
    it to the next chapter ([Chapter 7](ch07.html "Chapter 7. Multifactor Models and
    Performance Measures"), *Multifactor Models and Performance Measures*).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这相当于运行一个三因子线性模型，我们将在下一章中讨论（[第7章](ch07.html "第7章。多因子模型与业绩衡量"), *多因子模型与业绩衡量*）。
- en: Extracting output data
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提取输出数据
- en: In this section, we'll be discussing different ways to extract our output data
    to different file formats.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论将输出数据提取到不同文件格式的不同方法。
- en: Outputting data to text files
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 输出数据到文本文件
- en: 'The following code will download the daily price data for Microsoft and save
    it to a text file:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将下载微软的每日价格数据，并保存到一个文本文件中：
- en: '[PRE18]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The first several saved observations are shown in the following screenshot:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些保存的观察结果：
- en: '![Outputting data to text files](img/B06175_06_09.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![将数据输出到文本文件](img/B06175_06_09.jpg)'
- en: Saving our data to a .csv file
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据保存为.csv文件
- en: 'The following program first retrieves IBM price data, and then saves it as
    a `.csv` file under `c:/temp`:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序首先获取IBM的价格数据，然后将其保存为`.csv`文件，路径为`c:/temp`：
- en: '[PRE19]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In the preceding code, we rename the `quotes_historical_yahoo_ochl()` function
    as `getData` for convenience. A reader could use their own name.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们将`quotes_historical_yahoo_ochl()`函数重命名为`getData`，以便于使用。读者可以使用自己喜欢的名称。
- en: Saving our data to an Excel file
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据保存为Excel文件
- en: 'The following program first retrieves IBM price data, and then saves it as
    a `.csv` file under `c:/temp`:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序首先获取IBM的价格数据，然后将其保存为`.csv`文件，路径为`c:/temp`：
- en: '[PRE20]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Note that, if readers find an error message of `No module named openpyxl`,
    it means that you have to install that module first. A few observations are shown
    in the following screenshot:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果读者看到`No module named openpyxl`的错误信息，这意味着你需要首先安装该模块。以下截图展示了一些观察结果：
- en: '![Saving our data to an Excel file](img/B06175_06_10.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![将数据保存为Excel文件](img/B06175_06_10.jpg)'
- en: 'Obviously, there is a good change that we don''t link the first columns since
    it is just the irrelevant row column indicator:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们很可能不会连接第一列，因为它只是无关的行列指示符：
- en: '[PRE21]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Saving our data to a pickle dataset
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据保存为pickle数据集
- en: 'The following program first generates a simple array that has just three values.
    We save them to a binary file named `tmp.bin` at `C:\temp\`:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序首先生成一个简单的数组，包含三个值。我们将它们保存到名为`tmp.bin`的二进制文件中，路径为`C:\temp\`：
- en: '[PRE22]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The dataset of named `a` is shown here:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 名为`a`的数据集如下所示：
- en: '![Saving our data to a pickle dataset](img/B06175_06_11.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![将数据保存为pickle数据集](img/B06175_06_11.jpg)'
- en: Saving our data to a binary file
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据保存为二进制文件
- en: 'The following program first generates a simple array that has just three values.
    We save them to a binary file named `tmp.bin` at `C:\temp\`:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序首先生成一个简单的数组，包含三个值。我们将它们保存到名为`tmp.bin`的二进制文件中，路径为`C:\temp\`：
- en: '[PRE23]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Reading data from a binary file
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从二进制文件读取数据
- en: 'Assume that we have generated a binary file called `C:\temp\tmp.bin` from the
    previous discussion. The file has just three numbers: 1, 2, and 3\. The following
    Python code is used to read them:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们已经生成了一个名为`C:\temp\tmp.bin`的二进制文件，文件中包含三个数字：1、2和3。以下Python代码用于读取它们：
- en: '[PRE24]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The contents of `d` are as follows:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`d`的内容如下：'
- en: '![Reading data from a binary file](img/B06175_06_12.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![从二进制文件读取数据](img/B06175_06_12.jpg)'
- en: Simple string manipulation
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单字符串操作
- en: 'For Python, we could assign a string to a variable without defining it in the
    first place:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Python，我们可以直接将一个字符串赋值给变量，而无需事先定义：
- en: '[PRE25]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'For the formula to convert an effective rate to another one, the second input
    value is a string. For example, `''s2a''`:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 用于将有效利率转换为其他利率的公式中，第二个输入值是一个字符串。例如，`'s2a'`：
- en: '[PRE26]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The `len()` function shows the length of a string, see the following code:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`len()`函数显示字符串的长度，见以下代码：'
- en: '[PRE27]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Here are several widely used ways to select substring:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是几种常用的子字符串选择方法：
- en: '[PRE28]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The corresponding output is shown here:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的输出如下所示：
- en: '![Simple string manipulation](img/B06175_06_13.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![简单字符串操作](img/B06175_06_13.jpg)'
- en: 'Many times, we want to remove the prevailing or trailing spaces. For those
    cases, three functions, called `strip()`, `lstrip()`, and `rstrip()` could be
    applied:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 很多时候，我们希望去除前后多余的空格。在这种情况下，可以使用三个函数，分别是`strip()`、`lstrip()`和`rstrip()`：
- en: '[PRE29]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The output is shown here:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![Simple string manipulation](img/B06175_06_14.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![简单字符串操作](img/B06175_06_14.jpg)'
- en: 'The following Python program generates the frequency table for all words used
    in the bible:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Python程序生成了圣经中所有单词的频率表：
- en: '[PRE30]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'An interested reader would download the pickle file from the author''s web
    page at [http://canisius.edu/~yany/python/uniqueWordsBible.pkl](http://canisius.edu/~yany/python/uniqueWordsBible.pkl).
    After typeing `x[0:10]`, we can see the first 10 words, see the following screenshot:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 有兴趣的读者可以从作者的网页下载pickle文件，地址为[http://canisius.edu/~yany/python/uniqueWordsBible.pkl](http://canisius.edu/~yany/python/uniqueWordsBible.pkl)。输入`x[0:10]`后，我们可以看到前10个单词，见以下截图：
- en: '![Simple string manipulation](img/B06175_06_15.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![简单字符串操作](img/B06175_06_15.jpg)'
- en: Python via Canopy
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Canopy运行Python
- en: 'This section is optional, especially for readers who have no issues with Python
    or Python via Anaconda. It is a good idea to have another super package to make
    our programming in Python easier. In this section, we will discuss two simple
    tasks: how to install Python via Canopy and how to check and install various Python
    modules. To install Python, go to the related web page at [https://store.enthought.com/downloads/#default](https://store.enthought.com/downloads/#default).
    After that, you will see the following screen:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 本节是可选的，特别是对于那些没有Python或通过Anaconda使用Python的读者。如果您想让Python编程更容易，安装另一个超强包是个不错的主意。在本节中，我们将讨论两个简单的任务：如何通过Canopy安装Python以及如何检查和安装各种Python模块。要安装Python，请访问相关网页：[https://store.enthought.com/downloads/#default](https://store.enthought.com/downloads/#default)。然后，您将看到以下屏幕：
- en: '![Python via Canopy](img/B06175_06_16.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![Python通过Canopy](img/B06175_06_16.jpg)'
- en: 'Depending on the operating system; you could download Canopy, such as winders
    32-bit. After launching Canopy, the following screen will appear:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 根据操作系统的不同，您可以下载Canopy，例如32位的Windows版本。启动Canopy后，以下屏幕将出现：
- en: '![Python via Canopy](img/B06175_06_17.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![Python通过Canopy](img/B06175_06_17.jpg)'
- en: 'The two most used panels are **Editor** and **Package Manager**. After clicking
    **Editor**, the following panel will pop up:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 最常用的两个面板是**编辑器**和**包管理器**。点击**编辑器**后，将弹出以下面板：
- en: '![Python via Canopy](img/B06175_06_18.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![Python通过Canopy](img/B06175_06_18.jpg)'
- en: 'Obviously, we could create a new file or select files from our existing programs.
    Let''s try the simplest one; see the following screenshot. After clicking the
    green bottom, we can run the program:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们可以创建一个新文件，或者从现有程序中选择文件。让我们尝试最简单的一个；见下图。点击绿色按钮后，我们可以运行程序：
- en: '![Python via Canopy](img/B06175_06_19.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![Python通过Canopy](img/B06175_06_19.jpg)'
- en: 'Alternatively, we could click **Run** on the menu bar and then choose the appropriate
    action. The most important advantage that Canopy could offer is that it is extremely
    easy to install various Python modules. After clicking **Package Manager**, we
    will see the following screen:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以点击菜单栏中的**运行**，然后选择相应的操作。Canopy最重要的优势之一是，它可以极其方便地安装各种Python模块。点击**包管理器**后，我们将看到以下屏幕：
- en: '![Python via Canopy](img/B06175_06_20.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![Python通过Canopy](img/B06175_06_20.jpg)'
- en: 'From the left-hand side, we see that there are 99 packages installed and 532
    are available. Assume that the Python model called `statsmodels` is not pre-installed.
    After clicking **Available** on the left-hand side, we search for this model by
    typing the keyword. After finding the module, we can decide whether we should
    install it. Quite often, multiple versions exist; see the following screenshot:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 从左侧，我们可以看到已安装了99个包，还有532个可用包。假设名为`statsmodels`的Python模块没有预先安装。在左侧点击**可用**后，我们通过输入关键词来搜索该模块。找到该模块后，我们可以决定是否安装。通常，可能会有多个版本，见下图：
- en: '![Python via Canopy](img/B06175_06_21.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![Python通过Canopy](img/B06175_06_21.jpg)'
- en: References
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Please refer to the following articles:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下文章：
- en: Carhart, Mark M., 1997, On Persistence in Mutual Fund Performance, Journal of
    Finance 52, 57-82.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Carhart, Mark M., 1997, 《共同基金表现的持久性》，《金融学杂志》52, 57-82。
- en: Fama, Eugene and Kenneth R. French, 1993, Common risk factors in the returns
    on stocks and bonds, Journal of Financial Economics 33, 3056.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fama, Eugene 和 Kenneth R. French, 1993, 《股票和债券回报的共同风险因素》，《金融经济学杂志》33, 3056。
- en: Fama, Eugene and Kenneth R. French, 1992, The cross-section of expected stock
    returns, Journal of Finance 47, 427-465.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fama, Eugene 和 Kenneth R. French, 1992, 《预期股票回报的横截面》，《金融学杂志》47, 427-465。
- en: 'String manipulation: [http://www.pythonforbeginners.com/basics/string-manipulation-in-python](http://www.pythonforbeginners.com/basics/string-manipulation-in-python)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串操作：[http://www.pythonforbeginners.com/basics/string-manipulation-in-python](http://www.pythonforbeginners.com/basics/string-manipulation-in-python)
- en: '**Appendix A – data case #3 - beta estimation**'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**附录A – 数据案例 #3 - 贝塔估计**'
- en: 'Objective: hands-on experience to estimate the market risk for a given set
    of companies:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 目标：通过实际操作估算给定公司组的市场风险：
- en: What are alpha and beta for those companies?
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些公司的Alpha和Beta值是多少？
- en: Comment on your results.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 评论您的结果。
- en: Based on your monthly returns, what are the means of annual returns for S&P500
    and risk-free rate?
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于您的月度回报率，S&P500和无风险利率的年回报均值是多少？
- en: If the expected market return is 12.5% per year and the expected risk-free rate
    is 0.25% per year, what are the costs of equity for those companies?
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果预期的市场年回报率为12.5%，预期的无风险年利率为0.25%，那么这些公司的股本成本是多少？
- en: What is the portfolio beta?
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 投资组合的贝塔值是多少？
- en: 'Computational tool: Python'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 计算工具：Python
- en: 'Period: From 1/2/ 2011 to 12/31/2016 (the last five years).'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 时间段：从2011年2月1日到2016年12月31日（过去五年）。
- en: 'Technical details:'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 技术细节：
- en: '![References](img/B06175_06_37.jpg)'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![参考资料](img/B06175_06_37.jpg)'
- en: '| i | Company name | Ticker | Industry | Shares |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| 序号 | 公司名称 | 股票代码 | 行业 | 股票数量 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| 1 | Wal-Mart Stores Inc. | WMT | Superstore | 1000 |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 沃尔玛商店公司 | WMT | 大型零售商 | 1000 |'
- en: '| 2 | Apple Inc. | AAPL | Computer | 2000 |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 苹果公司 | AAPL | 计算机 | 2000 |'
- en: '| 3 | International Business Machine | IBM | Computer | 1500 |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 国际商业机器公司 | IBM | 计算机 | 1500 |'
- en: '| 4 | General Electric Company | GE | Technology | 3000 |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 通用电气公司 | GE | 科技 | 3000 |'
- en: '| 5 | Citigroup | C | Banking | 1800 |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 花旗集团 | C | 银行 | 1800 |'
- en: 'Procedure for data downloading and manipulation:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 数据下载和处理的步骤：
- en: Stock monthly price data is from Yahoo finance ([http://finance.yahoo.com](http://finance.yahoo.com)).
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 股票月度价格数据来自雅虎财经 ([http://finance.yahoo.com](http://finance.yahoo.com))。
- en: Calculate monthly returns from monthly prices.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算月度回报数据。
- en: S&P500 is used as the market index and its ticker is `^GSPC`.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: S&P500被用作市场指数，其代码为`^GSPC`。
- en: Risk-free rate from Prof. French monthly dataset is used as our risk-free rate.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用法兰奇教授的月度数据集中的无风险利率作为我们的无风险利率。
- en: When merging those datasets, please pay attention to the order of their dates.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在合并这些数据集时，请注意它们的日期顺序。
- en: '**Note 1 – how to download data? Here we use S&P500 as an example (ticker is
    ^GSPC):**'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意 1 – 如何下载数据？这里以S&P500为例（代码是^GSPC）：**'
- en: Go to Yahoo Finance ([http://finance.yahoo.com](http://finance.yahoo.com)).
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问雅虎财经 ([http://finance.yahoo.com](http://finance.yahoo.com))。
- en: Enter ^`GSPC`.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`^GSPC`。
- en: Click **Historical Prices**.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**历史价格**。
- en: Choose starting date and ending dates. Click **Get Prices**.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择起始日期和结束日期。点击**获取价格**。
- en: Go to the bottom of the page and click **Download to spreadsheet**.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到页面底部并点击**下载到电子表格**。
- en: Give a name, such as `sp500.csv`.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给文件命名，例如`sp500.csv`。
- en: '**Note 2 – how to download a monthly risk-free rate?**'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意 2 – 如何下载月度无风险利率？**'
- en: Go to the Prof. French Data library at [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html).
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问法兰奇教授的数据库：[http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html)。
- en: Choose Fama-French 3 factors, see the following screenshot:![References](img/B06175_06_22.jpg)
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择Fama-French 3因子模型，见下图：![参考资料](img/B06175_06_22.jpg)
- en: 'The first several lines and the last several lines are given in the following
    screenshot:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图给出了前几行和最后几行的数据：
- en: '![References](img/B06175_06_23.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![参考资料](img/B06175_06_23.jpg)'
- en: Exercises
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: What is the meaning of CAPM? Is it a linear model?
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CAPM是什么意思？它是一个线性模型吗？
- en: What are the features of a one-factor linear model?
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一因子线性模型的特点是什么？
- en: What are the definitions of total risk and market risk and do you measure them?
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 总风险和市场风险的定义是什么？你如何衡量它们？
- en: Explain the similarity and difference between the following two equations:![Exercises](img/B06175_06_38.jpg)
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释以下两个方程式的相似性和区别：![练习](img/B06175_06_38.jpg)
- en: What is the relationship between total risk and market risk for a stock?
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一只股票的总风险与市场风险之间的关系是什么？
- en: Who should care about CAPM or what are the usages of the model?
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 谁应该关注CAPM，或者这个模型有什么用途？
- en: If stock A has a higher market risk than stock B, does it mean that A has a
    higher expected return as well? Explain.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果股票A的市场风险高于股票B，这是否意味着A的预期回报也更高？请解释。
- en: How do you measure different types of risk?
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何衡量不同类型的风险？
- en: How do you predict the expected market returns?
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何预测预期的市场回报？
- en: If we know the expected market risk premium, how do you predict the cost of
    equity of a firm?
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们知道预期的市场风险溢价，如何预测一家公司股本成本？
- en: What is the logic behind the following beta adjustment formula?![Exercises](img/B06175_06_39.jpg)
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下的贝塔调整公式背后有什么逻辑？！[练习](img/B06175_06_39.jpg)
- en: Construct a portfolio with unequal weight of 20%, 10%, 30%, 10%, 10%, and 20%.
    The list of stocks are Walmart (WMT), International Business Machine (IBM), Citi
    Group (C ), Microsoft (MSFT), Google (GOOG), and Dell (DELL). Estimate their monthly
    portfolio returns from 2001 to 2016.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建一个不等权重的投资组合，权重分别为20%、10%、30%、10%、10%和20%。股票列表包括沃尔玛（WMT）、国际商业机器公司（IBM）、花旗集团（C）、微软（MSFT）、谷歌（GOOG）和戴尔（DELL）。估算这些股票在2001年至2016年的月度投资组合回报。
- en: Find the beta of IBM from Yahoo Finance. Go to Yahoo Finance, then IBM, and
    then click Key Statistics on the left-hand side. [http://finance.yahoo.com/q/ks?s=IBM+Key+Statistics](http://finance.yahoo.com/q/ks?s=IBM+Key+Statistics)
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找IBM的贝塔值，访问雅虎财经，然后搜索IBM，点击左侧的“关键统计数据”。[http://finance.yahoo.com/q/ks?s=IBM+Key+Statistics](http://finance.yahoo.com/q/ks?s=IBM+Key+Statistics)
- en: Download IBM's historical price data and estimate its beta and compare.
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下载IBM的历史价格数据并估算其贝塔系数并进行比较。
- en: What is the total risk and market risk for DELL, IBM, GOOG, and C if you are
    using five-year monthly data?
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用五年的月度数据，DELL、IBM、GOOG和C的总风险和市场风险是多少？
- en: 'Write a Python program to estimate *α* and *β* for the following 10 stocks.
    The time period covered should be the last five years (1/2/2012-1/10/2017) by
    using monthly data from the Yahoo Finance and the Federal Reserve Web site (for
    risk-free rate):'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个Python程序，估算以下10只股票的*α*和*β*。所使用的时间范围应为过去五年（2012年1月2日到2017年1月10日），并使用来自雅虎财经和联邦储备网站的月度数据（用于无风险利率）：
- en: '|   | Company name | Ticker | Industry |'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '|   | 公司名称 | 股票代码 | 行业 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 1 | Family Dollar Stores | FDO | Retail |'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1 | 家庭美元商店 | FDO | 零售 |'
- en: '| 2 | Wal-Mart Stores | WMT | Superstore |'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 2 | 沃尔玛商店 | WMT | 大型超市 |'
- en: '| 3 | McDonald''s | MCD | Restaurants |'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 3 | 麦当劳 | MCD | 餐饮 |'
- en: '| 4 | Dell | DELL | Computer hardware |'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 4 | 戴尔 | DELL | 计算机硬件 |'
- en: '| 5 | International Business Machine | IBM | Computer |'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 5 | 国际商业机器公司 | IBM | 计算机 |'
- en: '| 6 | Microsoft | MSFT | Software |'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 6 | 微软 | MSFT | 软件 |'
- en: '| 7 | General Electric | GE | Conglomerates |'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 7 | 通用电气 | GE | 综合企业 |'
- en: '| 8 | Google | GOOG | Internet services |'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 8 | 谷歌 | GOOG | 网络服务 |'
- en: '| 9 | Apple | AAPL | Computer hardware |'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 9 | 苹果 | AAPL | 计算机硬件 |'
- en: '| 10 | eBay | EBAY | Internet services |'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 10 | eBay | EBAY | 网络服务 |'
- en: 'From this chapter, we know that we could call the `p4f.dailyReturn` function
    to download the historical data for a given ticker plus a designed time period;
    see the following code:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从这一章中我们知道，可以调用`p4f.dailyReturn`函数来下载某个股票代码的历史数据，并指定一个时间范围；参考以下代码：
- en: '[PRE31]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The function is shown in the following code:'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该函数如下所示：
- en: '[PRE32]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Obviously, the second and the third input formats of beginning dates and ending
    dates are not user-friendly; see `dailyReturn("ibm",(2016,1,1),(2016,1,10))`.
    Modify the program to make it more user-friendly, such as `dailyReturn2("ibm",
    20160101, 20160110)`.
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显然，第二种和第三种起始日期和结束日期的输入格式不够用户友好；参考`dailyReturn("ibm",(2016,1,1),(2016,1,10))`。修改程序使其更加用户友好，例如`dailyReturn2("ibm",
    20160101, 20160110)`。
- en: Download price data, as long as it's possible, from Yahoo Finance for a few
    stocks such as DELL, IBM, and MSFT. Then calculate their volatilities over several
    decades. For example, estimate volatilities for IBM over several five-year periods.
    What is the trend of the volatility?
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从雅虎财经下载股票价格数据（只要可能），比如DELL、IBM和MSFT。然后计算它们在若干十年中的波动率。例如，估算IBM在多个五年期的波动率。波动率的趋势如何？
- en: What is the correlation between (among) market indices? For example, you can
    download price data for S&P500 (its Yahoo ticker is `^GSPC`), and Dow Jones Industrial
    Average (`^DJI`) over the last 10 years. Then estimate their returns and calculate
    the corresponding correlation. Comment on your result.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 市场指数之间（或其中）相关性是多少？例如，你可以下载标准普尔500（其雅虎代码为`^GSPC`）和道琼斯工业平均指数（`^DJI`）的价格数据，时间范围为过去10年。然后估算它们的收益并计算相应的相关性。对结果进行评论。
- en: 'Which five stocks are most strongly correlated with IBM from 2006 to 2010?
    (Hint: there is not a unique answer. You can try a dozen stocks).'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪五只股票在2006到2010年期间与IBM的相关性最强？（提示：没有唯一答案。你可以尝试十几只股票）。
- en: On January 2nd 2017, your portfolio consists of 2,000 shares of IBM, 1,500 shares
    of Citigroup, and 500 shares of Microsoft (MSFT). What is the portfolio's beta?
    You can use past five-year historical to run CAPM.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2017年1月2日，你的投资组合包含2,000股IBM，1,500股花旗集团，以及500股微软（MSFT）。这个投资组合的贝塔系数是多少？你可以使用过去五年的历史数据来运行CAPM模型。
- en: What is the correlation between IBM stock returns and Microsoft (MSFT)?
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: IBM股票收益和微软(MSFT)的相关性是多少？
- en: Tip
  id: totrans-247
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can use the past 10 years' historical data to estimate the correlation.
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以使用过去10年的历史数据来估算相关性。
- en: 'Find the issue and correct it for the following code:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找出以下代码中的问题并进行修正：
- en: '[PRE33]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Write a Python function called `beta()` to offer a beta value, its significance
    value such as T-vale or P-value by using the last five years of historical data,
    plus S&P500 as the index.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为`beta()`的Python函数，利用过去五年的历史数据及标准普尔500指数，提供一个贝塔值及其显著性值，如T值或P值。
- en: Summary
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: '**Capital Asset Pricing Model** (**CAPM**) is probably the most widely used
    model in assets pricing. There are several reasons behind its popularity. First,
    it is quite simple. It is just a one-factor linear model. Second, it is quite
    easy to implement this one-factor model. Any interested reader could download
    historical price data for a listed company and a market index data to calculate
    their return, and then estimate the market risk for the stock. Third, this simplest
    one-factor asset pricing model could be served as the first model for other more
    advanced ones, such as Fama-French 3-factor, Fama-French-Carhart 4-factor models,
    and Fama-French 5 factor models, which will be introduced in the next chapter.'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '**资本资产定价模型**（**CAPM**）可能是资产定价中最广泛使用的模型。其流行背后有几个原因。首先，它非常简单。它只是一个单因子线性模型。其次，实现这个单因子模型相当容易。任何感兴趣的读者都可以下载上市公司和市场指数的历史价格数据，以计算它们的回报率，然后估算该股票的市场风险。第三，这个最简单的单因子资产定价模型可以作为其他更高级模型的基础，比如Fama-French三因子模型、Fama-French-Carhart四因子模型和Fama-French五因子模型，这些将在下一章介绍。'
