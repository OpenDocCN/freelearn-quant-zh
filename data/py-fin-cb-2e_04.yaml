- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Exploring Financial Time Series Data
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索金融时间序列数据
- en: In the previous chapters, we learned how to preprocess and visually explore
    financial time series data. This time, we will use algorithms and/or statistical
    tests to automatically identify potential issues (like outliers) and analyze the
    data for the existence of trends or other patterns (for example, mean-reversion).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，我们学习了如何预处理和可视化探索金融时间序列数据。这次，我们将使用算法和/或统计测试来自动识别潜在问题（如异常值），并分析数据是否存在趋势或其他模式（例如均值回归）。
- en: We will also dive deeper into the stylized facts of asset returns. Together
    with outlier detection, those recipes are particularly important when working
    with financial data. When we want to build models/strategies based on asset prices,
    we have to make sure that they can accurately capture the dynamics of the returns.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将深入探讨资产收益的典型事实。与异常值检测一起，这些方法在处理金融数据时尤为重要。当我们想基于资产价格构建模型/策略时，必须确保它们能够准确捕捉收益的动态变化。
- en: Having said that, most of the techniques described in this chapter are not restricted
    only to financial time series and can be effectively used in other domains as
    well.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，本章中描述的大多数技术不仅限于金融时间序列，也可以在其他领域有效使用。
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们将涵盖以下方法：
- en: Outlier detection using rolling statistics
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用滚动统计进行异常值检测
- en: Outlier detection with the Hampel filter
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用汉佩尔滤波器检测异常值
- en: Detecting changepoints in time series
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测时间序列中的变化点
- en: Detecting trends in time series
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测时间序列中的趋势
- en: Detecting patterns in a time series using the Hurst exponent
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用赫斯特指数检测时间序列中的模式
- en: Investigating stylized facts of asset returns
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查资产收益的典型事实
- en: Outlier detection using rolling statistics
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用滚动统计进行异常值检测
- en: While working with any kind of data, we often encounter observations that are
    significantly different from the majority, that is, **outliers**. In the financial
    domain, they can be the result of a wrong price, something major happening in
    the financial markets, or an error in the data processing pipeline. Many machine
    learning algorithms and statistical approaches can be heavily influenced by outliers,
    leading to incorrect/biased results. That is why we should identify and handle
    the outliers before creating any models.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理任何类型的数据时，我们经常遇到与大多数数据明显不同的观察值，即**异常值**。在金融领域，它们可能是由于价格错误、金融市场发生重大事件或数据处理管道中的错误引起的。许多机器学习算法和统计方法可能会受到异常值的严重影响，从而导致错误或有偏的结果。因此，在创建任何模型之前，我们应该识别并处理异常值。
- en: In this chapter, we will focus on point anomaly detection, that is, investigating
    whether a given observation stands out in comparison to the other ones. There
    are different sets of algorithms that can identify entire sequences of data as
    anomalous.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将重点讨论点异常检测，即调查给定观察值是否与其他值相比显得突出。有不同的算法可以识别整个数据序列为异常。
- en: In this recipe, we cover a relatively simple, filter-like approach to detect
    outliers based on the rolling average and standard deviation. We will use Tesla’s
    stock prices from the years 2019 to 2020.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在此方法中，我们介绍了一种相对简单的类似滤波的方法，通过滚动均值和标准差来检测异常值。我们将使用2019年至2020年期间的特斯拉股价数据。
- en: How to do it…
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Execute the following steps to detect outliers using the rolling statistics
    and mark them on the plot:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤，使用滚动统计检测异常值并在图表中标出：
- en: 'Import the libraries:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE0]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Download Tesla’s stock prices from 2019 to 2020 and calculate simple returns:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载2019年至2020年特斯拉的股价，并计算简单收益：
- en: '[PRE1]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Calculate the 21-day rolling mean and standard deviation:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算21天滚动均值和标准差：
- en: '[PRE2]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Join the rolling data back to the initial DataFrame:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将滚动数据重新合并到初始DataFrame中：
- en: '[PRE3]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Calculate the upper and lower thresholds:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算上下限阈值：
- en: '[PRE4]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Identify the outliers using the previously calculated thresholds:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用先前计算的阈值识别异常值：
- en: '[PRE5]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Plot the returns together with the thresholds and mark the outliers:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将收益与阈值一起绘制，并标出异常值：
- en: '[PRE6]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Running the snippet generates the following plot:'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行代码片段生成以下图表：
- en: '![](../Images/B18112_04_01.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_01.png)'
- en: 'Figure 4.1: Outliers identified using the filtering algorithm'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1：使用过滤算法识别的异常值
- en: In the plot, we can observe outliers marked with a black dot, together with
    the thresholds used for determining them. One thing to notice is that when there
    are two large (in absolute terms) returns in the vicinity of one another, the
    algorithm identifies the first one as an outlier and the second one as a regular
    observation. This might be due to the fact that the first outlier enters the rolling
    window and affects the moving average/standard deviation. We can observe a situation
    like that in the first quarter of 2020.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在图表中，我们可以观察到标记为黑点的异常值，并与用于确定这些异常值的阈值一起显示。需要注意的一点是，当两个大（绝对值上）收益值彼此接近时，算法将第一个识别为异常值，而将第二个识别为常规观测值。这可能是因为第一个异常值进入了滚动窗口并影响了移动平均/标准差。我们可以在2020年第一季度看到类似的情况。
- en: We should also be aware of the so-called ghost effect. When a single outlier
    enters the rolling window, it inflates the values of the rolling statistics for
    as long as it remains in the rolling window.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还应该意识到所谓的“幽灵效应”。当一个单一的异常值进入滚动窗口时，它会在该异常值停留在窗口内的时间内，膨胀滚动统计量的值。
- en: How it works…
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: After importing the libraries, we downloaded Tesla’s stock prices, calculated
    the returns, and only kept a single column — the one with the returns — for further
    analysis.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在导入库之后，我们下载了特斯拉的股票价格，计算了收益，并仅保留了一个列——收益列，以便进一步分析。
- en: To identify the outliers, we started by calculating the moving statistics using
    a 21-day rolling window. We used 21 as this is the average number of trading days
    in a month, and in this example, we work with daily data. However, we can choose
    different values, and then the moving average will react more quickly/slowly to
    changes. We can also use the (exponentially) weighted moving average if we find
    it more meaningful for our particular case. To implement the moving metrics, we
    used the combination of the `rolling` and `agg` methods of a `pandas` DataFrame.
    After calculating the statistics, we dropped one level of the `MultiIndex` to
    simplify the analysis.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 为了识别异常值，我们首先通过使用21天滚动窗口来计算移动统计量。我们选择21作为窗口大小，因为这是一个月内的平均交易天数，在本例中，我们使用的是日数据。然而，我们可以选择不同的值，这样移动平均值将对变化作出更快或更慢的反应。如果我们认为对特定情况更有意义，也可以使用（指数）加权移动平均。为了实现移动指标，我们使用了`rolling`方法和`agg`方法结合的`pandas`
    DataFrame。计算完统计量后，我们删除了`MultiIndex`中的一个级别，以简化分析。
- en: When applying the rolling window, we used the previous 21 observations to calculate
    the statistics. So the first value is available for the 22nd row of the DataFrame.
    By using this approach, we do not “leak” future information into the algorithm.
    However, there might be cases when we do not really mind such leakage. In those
    cases, we might want to use centered windows. Then, using the same window size,
    we would consider the past 10 observations, the current one, and the next 10 future
    data points. To do so, we can use the `center` argument of the `rolling` method.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用滚动窗口时，我们使用了之前21个观测值来计算统计量。因此，第22行的数据可以得到第一个值。通过这种方法，我们避免了将未来的信息“泄露”到算法中。然而，可能存在一些情况下，我们并不介意这种信息泄露。在这些情况下，我们可能想使用居中窗口。这样，使用相同的窗口大小，我们将考虑过去10个观测值、当前值和接下来的10个未来数据点。为了做到这一点，我们可以使用`rolling`方法的`center`参数。
- en: In *Step 4*, we joined the rolling statistics back to the original DataFrame.
    Then, we created additional columns containing the upper and lower decision thresholds.
    We decided to use 3 standard deviations above/below the rolling average as the
    boundaries. Any observation lying beyond them was considered an outlier. We should
    keep in mind that the logic of the filtering algorithm is based on the assumption
    of the stock returns being normally distributed. Later in the chapter, we will
    see that this assumption does not hold empirically. We coded that condition as
    a separate column in *Step 6*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤4*中，我们将滚动统计量重新合并到原始DataFrame中。然后，我们创建了包含上下决策阈值的额外列。我们决定使用滚动平均值上下方3个标准差作为边界。任何超出这些边界的观察值都被视为异常值。我们应该记住，过滤算法的逻辑是基于股票收益服从正态分布的假设。稍后在本章中，我们将看到这个假设在经验上并不成立。在*步骤6*中，我们将该条件作为一个单独的列进行编码。
- en: In the last step, we visualized the returns series, along with the upper/lower
    decision thresholds, and marked the outliers with a black dot. To make the plot
    more readable, we moved the legend outside of the plotting area.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一步，我们可视化了收益序列，并标出了上下决策阈值，同时用黑点标记了异常值。为了使图表更易读，我们将图例移出了绘图区域。
- en: In real-life cases, we should not only identify the outliers but also treat
    them, for example, by capping them at the maximum/minimum acceptable value, replacing
    them with interpolated values, or by following any of the other possible approaches.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际应用中，我们不仅需要识别异常值，还需要对其进行处理，例如将它们限制在最大/最小可接受值内，使用插值值替换它们，或采用其他可能的处理方法。
- en: There’s more…
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: Defining functions
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义函数
- en: 'In this recipe, we demonstrated how to carry out all the steps required for
    identifying the outliers as separate operations on the DataFrame. However, we
    can quickly encapsulate all of the steps into a single function and make it generic
    to handle more use cases. You can find an example of how to do so below:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们演示了如何将识别异常值的所有步骤作为对 DataFrame 的单独操作来执行。然而，我们可以快速将所有步骤封装到一个通用函数中，以处理更多的使用场景。下面是一个如何做到这一点的示例：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The function returns a `pd.Series` containing Boolean flags indicating whether
    a given observation is an outlier or not. An additional benefit of using a function
    is that we can easily experiment with using different parameters (such as window
    sizes and the numbers of standard deviations used for creating the thresholds).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数返回一个 `pd.Series`，其中包含布尔标志，指示给定观测值是否为异常值。使用函数的一个额外好处是，我们可以轻松地通过不同的参数（例如窗口大小和用于创建阈值的标准差倍数）进行实验。
- en: Winsorization
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 温莎化
- en: Another popular approach for treating outliers is **winsorization**. It is based
    on replacing outliers in data to limit their effect on any potential calculations.
    It’s easier to understand winsorization using an example. A 90% winsorization
    results in replacing the top 5% of values with the 95th percentile. Similarly,
    the bottom 5% is replaced using the value of the 5th percentile. We can find the
    corresponding `winsorize` function in the `scipy` library.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种处理异常值的流行方法是 **温莎化**。它基于通过替换数据中的异常值来限制它们对任何潜在计算的影响。通过一个示例可以更容易理解温莎化。90% 的温莎化将会把前
    5% 的值替换为第 95 百分位数。同样，底部 5% 的值会被替换为第 5 百分位数。我们可以在 `scipy` 库中找到相应的 `winsorize` 函数。
- en: Outlier detection with the Hampel filter
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Hampel 滤波器进行异常值检测
- en: We will cover one more algorithm used for outlier detection in time series—the
    **Hampel filter**. Its goal is to identify and potentially replace outliers in
    a given series. It uses a centered sliding window of size 2*x* (given *x* observations
    before/after) to go over the entire series.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将介绍另一种用于时间序列异常值检测的算法——**Hampel 滤波器**。它的目标是识别并可能替换给定序列中的异常值。它使用一个大小为 2*x* 的居中滑动窗口（给定
    *x* 个前后观测值）遍历整个序列。
- en: For each of the sliding windows, the algorithm calculates the median and the
    median absolute deviation (a form of a standard deviation).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个滑动窗口，算法计算中位数和中位数绝对偏差（标准差的一种形式）。
- en: For the median absolute deviation to be a consistent estimator for the standard
    deviation, we have to multiply it by a constant scaling factor *k*, which is dependent
    on the distribution. For Gaussian, it is approximately 1.4826.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使中位数绝对偏差成为标准差的一致估计量，我们必须将其乘以一个常数缩放因子 *k*，该因子依赖于分布。对于高斯分布，它大约是 1.4826。
- en: Similar to the previously covered algorithm, we treat an observation as an outlier
    if it differs from the window’s median by more than a determined number of standard
    deviations. We can then replace such an observation with the window’s median.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于之前介绍的算法，如果观测值与窗口的中位数的差异超过了预定的标准差倍数，我们就将其视为异常值。然后，我们可以用窗口的中位数替换这个观测值。
- en: We can experiment with the different settings of the algorithm’s hyperparameters.
    For example, a higher standard deviation threshold makes the filter more forgiving,
    while a lower one results in more data points being classified as outliers.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过调整算法超参数的不同设置来进行实验。例如，较高的标准差阈值使得滤波器更加宽容，而较低的标准差阈值则会使更多的数据点被归类为异常值。
- en: In this recipe, we will use the Hampel filter to see if any observations in
    a time series of Tesla’s prices from 2019 to 2020 can be considered outliers.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们将使用 Hampel 滤波器查看 2019 年至 2020 年特斯拉股价的时间序列中是否有任何观测值可以视为异常值。
- en: How to do it…
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Execute the following steps to identify outliers using the Hampel filter:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤使用 Hampel 滤波器识别异常值：
- en: 'Import the libraries:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE8]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Download Tesla’s stock prices from the years 2019 to 2020 and calculate simple
    returns:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载 2019 至 2020 年的特斯拉股价并计算简单收益：
- en: '[PRE9]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Instantiate the `HampelFilter` class and use it for detecting the outliers:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例化 `HampelFilter` 类并使用它来检测异常值：
- en: '[PRE10]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Plot Tesla’s stock price and mark the outliers:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制特斯拉的股价并标记异常值：
- en: '[PRE11]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Running the code generates the following plot:'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行代码生成了以下图形：
- en: '![](../Images/B18112_04_02.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_02.png)'
- en: 'Figure 4.2: Tesla’s stock prices and the outliers identified using the Hampel
    filter'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2：特斯拉股价及使用汉普尔滤波器识别的异常值
- en: Using the Hampel filter, we identified seven outliers. At first glance, it might
    be interesting and maybe even a bit counterintuitive that the biggest spike and
    drop around September 2020 were not detected, but some smaller jumps later on
    were. We have to remember that this filter uses a centered window, so while looking
    into the observation at the peak of the spike, the algorithm also looks at the
    previous and next five observations, which include high values as well.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用汉普尔滤波器，我们识别了七个异常值。乍一看，可能会觉得有点意外，甚至有些反直觉，因为2020年9月左右最大的波动（涨幅和跌幅）并未被检测到，而是之后出现的一些较小波动被识别为异常值。我们需要记住，这个滤波器使用的是一个中心窗口，因此，在观察波动峰值处的数据时，算法也会查看前后各五个数据点，这其中也包含了一些高值。
- en: How it works…
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The first two steps are quite standard—we imported the libraries, downloaded
    the stock prices, and calculated simple returns.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 前两步是相当标准的——我们导入了库，下载了股票价格，并计算了简单收益。
- en: In *Step 3*, we instantiated the object of the `HampelFilter` class. We used
    the filter’s implementation from the `sktime` library, which we will also explore
    further in *Chapter 7*, *Machine Learning-Based Approaches to Time Series Forecasting*.
    We specified that we want to use a window of length 10 (5 observations before
    and 5 after) and for the filter to return a Boolean flag whether the observation
    is an outlier or not. The default setting of `return_bool` will return a new series
    in which the outliers will be replaced with NaNs. That is because the authors
    of `sktime` suggest using the filter for identifying and removing the outliers,
    and then using a companion `Imputer` class for filling in the missing values.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第3步*中，我们实例化了`HampelFilter`类的对象。我们使用了来自`sktime`库的滤波器实现，后者我们将在*第7章*，*基于机器学习的时间序列预测方法*中进一步探讨。我们指定了使用长度为10的窗口（前5个观察值和后5个观察值），并要求滤波器返回一个布尔标志，指示观察值是否为异常值。`return_bool`的默认设置会返回一个新序列，其中异常值会被替换为NaN。这是因为`sktime`的作者建议使用该滤波器来识别并去除异常值，然后使用一个配套的`Imputer`类来填充缺失值。
- en: '`sktime` uses methods similar to those available in `scikit-learn`, so we first
    need to `fit` the transformer object to the data and then `transform` it to obtain
    the flag indicating whether the observation is an outlier. Here, we completed
    two steps at once by using the `fit_transform` method applied to the adjusted
    close price.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`sktime`使用的方法与`scikit-learn`中可用的方法类似，因此我们首先需要将转换器对象`fit`到数据上，然后使用`transform`来获得指示观察值是否为异常值的标志。这里，我们通过将`fit_transform`方法应用于调整后的收盘价，完成了两步操作。'
- en: 'Please refer to *Chapter 13*, *Applied Machine Learning: Identifying Credit
    Default,* for more information about using `scikit-learn`''s fit/transform API.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅*第13章*，*应用机器学习：识别信用违约*，了解更多关于使用`scikit-learn`的fit/transform API的信息。
- en: In the last step, we plotted the stock price as a line plot and marked the outliers
    as black dots.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一步中，我们绘制了股票价格的折线图，并将异常值标记为黑点。
- en: There’s more…
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: 'For comparison’s sake, we can also apply the very same filter to the returns
    calculated using the adjusted close prices. This way, we can see if the algorithm
    will identify different observations as outliers:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为了对比，我们还可以将相同的滤波器应用于使用调整后的收盘价计算的收益。这样我们可以看到算法是否会识别不同的观察值为异常值：
- en: 'Identify the outliers among the stock returns:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 识别股票收益中的异常值：
- en: '[PRE12]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Because we have already instantiated the `HampelFilter`, we do not need to do
    it again. We can just fit it to the new data (returns) and transform it to get
    the Boolean flag.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于我们已经实例化了`HampelFilter`，所以不需要再次实例化。我们只需将其拟合到新数据（收益）并进行转换，以获得布尔标志。
- en: 'Plot Tesla’s daily returns and mark the outliers:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制特斯拉的每日收益并标记异常值：
- en: '[PRE13]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Running the code generates the following plot:'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行代码生成了以下图形：
- en: '![](../Images/B18112_04_03.png)'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_03.png)'
- en: 'Figure 4.3: Tesla’s stock returns and the outliers identified using the Hampel
    filter'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图4.3：特斯拉的股市收益及使用汉普尔滤波器识别的异常值
- en: We can immediately see that the algorithm detected more outliers when using
    the returns instead of the prices.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以立即看到，使用收益而非价格时，算法检测到了更多的异常值。
- en: 'Investigate the overlap in outliers identified for the prices and returns:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调查价格和收益中识别出的异常值的重叠情况：
- en: '[PRE14]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](../Images/B18112_04_04.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_04.png)'
- en: 'Figure 4.4: The date that was identified as an outlier using both prices and
    returns'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.4：使用价格和收益率识别为离群点的日期
- en: There is only a single date that was identified as an outlier based on both
    prices and returns.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 基于价格和收益率，只有一个日期被识别为离群点。
- en: See also
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: 'Anomaly/outlier detection is an entire field in data science, and there are
    numerous approaches to identifying suspicious observations. We have covered two
    algorithms that are especially suitable for time series problems. However, there
    are many possible approaches to anomaly detection in general. We will cover outlier
    detection methods used for data other than time series in *Chapter 13*, *Applied
    Machine Learning: Identifying Credit Default*. Some of them can also be used for
    time series.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 异常/离群点检测是数据科学中的一个完整领域，存在许多识别可疑观测值的方法。我们已经介绍了两种特别适用于时间序列问题的算法。然而，通常情况下，有很多可能的异常检测方法。我们将在*第13章*中介绍用于时间序列以外数据的离群点检测方法，*应用机器学习：识别信用违约*。其中一些方法也可以用于时间序列。
- en: 'Here are a few interesting anomaly/outlier detection libraries:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些有趣的异常/离群点检测库：
- en: '[https://github.com/datamllab/tods](https://github.com/datamllab/tods)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/datamllab/tods](https://github.com/datamllab/tods)'
- en: '[https://github.com/zillow/luminaire/](https://github.com/zillow/luminaire/)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/zillow/luminaire/](https://github.com/zillow/luminaire/)'
- en: '[https://github.com/signals-dev/Orion](https://github.com/signals-dev/Orion)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/signals-dev/Orion](https://github.com/signals-dev/Orion)'
- en: '[https://pycaret.org/anomaly-detection/](https://pycaret.org/anomaly-detection/)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://pycaret.org/anomaly-detection/](https://pycaret.org/anomaly-detection/)'
- en: '[https://github.com/linkedin/luminol](https://github.com/linkedin/luminol)—a
    library created by LinkedIn; unfortunately, it is not actively maintained anymore'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/linkedin/luminol](https://github.com/linkedin/luminol)—由LinkedIn创建的一个库；不幸的是，它目前不再积极维护'
- en: '[https://github.com/twitter/AnomalyDetection](https://github.com/twitter/AnomalyDetection)—this
    R package (created by Twitter) is quite famous and was ported to Python by some
    individual contributors'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/twitter/AnomalyDetection](https://github.com/twitter/AnomalyDetection)—这个由Twitter创建的R包非常著名，且已由一些个人贡献者移植到Python'
- en: 'A few more references:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 其他一些参考资料：
- en: 'Hampel F. R. 1974\. “The influence curve and its role in robust estimation.”
    *Journal of the American Statistical Association*, 69: 382-393—a paper introducing
    the Hampel filter'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Hampel F. R. 1974\. “影响曲线及其在稳健估计中的作用。” *美国统计学会期刊*，69: 382-393—介绍Hampel滤波器的论文'
- en: '[https://www.sktime.org/en/latest/index.html](https://www.sktime.org/en/latest/index.html)—documentation
    of `sktime`'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.sktime.org/en/latest/index.html](https://www.sktime.org/en/latest/index.html)—`sktime`的文档'
- en: Detecting changepoints in time series
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测时间序列中的变化点
- en: A **changepoint** can be defined as a point in time when the probability distribution
    of a process or time series changes, for example, when there is a change to the
    mean in the series.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**变化点**可以定义为某一时刻，过程或时间序列的概率分布发生变化的点，例如，当序列中的均值发生变化时。'
- en: 'In this recipe, we will use the **CUSUM** (cumulative sum) method to detect
    shifts of the means in a time series. The implementation used in the recipe has
    two steps:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将使用**CUSUM**（累积和）方法来检测时间序列中的均值变化。该方法在实现中有两个步骤：
- en: Finding the changepoint—an iterative process is started by first initializing
    a changepoint in the middle of the given time series. Then, the CUSUM approach
    is carried out based on the selected point. The following changepoint is located
    where the previous CUSUM time series is either maximized or minimized (depending
    on the direction of the changepoint we want to locate). We continue this process
    until a stable changepoint is located or we exceed the maximum number of iterations.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找变化点——首先在给定时间序列的中间初始化一个变化点，然后基于选定的点执行CUSUM方法。接下来的变化点通过寻找前一个CUSUM时间序列的最大值或最小值来定位（具体取决于我们想要找到的变化点方向）。我们将继续这个过程，直到找到一个稳定的变化点或超过最大迭代次数。
- en: Testing its statistical significance—a log-likelihood ratio test is used to
    test if the mean of the given time series changes at the identified changepoint.
    The null hypothesis states that there is no change in the mean of the series.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试其统计显著性——使用对数似然比检验来测试给定时间序列的均值是否在识别出的变化点处发生了变化。原假设认为序列的均值没有变化。
- en: 'Some further remarks about the implementation of the algorithm:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 关于算法实现的进一步说明：
- en: The algorithm can be used to detect both upward and downward shifts.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该算法可用于检测向上和向下的变化点。
- en: The algorithm can find at most one upward and one downward changepoint.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该算法最多可以找到一个向上和一个向下的变化点。
- en: By default, the changepoints are only reported if the null hypothesis is rejected.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，仅在拒绝原假设时才会报告变化点。
- en: Under the hood, the Gaussian distribution is used to calculate the CUSUM time
    series value and perform the hypothesis test.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在底层，使用高斯分布来计算CUSUM时间序列值并执行假设检验。
- en: In this recipe, we will apply the CUSUM algorithm to identify changepoints in
    Apple’s stock prices from 2020.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个案例中，我们将应用CUSUM算法来识别2020年苹果股票价格中的变化点。
- en: How to do it…
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现…
- en: 'Execute the following steps to detect changepoints in Apple’s stock price:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以检测苹果公司股票价格中的变化点：
- en: 'Import the libraries:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE15]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Download Apple’s stock price from 2020:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载2020年苹果公司的股票价格：
- en: '[PRE16]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Keep only the adjusted close price, reset the index, and rename the columns:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅保留调整后的收盘价格，重置索引，并重命名列：
- en: '[PRE17]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Convert the DataFrame into a `TimeSeriesData` object:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将DataFrame转换为`TimeSeriesData`对象：
- en: '[PRE18]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Instantiate and run the changepoint detector:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例化并运行变化点检测器：
- en: '[PRE19]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Running the code generates the following plot:'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行代码会生成以下图表：
- en: '![](../Images/B18112_04_05.png)'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_05.png)'
- en: 'Figure 4.5: The changepoint detected by the CUSUM algorithm'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图4.5：CUSUM算法检测到的变化点
- en: We see that the algorithm picked the biggest jump as the changepoint.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们看到算法选择了最大的跳跃作为变化点。
- en: 'Investigate the detected changepoint in more detail:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更详细地调查检测到的变化点：
- en: '[PRE20]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'What returns the following information about the detected changepoint:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回以下关于检测到的变化点的信息：
- en: '[PRE21]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The identified changepoint is on the 30th of July and indeed the stock price
    jumped from $95.4 on that day to $105.4 on the next day, mostly due to a strong
    quarterly earnings report.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 识别出的变化点发生在7月30日，确实股票价格从当日的$95.4跃升至次日的$105.4，主要由于强劲的季度财报。
- en: How it works…
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In the first step, we imported the libraries. For detecting the changepoints,
    we used the `kats` library from Facebook. Then, we fetched Apple’s stock prices
    from 2020\. For this analysis, we used the adjusted close prices.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一步中，我们导入了所需的库。为了检测变化点，我们使用了Facebook的`kats`库。接着，我们获取了2020年苹果的股票价格。对于这个分析，我们使用了调整后的收盘价格。
- en: To work with `kats`, we need to have our data in a particular format. That is
    why in *Step 3*, we only kept the adjusted close prices, reset the index without
    dropping it (as we need that column), and renamed the columns. One thing to remember
    is that the column containing the dates/datetimes must be called `time`. In *Step
    4*, we converted the DataFrame into a `TimeSeriesData` object, which is a representation
    used by `kats`.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用`kats`，我们需要将数据转换为特定格式。因此，在*步骤3*中，我们仅保留了调整后的收盘价格，重置了索引而没有删除它（因为我们需要该列），并且重命名了列。需要记住的一点是，包含日期/时间的列必须命名为`time`。在*步骤4*中，我们将DataFrame转换为`TimeSeriesData`对象，这是`kats`使用的表示形式。
- en: In *Step 5*, we instantiated the `CUSUMDetector` using the previously created
    data. We did not change any default settings. Then, we identified the changepoints
    using the `detector` method. For this analysis, we were only interested in increases,
    so we specified the `change_directions` argument. Lastly, we plotted the detected
    changepoint using the `plot` method of the `cusum_detector` object. One thing
    to note here is that we had to provide the identified changepoints as input for
    the method.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤5*中，我们使用先前创建的数据实例化了`CUSUMDetector`。我们没有更改任何默认设置。然后，我们使用`detector`方法识别变化点。对于这个分析，我们只关心上升的变化点，因此我们指定了`change_directions`参数。最后，我们使用`cusum_detector`对象的`plot`方法绘制检测到的变化点。需要注意的一点是，我们必须将已识别的变化点作为输入提供给该方法。
- en: 'In the very last step, we looked further into the detected changepoints. The
    returned object is a list containing two elements: the `TimeSeriesChangePoint`
    object containing information, such as the date of the identified changepoint
    and the algorithm’s confidence, and a metadata object. By using the latter’s `__dict__`
    method, we can access more information about the point: the direction, the mean
    before/after the changepoint, the p-value of the likelihood ratio test, and more.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一步，我们进一步检查了检测到的变化点。返回的对象是一个包含两个元素的列表：`TimeSeriesChangePoint`对象，包含关于变化点的信息，如变化点的日期和算法的置信度，以及一个元数据对象。通过使用后者的`__dict__`方法，我们可以获取有关该点的更多信息：变化的方向、变化点前后的均值、似然比检验的p值等。
- en: There’s more…
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: The library offers quite a few more interesting functionalities regarding changepoint
    detection. We will only cover two of them, and I highly encourage you to explore
    them further on your own.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 该库还提供了更多有关变点检测的有趣功能。我们将只介绍其中的两种，强烈鼓励你自行进一步探索。
- en: Restricting the detection window
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 限制检测窗口
- en: 'The first one is to restrict the window in which we want to look for the changepoint.
    We can do so using the `interest_window` argument of the `detector` method. Below,
    we only looked for a changepoint between the 200th and 250th observations (reminder:
    this is a trading year and not a full calendar year, so there are only around
    252 observations).'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个方法是限制我们想要查找变点的窗口。我们可以通过 `detector` 方法的 `interest_window` 参数来做到这一点。下面，我们只在第
    200 到第 250 个观测值之间查找变点（提醒：这是一个交易年份，而非完整的日历年，因此只有大约 252 个观测值）。
- en: 'Narrow down the window in which we want to search for the changepoint:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 缩小我们想要查找变点的窗口：
- en: '[PRE22]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We can see the modified results in the following plot:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在以下图表中看到修改后的结果：
- en: '![](../Images/B18112_04_06.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_06.png)'
- en: 'Figure 4.6: Changepoint identified between the 200^(th) and 250^(th) observations
    in the series'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6：在序列中的第 200^(th) 到第 250^(th) 个观测值之间识别到变点
- en: Aside from the identified changepoint, we can also see the window we have selected.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 除了已识别的变点外，我们还可以看到我们选择的窗口。
- en: Using different changepoint detection algorithms
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用不同的变点检测算法
- en: The `kats` library also contains other interesting algorithms for changepoint
    detection. One of them is `RobustStatDetector`. Without going into too much detail
    about the algorithm itself, it smoothens the data using moving averages before
    identifying the points of interest. Another interesting feature of the algorithm
    is that it can detect multiple changepoints in a single run.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`kats` 库还包含其他有趣的变点检测算法。其之一是 `RobustStatDetector`。不深入讲解算法本身，它在识别兴趣点之前会使用移动平均对数据进行平滑处理。该算法的另一个有趣特点是，它可以在一次运行中检测多个变点。'
- en: 'Use another algorithm to detect changepoints (`RobustStatDetector`):'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 使用另一个算法检测变点（`RobustStatDetector`）：
- en: '[PRE23]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Running the snippet generates the following plot:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 运行该代码片段会生成以下图表：
- en: '![](../Images/B18112_04_07.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_07.png)'
- en: 'Figure 4.7: Identifying changepoints using the RobustStatDetector'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7：使用 RobustStatDetector 识别变点
- en: This time, the algorithm picked up two additional changepoints compared to the
    previous attempt.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，算法比之前的尝试多检测到了两个变点。
- en: Another interesting algorithm provided by the `kats` library is the **Bayesian
    Online Change Point Detection** (**BOCPD**), for which we provide a reference
    in the *See also* section.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`kats` 库提供的另一个有趣算法是**贝叶斯在线变点检测**（**BOCPD**），我们在*参见*部分提供了相关参考。'
- en: See also
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '[https://github.com/facebookresearch/Kats](https://github.com/facebookresearch/Kats)—the
    GitHub repository of Facebook’s Kats'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/facebookresearch/Kats](https://github.com/facebookresearch/Kats)—Facebook
    Kats 的 GitHub 仓库'
- en: 'Page, E. S. 1954\. “Continuous inspection schemes.” Biometrika 41(1): 100–115'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Page, E. S. 1954\. “连续检验方案。”Biometrika 41(1): 100–115'
- en: Adams, R. P., & MacKay, D. J. (2007). *Bayesian online changepoint detection*.
    arXiv preprint arXiv:0710.3742
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adams, R. P., & MacKay, D. J. (2007). *贝叶斯在线变点检测*。arXiv 预印本 arXiv:0710.3742
- en: Detecting trends in time series
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列中的趋势检测
- en: In the previous recipe, we covered changepoint detection. Another class of algorithms
    can be used for trend detection, that is, identifying significant and prolonged
    changes in time series.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的示例中，我们介绍了变点检测。另一类算法可以用于趋势检测，即识别时间序列中的显著且持续的变化。
- en: The `kats` library offers a trend detection algorithm based on the non-parametric
    **Mann-Kendall** (**MK**) test. The algorithm iteratively conducts the MK test
    on windows of a specified size and returns the starting points of each window
    for which this test turned out to be statistically significant.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`kats` 库提供了一种基于非参数**Mann-Kendall**（**MK**）检验的趋势检测算法。该算法会在指定大小的窗口上迭代执行 MK 检验，并返回每个窗口的起始点，在这些窗口中，MK
    检验结果显示出统计显著性。'
- en: 'To detect whether there is a significant trend in the window, the test inspects
    the monotonicity of the increases/decreases in the time series rather than the
    magnitude of the change in values. The MK test uses a test statistic called Kendall’s
    Tau, and it ranges from -1 to 1\. We can interpret the values as follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检测窗口中是否存在显著的趋势，测试会检查时间序列中的增减是否单调，而不是值变化的幅度。MK测试使用了一种叫做肯德尔Tau的统计量，它的范围从-1到1。我们可以这样解读这些值：
- en: -1 indicates a perfectly monotonic decline
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: -1表示完全单调下降
- en: 1 indicates a perfectly monotonic increase
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1表示完全单调增加
- en: 0 indicates that there is no directional trend in the series
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0表示序列中没有方向性的趋势
- en: By default, the algorithm will only return periods in which the results were
    statistically significant.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，算法只会返回统计上显著的时间段。
- en: You might be wondering why use an algorithm for detecting trends when it is
    easy to see them on the plot? That is very true; however, we should remember that
    the goal of using those algorithms is to look at more than a single series and
    time period at a time. We want to be able to detect trends at scale, for example,
    finding upward trends within hundreds of time series.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，为什么要使用算法来检测趋势，当在图表上它们很容易就能看出来呢？这是非常正确的；然而，我们应该记住，使用这些算法的目的是一次性查看多个序列和时间段。我们希望能够大规模地检测趋势，例如，在成百上千的时间序列中找到上升趋势。
- en: In this recipe, we will use the trend detection algorithm to investigate whether
    there were periods with significant increasing trends in NVIDIA’s stock prices
    from 2020.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将使用趋势检测算法来研究2020年NVIDIA股票价格中是否存在显著的上升趋势的时间段。
- en: How to do it…
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现……
- en: 'Execute the following steps to detect increasing trends in NVIDIA’s stock prices
    from 2020:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以检测2020年NVIDIA股票价格中的上升趋势：
- en: 'Import the libraries:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE24]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Download NVIDIA’s stock prices from 2020:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载2020年NVIDIA的股票价格：
- en: '[PRE25]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Keep only the adjusted close price, reset the index, and rename the columns:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅保留调整后的收盘价，重置索引并重命名列：
- en: '[PRE26]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Convert the DataFrame into a `TimeSeriesData` object:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将DataFrame转换为`TimeSeriesData`对象：
- en: '[PRE27]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Instantiate and run the trend detector:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例化并运行趋势检测器：
- en: '[PRE28]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Plot the detected time points:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制检测到的时间点：
- en: '[PRE29]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Running the line results in the following plot:'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行这行代码会得到以下图表：
- en: '![](../Images/B18112_04_08.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_08.png)'
- en: 'Figure 4.8: The identified starting points of upward trends'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8：识别出的上升趋势起点
- en: In *Figure 4.8*, we can see a lot of periods with some gaps in between. What
    is important to know is that the red vertical bars are not the detected windows,
    but rather a lot of detected trend starting points right next to each other. Running
    the selected configuration of the algorithm on our data resulted in identifying
    95 periods of an increasing trend, which clearly have a lot of overlap.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图 4.8*中，我们可以看到许多时间段，之间有一些间隔。需要知道的重要信息是，红色的竖条并不是检测到的窗口，而是许多紧挨在一起的检测到的趋势起点。对我们的数据运行选择的算法配置后，识别出了95个上升趋势的时间段，这些时间段显然有很大的重叠。
- en: How it works…
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: The first four steps are very similar to the previous recipe, with the only
    difference being that this time we downloaded NVIDIA’s stock price from 2020\.
    Please refer to the previous recipe for more information about preparing the data
    for working with the `kats` library.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 前四个步骤与之前的做法非常相似，唯一的不同是这次我们下载了2020年NVIDIA的股票价格。有关准备数据以便使用`kats`库的更多信息，请参考之前的食谱。
- en: In *Step 5*, we instantiated the trend detector (`MKDetector` class) while providing
    the data and changing the threshold of the Tau coefficient to 0.9\. This way,
    we obtain only the periods with higher trend intensity. Then, we used the `detector`
    method to find the time points. We were interested in increasing trends (`direction="up"`)
    over a window of 30 days.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤 5*中，我们实例化了趋势检测器（`MKDetector`类），并提供了数据，同时将Tau系数的阈值更改为0.9。这样，我们只获得趋势强度更高的时间段。接着，我们使用`detector`方法查找时间点。我们感兴趣的是30天窗口内的上升趋势（`direction="up"`）。
- en: There are also other parameters of the detector we could tune. For example,
    we can specify if there is some seasonality in the data by using the `freq` argument.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他一些检测器的参数可以调整。例如，我们可以通过使用`freq`参数来指定数据中是否存在季节性。
- en: In *Step 6*, we plotted the results. We can also inspect in detail each of the
    95 detected points. The returned `time_points` object is a list of tuples, in
    which each tuple contains the `TimeSeriesChangePoint` object (with the beginning
    date of the detected trend period) and the point’s metadata. In our case, we looked
    for periods of an increasing trend over a window of 30 days. Naturally, there
    will be quite an overlap in the periods of an increasing trend, as we identified
    multiple points, with each being the beginning of the period. As we can see in
    the plot, a lot of those identified points are consecutive.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤6*中，我们绘制了结果。我们还可以详细检查95个检测到的点中的每一个。返回的`time_points`对象是一个元组列表，每个元组包含一个`TimeSeriesChangePoint`对象（包含检测到的趋势期的开始日期）和该点的元数据。在我们的例子中，我们寻找的是30天窗口内的上升趋势期。自然地，由于我们识别了多个点，每个点都是该期间的开始，因此这些上升趋势的期间会有很多重叠。如图所示，许多被识别的点是连续的。
- en: See also
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'Mann, H. B. 1945\. “Non-Parametric Tests against Trend.” Econometrica 13: 245-259.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Mann, H. B. 1945. “反趋势的非参数检验。”《经济计量学》13: 245-259。'
- en: Kendall, M. G. 1948\. *Rank Correlation Methods*. Griffin.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kendall, M. G. 1948. *秩相关方法*。Griffin。
- en: Detecting patterns in a time series using the Hurst exponent
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用赫斯特指数检测时间序列中的模式
- en: 'In finance, a lot of trading strategies are based on one of the following:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融领域，许多交易策略基于以下之一：
- en: '**Momentum**—the investors try to use the continuance of the existing market
    trend to determine their positions'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动量**——投资者试图利用现有市场趋势的持续性来确定其持仓'
- en: '**Mean-reversion** – the investors assume that properties such as stock returns
    and volatility will revert to their long-term average over time (also known as
    an Ornstein-Uhlenbeck process)'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**均值回归**——投资者假设股票回报和波动性等属性会随着时间的推移回归到其长期平均水平（也称为奥恩斯坦-乌伦贝克过程）'
- en: While we can relatively easily classify a time series as one of the two by inspecting
    it visually, this solution definitely does not scale well. That is why we can
    use approaches such as the Hurst exponent to identify if a given time series (not
    necessarily a financial one) is trending, mean-reverting, or simply a random walk.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们可以通过视觉检查相对容易地将时间序列分类为两类之一，但这种方法显然不适用大规模分析。这就是为什么我们可以使用赫斯特指数等方法来识别给定的时间序列（不一定是金融类的）是否呈趋势性、均值回归或仅仅是随机游走。
- en: A random walk is a process in which a path consists of a succession of steps
    taken at random. Applied to stock prices, it suggests that changes in stock prices
    have the same distribution and are independent of each other. This implies that
    the past movement (or trend) of a stock price cannot be used to predict its future
    movement. For more information, please see *Chapter 10, Monte Carlo Simulations
    in Finance*.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 随机游走是一个过程，其中路径由一系列随机步骤组成。应用于股价时，这表明股价的变化具有相同的分布，并且相互独立。这意味着，股票价格的过去走势（或趋势）不能用来预测其未来走势。欲了解更多信息，请参见*第10章，金融中的蒙特卡罗模拟*。
- en: '**Hurst exponent** **(H)** is a measure for the long-term memory of a time
    series, that is, it measures the amount by which that series deviates from a random
    walk. The values of the Hurst exponent range between 0 and 1, with the following
    interpretation:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '**赫斯特指数** **(H)** 是衡量时间序列长期记忆的一个指标，也就是说，它衡量该序列偏离随机游走的程度。赫斯特指数的值在0和1之间，具有以下解释：'
- en: H < 0.5—a series is mean-reverting. The closer the value is to 0, the stronger
    the mean-reversion process is.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: H < 0.5——一个序列是均值回归的。值越接近0，均值回归过程越强。
- en: H = 0.5—a series is a geometric random walk.
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: H = 0.5——一个序列是几何随机游走。
- en: H > 0.5—a series is trending. The closer the value is to 1, the stronger the
    trend.
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: H > 0.5——一个序列是趋势性的。值越接近1，趋势越强。
- en: There are a few ways of calculating the Hurst exponent. In this recipe, we will
    focus on the one based on estimating the rate of the diffusive behavior, which
    is based on the variance of log prices. For the practical example, we will use
    20 years of daily S&P 500 prices.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 计算赫斯特指数有几种方法。在这个例子中，我们将专注于基于估算扩散行为速率的方法，该方法基于对数价格的方差。对于实际例子，我们将使用20年的标准普尔500每日价格数据。
- en: How to do it…
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做……
- en: 'Execute the following steps to investigate whether S&P 500 prices are trending,
    mean-reverting, or an example of a random walk:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤，检查标准普尔500指数的价格是否呈现趋势性、均值回归性或是随机游走的例子：
- en: 'Import the libraries:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE30]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Download S&P 500’s historical prices from the years 2000 to 2019:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载2000到2019年间标准普尔500的历史价格：
- en: '[PRE31]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Running the code generates the following plot:'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行代码生成如下图：
- en: '![](../Images/B18112_04_09.png)'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_09.png)'
- en: 'Figure 4.9: The S&P 500 index in the years 2000 to 2019'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.9：2000 至 2019 年标准普尔500指数
- en: We plot the data to get some initial intuition of what to expect from the calculated
    Hurst exponent.
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们绘制数据，以便对计算出的赫斯特指数有初步的直觉。
- en: 'Define a function calculating the Hurst exponent:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一个计算赫斯特指数的函数：
- en: '[PRE32]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Calculate the values of the Hurst exponent using different values for the `max_lag`
    parameter:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用不同的`max_lag`参数值计算赫斯特指数的值：
- en: '[PRE33]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'This returns the following:'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回以下内容：
- en: '[PRE34]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The more lags we include, the closer we get to the verdict that the S&P 500
    series is a random walk.
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们包含的滞后期数越多，越接近得出标准普尔500序列是随机游走的结论。
- en: 'Narrow down the data to the years 2005 to 2007 and calculate the exponents
    one more time:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据缩小到2005至2007年，并重新计算赫斯特指数：
- en: '[PRE35]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'This returns the following:'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回以下内容：
- en: '[PRE36]'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'It seems that the series from the 2005 to 2007 period is mean-reverting. For
    reference, the discussed time series is illustrated as follows:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来2005到2007年期间的序列具有均值回归特性。作为参考，讨论的时间序列如下所示：
- en: '![](../Images/B18112_04_10.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_10.png)'
- en: 'Figure 4.10: The S&P 500 index in the years 2005 to 2007'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10：2005 至 2007 年标准普尔500指数
- en: How it works…
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: After importing the required libraries, we downloaded 20 years’ worth of daily
    S&P prices from Yahoo Finance. From looking at the plot, it is hard to say whether
    the time series is purely trending, mean-reverting, or a random walk. There seems
    to be a clear rising trend, especially in the second half of the series.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在导入所需的库之后，我们从雅虎财经下载了20年的每日标准普尔500指数价格。从图表来看，很难判断该时间序列是纯粹的趋势型、均值回归型，还是随机游走型。尤其是在序列的后半段，似乎有一个明显的上升趋势。
- en: In *Step 3*, we defined a function used for calculating the Hurst exponent.
    For this approach, we need to provide the maximum number of lags to be used for
    the calculations. This parameter greatly impacts the results, as we will see later
    on.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤3*中，我们定义了一个用于计算赫斯特指数的函数。对于这种方法，我们需要提供用于计算的最大滞后期数。正如我们稍后将看到的，这个参数对结果有很大影响。
- en: 'The calculations of the Hurst exponent can be summarized in two steps:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 赫斯特指数的计算可以总结为两个步骤：
- en: For each lag in the considered range, we calculate the standard deviation of
    the differenced series (we will cover differencing in more depth in *Chapter 6*,
    *Time Series Analysis and Forecasting*).
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于考虑的每个滞后期，我们计算差分序列的标准差（我们将在*第6章*“时间序列分析与预测”中更详细地讨论差分）。
- en: Calculate the slope of the log plot of lags versus the standard deviations to
    get the Hurst exponent.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算滞后期与标准差的对数图的斜率，以获取赫斯特指数。
- en: In *Step 4*, we calculated and printed the Hurst exponent for a range of different
    values of the `max_lag` parameter. For lower values of the parameter, the series
    could be considered slightly mean-reverting. While increasing the value of the
    parameter, the interpretation changed more in favor of the series being a random
    walk.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤4*中，我们计算并打印了不同`max_lag`参数值范围内的赫斯特指数。对于较低的参数值，序列可以被视为稍微具有均值回归特性。随着参数值的增加，解释倾向于认为该序列是一个随机游走。
- en: In *Step 5*, we carried out a similar experiment, but this time on a restricted
    time series. We only looked at data from the years 2005 to 2007\. We also had
    to remove the `max_lag` of 1,000, given there were not enough observations in
    the restricted time series. As we could see, the results have changed a bit more
    drastically than before, from 0.4 for `max_lag` of 20 to 0.13 for 500 lags.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤5*中，我们进行了类似的实验，但这次是在一个限制的时间序列上进行的。我们只查看了2005至2007年的数据。由于在限制时间序列中没有足够的观察值，我们还不得不去除`max_lag`为1000的情况。正如我们所见，结果比之前有所变化，从`max_lag`为20时的0.4变化为500滞后期时的0.13。
- en: 'While using the Hurst exponent for our analyses, we should keep in mind that
    the results can vary depending on:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用赫斯特指数进行分析时，我们应记住，结果可能会因以下因素而有所不同：
- en: The method we use for calculating the Hurst exponent
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们用来计算赫斯特指数的方法
- en: The value of the `max_lag` parameter
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_lag`参数的值'
- en: The period we are looking at – local patterns can be very different from the
    global ones
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们正在观察的时期——局部模式可能与全局模式有很大不同
- en: There’s more…
  id: totrans-249
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: As we mentioned in the introduction, there are multiple ways to calculate the
    Hurst exponent. Another quite popular approach is to use the **rescaled range
    (R/S) analysis**. A brief literature review suggests that using the R/S statistic
    leads to better results in comparison to other methods such as the analysis of
    autocorrelations, variance ratios, and more. A possible shortcoming of that method
    is that it is very sensitive to short-range dependencies.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在介绍中提到的，计算赫斯特指数的方法有多种。另一个相当流行的方法是使用**重标范围（R/S）分析**。简要的文献回顾表明，与自相关分析、方差比率分析等其他方法相比，使用
    R/S 统计量能取得更好的结果。该方法的一个可能缺点是它对短期依赖关系非常敏感。
- en: For an implementation of the Hurst exponent based on the rescaled range analysis,
    you can check out the `hurst` library.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现基于重标范围分析的赫斯特指数，您可以查看 `hurst` 库。
- en: See also
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: '[https://github.com/Mottl/hurst](https://github.com/Mottl/hurst)—the repository
    of the `hurst` library'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/Mottl/hurst](https://github.com/Mottl/hurst)——`hurst` 库的仓库'
- en: 'Hurst, H. E. 1951\. “Long-Term Storage Capacity of Reservoirs.” *ASCE Transactions*
    116(1): 770–808'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Hurst, H. E. 1951年。“水库的长期储存能力。” *ASCE Transactions* 116(1): 770–808'
- en: 'Kroha, P., & Skoula, M. 2018, March. *Hurst Exponent and Trading Signals Derived
    from Market Time Series*. In *ICEIS* (1): 371–378'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Kroha, P., & Skoula, M. 2018年3月. *赫斯特指数与基于市场时间序列的交易信号*。载于 *ICEIS* (1): 371–378'
- en: Investigating stylized facts of asset returns
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 研究资产收益的典型事实
- en: '**Stylized facts** are statistical properties that are present in many empirical
    asset returns (across time and markets). It is important to be aware of them because
    when we are building models that are supposed to represent asset price dynamics,
    the models should be able to capture/replicate these properties.'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '**典型事实**是许多实证资产收益（跨时间和市场）中存在的统计性质。了解这些性质很重要，因为当我们构建应能表示资产价格动态的模型时，模型应能捕捉/复现这些特性。'
- en: In this recipe, we investigate the five stylized facts using an example of daily
    S&P 500 returns from the years 2000 to 2020.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个案例中，我们使用 2000 到 2020 年间的日度标准普尔 500指数收益数据来研究五个典型事实。
- en: Getting ready
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'As this is a longer recipe with further subsections, we import the required
    libraries and prepare the data in this section:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一个较长的案例，并包含更多的子部分，我们将在本节中导入所需的库并准备数据：
- en: 'Import the required libraries:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所需的库：
- en: '[PRE37]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Download the S&P 500 data and calculate the returns:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载标准普尔 500 指数数据并计算收益：
- en: '[PRE38]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: How to do it…
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现…
- en: 'In this section, we sequentially investigate the five stylized facts in the
    S&P 500 returns series:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将依次研究标准普尔 500 指数收益系列中的五个典型事实：
- en: 'Fact 1: Non-Gaussian distribution of returns'
  id: totrans-267
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事实 1：收益的非高斯分布
- en: 'It was observed in the literature that (daily) asset returns exhibit the following:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 文献中观察到，（日度）资产收益呈现出以下特征：
- en: '**Negative skewness (third moment)**: Large negative returns occur more frequently
    than large positive ones'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**负偏度（第三矩）**：大负收益出现的频率大于大正收益'
- en: '**Excess kurtosis** (**fourth moment**): Large (and small) returns occur more
    often than expected under normality'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过度峰度**（**四阶矩**）：大（和小）收益比在正态分布下预期的发生得更频繁'
- en: 'Moments are a set of statistical measures used to describe a probability distribution.
    The first four moments are the following: expected value (mean), variance, skewness,
    and kurtosis.'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 矩是描述概率分布的一组统计量。前四个矩如下：期望值（均值）、方差、偏度和峰度。
- en: 'Run the following steps to investigate the existence of the first fact by plotting
    the histogram of returns and a **quantile-quantile** (**Q-Q**) plot:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下步骤，通过绘制收益的直方图和**分位数-分位数**（**Q-Q**）图，来研究第一个事实的存在。
- en: 'Calculate the Normal **probability density function** (**PDF**) using the mean
    and standard deviation of the observed returns:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用观测收益的均值和标准差计算正态**概率密度函数**（**PDF**）：
- en: '[PRE39]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Plot the histogram and the Q-Q plot:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制直方图和 Q-Q 图：
- en: '[PRE40]'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Executing the code results in the following plot:'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行代码后会得到以下图表：
- en: '![](../Images/B18112_04_11.png)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_11.png)'
- en: 'Figure 4.11: The distribution of S&P 500 returns visualized using a histogram
    and a Q-Q plot'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11：使用直方图和 Q-Q 图可视化标准普尔 500 指数收益的分布
- en: 'We can use the histogram (showing the shape of the distribution) and the Q-Q
    plot to assess the normality of the log returns. Additionally, we can print the
    summary statistics (please refer to the GitHub repository for the code):'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用直方图（展示分布的形状）和 Q-Q 图来评估对数收益的正态性。此外，我们还可以打印总结统计量（请参考 GitHub 仓库中的代码）：
- en: '[PRE41]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: By looking at the metrics such as the mean, standard deviation, skewness, and
    kurtosis, we can infer that they deviate from what we would expect under normality.
    The four moments of the Standard Normal distribution are 0, 1, 0, and 0 respectively.
    Additionally, the Jarque-Bera normality test gives us reason to reject the null
    hypothesis by stating that the distribution is normal at the 99% confidence level.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看均值、标准差、偏度和峰度等度量，我们可以推断它们偏离了我们在正态分布下的预期。标准正态分布的四个矩分别是0、1、0和0。此外，Jarque-Bera正态性检验使我们有理由拒绝原假设，并表明该分布在99%的置信水平下是正态的。
- en: The fact that the returns do not follow the Normal distribution is crucial,
    given many statistical models and approaches assume that the random variable is
    normally distributed.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 回报不服从正态分布这一事实至关重要，因为许多统计模型和方法假设随机变量服从正态分布。
- en: 'Fact 2: Volatility clustering'
  id: totrans-284
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事实2：波动率聚集
- en: '**Volatility clustering** is the pattern in which large changes in prices tend
    to be followed by large changes (periods of higher volatility), while small changes
    in price are followed by small changes (periods of lower volatility).'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '**波动率聚集**是指价格的大幅变动往往会被随后的大幅变动（高波动期）所跟随，而价格的小幅变动则会被小幅变动（低波动期）所跟随。'
- en: 'Run the following code to investigate the second fact by plotting the log returns
    series:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下代码以通过绘制对数回报序列来调查第二个事实：
- en: '[PRE42]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Executing the code results in the following plot:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 执行代码后会得到以下图表：
- en: '![](../Images/B18112_04_12.png)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_12.png)'
- en: 'Figure 4.12: Examples of volatility clustering in the S&P 500 returns'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12：标准普尔500指数回报中的波动率聚集示例
- en: We can observe clear clusters of volatility—periods of higher positive and negative
    returns. The fact that volatility is not constant and that there are some patterns
    in how it evolves is a very useful observation when we attempt to forecast volatility,
    for example, using GARCH models. For more information, please refer to *Chapter
    9*, *Modeling Volatility with GARCH Class Models*.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以观察到波动率的明显聚集——高正回报和负回报的时期。波动率并非恒定，而且它的变化有一些模式，这一点在我们尝试预测波动率时非常有用，例如使用GARCH模型。更多信息，请参考*第9章*，*使用GARCH类模型进行波动率建模*。
- en: 'Fact 3: Absence of autocorrelation in returns'
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事实3：回报中不存在自相关
- en: '**Autocorrelation** (also known as serial correlation) measures how similar
    a given time series is to the lagged version of itself over successive time intervals.'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '**自相关**（也称为序列相关性）衡量的是给定时间序列与其滞后版本在连续时间间隔中的相似程度。'
- en: 'Below, we investigate the third fact by stating the absence of autocorrelation
    in returns:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在下文中，我们通过陈述回报中不存在自相关来调查第三个事实：
- en: 'Define the parameters for creating the autocorrelation plots:'
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义用于创建自相关图的参数：
- en: '[PRE43]'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Run the following code to create the **autocorrelation function** (**ACF**)
    plot of log returns:'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码以创建对数收益的**自相关函数**（**ACF**）图：
- en: '[PRE44]'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Executing the snippet results in the following plot:'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行该代码片段后会得到以下图表：
- en: '![](../Images/B18112_04_13.png)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_13.png)'
- en: 'Figure 4.13: The plot of the autocorrelation function of the S&P 500 returns'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13：标准普尔500指数回报的自相关函数图
- en: Only a few values lie outside of the confidence interval (we do not look at
    lag 0) and can be considered statistically significant. We can assume that we
    have verified that there is no autocorrelation in the log-returns series.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 只有少数值位于置信区间之外（我们不看滞后期0），并且可以认为是统计上显著的。我们可以假设已经验证了对数收益序列中不存在自相关。
- en: 'Fact 4: Small and decreasing autocorrelation in squared/absolute returns'
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事实4：平方/绝对回报中存在小且递减的自相关
- en: While we expect no autocorrelation in the return series, it was empirically
    proven that we can observe small and slowly decaying autocorrelation (also referred
    to as persistence) in simple nonlinear functions of the returns, such as absolute
    or squared returns. This observation is connected to the phenomenon we have already
    investigated, that is, volatility clustering.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们期望回报序列中没有自相关，但通过实证研究已经证明，在回报的简单非线性函数中，例如绝对值或平方回报，能够观察到小而缓慢衰减的自相关（也称为持久性）。这一现象与我们已经研究过的现象有关，即波动率聚集。
- en: The autocorrelation function of the squared returns is a common measure of volatility
    clustering. It is also referred to as the ARCH effect, as it is the key component
    of (G)ARCH models, which we cover in *Chapter 9*, *Modeling Volatility with GARCH
    Class Models*. However, we should keep in mind that this property is model-free
    and not exclusively connected to GARCH class models.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 平方收益的自相关函数是衡量波动性聚集的常用指标。它也被称为ARCH效应，因为它是（G）ARCH模型的关键组成部分，我们将在*第9章*《使用GARCH类模型建模波动性》中讨论。然而，我们应该记住，这一特性是无模型的，并且不仅仅与GARCH类模型相关。
- en: 'We can investigate the fourth fact by creating the ACF plots of squared and
    absolute returns:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过创建平方和绝对收益的自相关函数（ACF）图来研究第四个事实：
- en: '[PRE45]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Executing the code results in the following plots:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 执行代码后生成以下图表：
- en: '![](../Images/B18112_04_14.png)'
  id: totrans-309
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_14.png)'
- en: 'Figure 4.14: The ACF plots of squared and absolute returns'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.14：平方和绝对收益的ACF图
- en: We can observe the small and decreasing values of autocorrelation for the squared
    and absolute returns, which are in line with the fourth stylized fact.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以观察到平方和绝对收益的自相关值较小且逐渐减小，这与第四个风格化事实一致。
- en: 'Fact 5: Leverage effect'
  id: totrans-312
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事实5：杠杆效应
- en: The **leverage effect** refers to the fact that most measures of an asset’s
    volatility are negatively correlated with its returns.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '**杠杆效应**指的是资产波动性的多数衡量标准与其收益呈负相关的事实。'
- en: 'Execute the following steps to investigate the existence of the leverage effect
    in the S&P 500’s return series:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤来调查标准普尔500指数收益序列中杠杆效应的存在：
- en: 'Calculate volatility measures as moving standard deviations:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算波动性度量作为移动标准差：
- en: '[PRE46]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Plot all the series:'
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制所有序列：
- en: '[PRE47]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'We can now investigate the leverage effect by visually comparing the price
    series to the (rolling) volatility metric:'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们现在可以通过直观地将价格序列与（滚动）波动性指标进行比较来研究杠杆效应：
- en: '![](../Images/B18112_04_15.png)'
  id: totrans-320
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_15.png)'
- en: 'Figure 4.15: The rolling volatility metrics of the S&P 500 returns'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.15：标准普尔500指数收益的滚动波动性指标
- en: In *Figure 4.15*, we can observe a pattern of increased volatility when the
    prices go down and decreased volatility when they are rising. This observation
    is in line with the fact’s definition.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图4.15*中，我们可以观察到一个模式，即价格下跌时波动性增加，价格上涨时波动性减小。这个观察结果符合该事实的定义。
- en: How it works…
  id: totrans-323
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: In this section, we describe the approaches we used to investigate the existence
    of the stylized facts in the S&P 500 log return series.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们描述了我们用于调查标准普尔500指数对数收益序列中风格化事实存在性的几种方法。
- en: 'Fact 1: Non-Gaussian distribution of returns'
  id: totrans-325
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事实1：收益的非高斯分布
- en: We will break down investigating this fact into three parts.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把调查这一事实分为三部分。
- en: Histogram of returns
  id: totrans-327
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 收益的直方图
- en: The first step in investigating this fact was to plot a histogram by visualizing
    the distribution of returns. To do so, we used `sns.distplot` while setting `kde=False`
    (which does not use the Gaussian kernel density estimate) and `norm_hist=True`
    (this plot shows density instead of the count).
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 调查这一事实的第一步是通过可视化收益分布来绘制直方图。为此，我们使用了`sns.distplot`，同时设置`kde=False`（这不会使用高斯核密度估计）和`norm_hist=True`（此图显示密度而不是计数）。
- en: To see the difference between our histogram and Gaussian distribution, we superimposed
    a line representing the PDF of the Gaussian distribution with the mean and standard
    deviation coming from the considered return series.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看我们的直方图与高斯分布之间的差异，我们叠加了一条线，表示考虑的收益序列的均值和标准差所对应的高斯分布的PDF。
- en: First, we specified the range over which we calculated the PDF by using `np.linspace`
    (we set the number of points to 1,000; generally, the more points, the smoother
    the line) and then calculated the PDF using the `scs.norm.pdf` function. The default
    arguments correspond to the standard normal distribution, that is, with zero mean
    and unit variance. That is why we specified the `loc` and `scale` arguments as
    the sample mean and standard deviation, respectively.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们使用`np.linspace`指定了计算PDF的范围（我们设置了1000个点；通常来说，点数越多，线条越平滑），然后使用`scs.norm.pdf`函数计算PDF。默认参数对应标准正态分布，即均值为零，方差为单位方差。因此，我们分别将`loc`和`scale`参数指定为样本均值和标准差。
- en: 'To verify the existence of the previously mentioned patterns, we should look
    at the following:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证之前提到的模式，我们应该查看以下内容：
- en: 'Negative skewness: The left tail of the distribution is longer, while the mass
    of the distribution is concentrated on the right-hand side of the distribution'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 负偏度：分布的左尾较长，而分布的质量集中在分布的右侧
- en: 'Excess kurtosis: Fat-tailed and peaked distribution'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过度峰度：肥尾和尖峰分布
- en: The second point is easier to observe on our plot, as there is a clear peak
    over the PDF, and we see more mass in the tails.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 第二点在我们的图中更容易观察到，因为在概率密度函数（PDF）上有一个明显的峰值，并且我们在尾部看到更多的质量。
- en: Q-Q plot
  id: totrans-335
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Q-Q 图
- en: After inspecting the histogram, we looked at the Q-Q plot, on which we compared
    two distributions (theoretical and observed) by plotting their quantiles against
    each other. In our case, the theoretical distribution is Gaussian (normal), and
    the observed one comes from the S&P 500 returns.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 在检查完直方图后，我们查看了 Q-Q 图，在该图中我们通过将两个分布（理论分布和观测分布）的分位数相互比较来绘制它们。在我们的案例中，理论分布是高斯分布（正态分布），而观测分布来自标准普尔
    500 指数的收益。
- en: To obtain the plot, we used the `sm.qqplot` function. If the empirical distribution
    is normal, then the vast majority of the points will lie on the red line. However,
    we see that this is not the case, as points on the left-hand side of the plot
    are more negative (that is, lower empirical quantiles are smaller) than expected
    in the case of the Gaussian distribution (indicated by the line). This means that
    the left tail of the returns distribution is heavier than that of the Gaussian
    distribution. Analogical conclusions can be drawn about the right tail, which
    is heavier than under normality.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得该图，我们使用了 `sm.qqplot` 函数。如果经验分布是正态分布，则绝大多数点将位于红线上。然而，我们看到并非如此，因为图的左侧的点比预期的高斯分布中的点更负（即，较低的经验分位数比预期值小）（由线条表示）。这意味着收益分布的左尾比高斯分布的左尾更重。对右尾也可以得出类似的结论，它比正态分布下的右尾更重。
- en: Descriptive statistics
  id: totrans-338
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 描述性统计
- en: The last part involves looking at some statistics. We calculated them using
    the appropriate methods of `pandas` Series/DataFrames. We immediately saw that
    the returns exhibit negative skewness and excess kurtosis. We also ran the Jarque-Bera
    test (`scs.jarque_bera`) to verify that the returns do not follow a Gaussian distribution.
    With a p-value of zero, we rejected the null hypothesis that sample data has skewness
    and kurtosis matching those of a Gaussian distribution.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一部分涉及查看一些统计数据。我们使用 `pandas` Series/DataFrame 的适当方法进行了计算。我们立即看到收益表现出负偏度和过度峰度。我们还进行了
    Jarque-Bera 检验（`scs.jarque_bera`），以验证收益是否符合高斯分布。由于 p 值为零，我们拒绝了样本数据具有与高斯分布相匹配的偏度和峰度的零假设。
- en: The `pandas` implementation of kurtosis is the one that literature refers to
    as excess kurtosis or Fisher’s kurtosis. Using this metric, the excess kurtosis
    of a Gaussian distribution is 0, while the standard kurtosis is 3\. This is not
    to be confused with the name of the stylized fact’s excess kurtosis, which simply
    means kurtosis higher than that of normal distribution.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas` 对峰度的实现是文献中所称的过度峰度或费舍尔峰度。使用此度量，高斯分布的过度峰度为 0，而标准峰度为 3。这不应与样式化事实的过度峰度名称混淆，后者仅指峰度高于正态分布的情况。'
- en: 'Fact 2: Volatility clustering'
  id: totrans-341
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事实 2：波动率聚集
- en: Another thing we should be aware of when investigating stylized facts is volatility
    clustering—periods of high returns alternating with periods of low returns, suggesting
    that volatility is not constant. To quickly investigate this fact, we plot the
    returns using the `plot` method of a `pandas` DataFrame.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个我们在调查样式化事实时应当注意的因素是波动率聚集——高收益期与低收益期交替出现，这表明波动率不是恒定的。为了快速调查这一事实，我们使用 `pandas`
    DataFrame 的 `plot` 方法绘制了收益图。
- en: 'Fact 3: Absence of autocorrelation in returns'
  id: totrans-343
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事实 3：收益中不存在自相关
- en: To investigate whether there is significant autocorrelation in returns, we created
    the autocorrelation plot using `plot_acf` from the `statsmodels` library. We inspected
    50 lags and used the default `alpha=0.05`, which means that we also plotted the
    95% confidence interval. Values outside of this interval can be considered statistically
    significant.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 为了调查收益中是否存在显著的自相关，我们使用 `statsmodels` 库的 `plot_acf` 创建了自相关图。我们检查了 50 个滞后，并使用默认的
    `alpha=0.05`，这意味着我们还绘制了 95% 置信区间。超出该区间的值可以被认为是统计显著的。
- en: 'Fact 4: Small and decreasing autocorrelation in squared/absolute returns'
  id: totrans-345
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事实 4：平方/绝对收益中的小且递减的自相关
- en: To verify this fact, we also used the `plot_acf` function from the `statsmodels`
    library. However, this time, we applied it to the squared and absolute returns.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证这一事实，我们还使用了`statsmodels`库中的`plot_acf`函数。然而，这一次，我们将其应用于平方和绝对收益。
- en: 'Fact 5: Leverage effect'
  id: totrans-347
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事实5：杠杆效应
- en: This fact states that most measures of asset volatility are negatively correlated
    with their returns. To investigate it, we used the moving standard deviation (calculated
    using the `rolling` method of a `pandas` DataFrame) as a measure of historical
    volatility. We used windows of 21 and 252 days, which correspond to one month
    and one year of trading data.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 这一事实表明，大多数资产波动性的度量与其收益率呈负相关。为了验证这一点，我们使用了移动标准差（通过`pandas` DataFrame的`rolling`方法计算）作为历史波动性的度量。我们使用了21天和252天的窗口，分别对应一个月和一年的交易数据。
- en: There’s more…
  id: totrans-349
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: 'We present another method of investigating the leverage effect (fact 5). To
    do so, we use the VIX (CBOE Volatility Index), which is a popular metric of the
    stock market’s expectations regarding volatility. The measure is implied by option
    prices on the S&P 500 index. We take the following steps:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提出了另一种调查杠杆效应（事实5）的方法。为此，我们使用了VIX（CBOE波动率指数），这是衡量股票市场对波动性预期的一个流行指标。这个度量是由标准普尔500指数的期权价格隐含出来的。我们采取以下步骤：
- en: 'Download and preprocess the prices of the S&P 500 and VIX:'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并预处理标准普尔500指数和VIX的价格数据：
- en: '[PRE48]'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Calculate the log returns (we can just as well use simple returns):'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算对数收益（我们同样可以使用简单收益）：
- en: '[PRE49]'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Plot a scatterplot with the returns on the axes and fit a regression line to
    identify the trend:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制一个散点图，将收益率放在坐标轴上，并拟合回归线以识别趋势：
- en: '[PRE50]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'We additionally calculated the correlation coefficient between the two series
    and included it in the title:'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们还计算了两条序列之间的相关系数，并将其包含在标题中：
- en: '![](../Images/B18112_04_16.png)'
  id: totrans-358
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_04_16.png)'
- en: 'Figure 4.16: Investigating the relationship between the returns of S&P 500
    and VIX'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.16：调查标准普尔500指数和VIX收益之间的关系
- en: We can see that both the negative slope of the regression line and a strong
    negative correlation between the two series confirm the existence of the leverage
    effect in the return series.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，回归线的负斜率以及两条序列之间的强负相关性确认了收益序列中杠杆效应的存在。
- en: See also
  id: totrans-361
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'For more information, refer to the following:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参阅以下内容：
- en: 'Cont, R. 2001\. “Empirical properties of asset returns: stylized facts and
    statistical issues.” *Quantitative Finance*, 1(2): 223'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Cont, R. 2001. “资产收益的经验属性：典型事实与统计问题。” *定量金融*，1(2): 223'
- en: Summary
  id: totrans-364
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned how to use a selection of algorithms and statistical
    tests to automatically identify potential patterns and issues (for example, outliers)
    in financial time series. With their help, we can scale up our analysis to an
    arbitrary number of assets instead of manually inspecting each and every time
    series.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何使用一系列算法和统计检验自动识别金融时间序列中的潜在模式和问题（例如，异常值）。有了它们的帮助，我们可以将分析规模扩大到任意数量的资产，而不必手动检查每一条时间序列。
- en: We also explained the stylized facts of asset returns. These are crucial to
    understand, as many models or strategies assume a certain distribution of the
    variable of interest. Most frequently, a Gaussian distribution is assumed. And
    as we have seen, empirical asset returns are not normally distributed. That is
    why we have to take certain precautions to make our analyses valid while working
    with such time series.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还解释了资产收益的典型事实。这些事实非常重要，因为许多模型或策略假设感兴趣变量的某种分布。最常见的假设是正态分布。正如我们所见，经验资产收益并非呈正态分布。因此，在处理这种时间序列时，我们必须采取一些预防措施，以确保我们的分析有效。
- en: In the next chapter, we will explore the vastly popular domain of technical
    analysis and see what insights we can gather from analyzing the patterns in asset
    prices.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨广受欢迎的技术分析领域，并查看通过分析资产价格的模式，我们能获得哪些见解。
- en: Join us on Discord!
  id: totrans-368
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的 Discord！
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the author, and learn about new releases – follow the QR code
    below:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 要加入本书的Discord社区——在这里你可以分享反馈、向作者提问并了解新版本——请扫描以下二维码：
- en: '![](../Images/QR_Code203602028422735375.png)'
  id: totrans-370
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/QR_Code203602028422735375.png)'
- en: '[https://packt.link/ips2H](https://packt.link/ips2H)'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/ips2H](https://packt.link/ips2H)'
