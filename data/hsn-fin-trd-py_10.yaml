- en: '*Chapter 7*: Financial Market Data Access in Python'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 7 章*：Python 中的金融市场数据访问'
- en: This chapter outlines several key market data sources, ranging from free to
    paid data sources. A more complete list of available resources can be obtained
    from [https://github.com/wilsonfreitas/awesome-quant#data-sources](https://github.com/wilsonfreitas/awesome-quant#data-sources).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章概述了几个关键的市场数据源，从免费到付费的数据源都有涵盖。可从[https://github.com/wilsonfreitas/awesome-quant#data-sources](https://github.com/wilsonfreitas/awesome-quant#data-sources)获得更完整的可用资源列表。
- en: The quality of algorithmic trading models' signals fundamentally depends on
    the quality of market data being analyzed. Has the market data been cleaned of
    erroneous records and is there a quality assurance process in place to rectify
    any errors as they occur? If there is a problem with the market data feed, how
    quickly can the data be corrected?
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 算法交易模型信号的质量基本取决于正在分析的市场数据的质量。市场数据是否已清理出错误记录，并且是否有质量保证流程来在发生错误时更正任何错误？如果市场数据源有问题，那么数据可以多快被纠正？
- en: The following free data sources described are suitable for learning purposes,
    but not fit for purpose as regards professional trading – there may be a very
    low limit on the number of API calls per day, the APIs may be slow, and there
    is no support and no rectification of the data should it not be correct. In addition,
    when using any of these data providers, be aware of their terms of use.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 下述描述的免费数据源适用于学习目的，但不适用于专业交易目的 - 每天的 API 调用次数可能非常有限，API 可能较慢，并且如果数据不正确，则没有支持和更正。此外，在使用任何这些数据提供者时，请注意其使用条款。
- en: 'In this chapter, we are going to cover the following key topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要内容：
- en: Exploring the yahoofinancials Python library
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 yahoofinancials Python 库
- en: Exploring the pandas_datareader Python library
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 pandas_datareader Python 库
- en: Exploring the Quandl data source
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 Quandl 数据源
- en: Exploring the IEX Cloud data source
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 IEX Cloud 数据源
- en: Exploring the MarketStack data source
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 MarketStack 数据源
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: The Python code used in this chapter is available in the `Chapter07/marketdata.ipynb`
    notebook in the book's code repository.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的 Python 代码可在书籍代码存储库的`Chapter07/marketdata.ipynb`笔记本中找到。
- en: Exploring the yahoofinancials Python library
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 yahoofinancials Python 库
- en: The yahoofinancials Python library provides free access to the market data available
    from Yahoo Finance, whose provider is ICE Data Services. The library repository
    is available at [https://github.com/JECSand/yahoofinancials](https://github.com/JECSand/yahoofinancials).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: yahoofinancials Python 库提供了对雅虎财经市场数据的免费访问，其提供商是 ICE Data Services。库存储库位于[https://github.com/JECSand/yahoofinancials](https://github.com/JECSand/yahoofinancials)。
- en: 'It provides access to historical and, for most assets, also real-time pricing
    data for the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 它提供以下资产的历史和大多数资产的实时定价数据访问：
- en: Currencies
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 货币
- en: Indexes
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引
- en: Stocks
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 股票
- en: Commodities
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商品
- en: ETFs
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ETF
- en: Mutual funds
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共同基金
- en: US Treasuries
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 美国国债
- en: Cryptocurrencies
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密货币
- en: To find the right ticker, use the lookup at [https://finance.yahoo.com/](https://finance.yahoo.com/).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到正确的股票代码，请使用[https://finance.yahoo.com/](https://finance.yahoo.com/)上的查找功能。
- en: There is a very strict limit on the number of calls per hour per IP address
    (about 1,000-2,000 requests per hour per IP address) and once you reach it, your
    IP address gets blocked for an extensive period of time. In addition, the functionality
    provided constantly changes.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 IP 地址每小时的调用次数有严格的限制（每小时每个 IP 地址约为 1,000-2,000 次请求），一旦达到限制，您的 IP 地址将被阻止一段时间。此外，提供的功能不断变化。
- en: 'Installation of the library is standard:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 库的安装是标准的：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Access to the data is very straightforward, as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 访问数据非常简单，如下所示：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The library supports both single-ticker retrieval and multiple-tickers retrieval.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 该库支持单一股票检索和多个股票检索。
- en: Single-ticker retrieval
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单一股票检索
- en: 'The steps regarding single-ticker retrieval are as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 单一股票检索的步骤如下：
- en: 'First, we define the `AAPL` ticker object:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们定义`AAPL`的股票对象：
- en: '[PRE2]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, there is the issue of historical data retrieval. Let''s print all historical
    daily price data for the year of 2020:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，还有历史数据检索的问题。让我们打印出 2020 年的所有历史每日价格数据：
- en: '[PRE3]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The output starts with the following:'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出以以下内容开始：
- en: '[PRE4]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: You can change the frequency from `'daily'` to `'weekly'` or `'monthly'`.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以将频率从`'daily'`更改为`'weekly'`或`'monthly'`。
- en: 'Now, let''s inspect the weekly data results:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们查看每周数据结果：
- en: '[PRE5]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The output is as follows:'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '[PRE6]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then, we check the monthly data results:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '然后，我们检查月度数据结果：  '
- en: '[PRE7]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The output is as follows:'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '输出如下：  '
- en: '[PRE8]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The nested JSON can easily be converted to a pandas'' DataFrame:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '嵌套的 JSON 可轻松转换为 pandas 的 DataFrame：  '
- en: '[PRE9]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output is as follows:'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '输出如下：  '
- en: '![Figure 7.1 – Nested JSON converted to a pandas'' DataFrame](img/Figure_7.1_B15029.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.1 - 嵌套 JSON 转换为 pandas 的 DataFrame](img/Figure_7.1_B15029.jpg)  '
- en: Figure 7.1 – Nested JSON converted to a pandas' DataFrame
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '图 7.1 - 嵌套 JSON 转换为 pandas 的 DataFrame  '
- en: Notice the two columns – `adjclose` and `close`. The adjusted close is the close
    price adjusted for dividends, stock splits, and other corporate events.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '注意两列 - `adjclose`和`close`。调整后的收盘价是根据股利、股票拆分和其他公司事件调整的收盘价。  '
- en: Real-time data retrieval
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '实时数据检索  '
- en: 'To get real-time stock price data, use the `get_stock_price_data()` function:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '要获取实时股票价格数据，请使用`get_stock_price_data()`函数：  '
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The output is as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '输出如下：  '
- en: '[PRE11]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Real-time data for free data sources is usually delayed by 10 to 30 minutes.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '免费数据源的实时数据通常延迟 10 到 30 分钟。  '
- en: 'As regards the retrieval of financial statements, let''s get financial statements
    for Apple''s stock – the income statement, cash flow, and balance sheet:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '至于获取财务报表，让我们获取苹果股票的财务报表 - 损益表、现金流量表和资产负债表：  '
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output is as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '输出如下：  '
- en: '[PRE13]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: There are multiple uses of financial statement data in relation to algorithmic
    trading. First, it can be used to determine the totality of stocks to trade in.
    Second, the creation of algorithmic trading signals from non-price data adds additional
    value.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '金融报表数据在算法交易中有多种用途。首先，它可用于确定要交易的股票的总体情况。其次，从非价格数据创建算法交易信号会增加额外的价值。  '
- en: Summary data retrieval
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '摘要数据检索  '
- en: 'Summary data is accessible via the `get_summary_data` method:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '摘要数据可通过`get_summary_data`方法获取：  '
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The output is as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '输出如下：  '
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Summary data retrieved using this function is a summary of the financial statements
    function and the real-time data function.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '使用此函数检索的摘要数据是财务报表函数和实时数据函数的摘要。  '
- en: Multiple-tickers retrieval
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '多股票检索  '
- en: Multiple-tickers retrieval, also known as **a bulk retrieval**, is far more
    efficient and faster than single-ticker retrieval since most of the time associated
    with each download request is spent on establishing and closing the network connection.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '多股票检索，也称为**批量检索**，比单股票检索更高效快速，因为每个下载请求关联的大部分时间都用于建立和关闭网络连接。  '
- en: Historical data retrieval
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '历史数据检索  '
- en: 'Let''s retrieve the historical prices for these FX pairs: `EURCHF`, `USDEUR`,
    and `GBPUSD`:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '让我们获取这些外汇对的历史价格：`EURCHF`、`USDEUR`和`GBPUSD`：  '
- en: '[PRE16]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The output is as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '输出如下：  '
- en: '[PRE17]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: We see that the historical data does not contain any data from the financial
    statements.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '我们发现历史数据不包含任何财务报表数据。  '
- en: 'The full list of methods supported by the library at the time of writing this
    book is as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '写作本书时库支持的全部方法如下：  '
- en: '`get_200day_moving_avg()`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_200day_moving_avg()`  '
- en: '`get_50day_moving_avg()`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_50day_moving_avg()`  '
- en: '`get_annual_avg_div_rate()`'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_annual_avg_div_rate()`  '
- en: '`get_annual_avg_div_yield()`'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_annual_avg_div_yield()`  '
- en: '`get_beta()`'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_beta()`  '
- en: '`get_book_value()`'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_book_value()`  '
- en: '`get_cost_of_revenue()`'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_cost_of_revenue()`  '
- en: '`get_currency()`'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_currency()`  '
- en: '`get_current_change()`'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_current_change()`  '
- en: '`get_current_percent_change()`'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_current_percent_change()`  '
- en: '`get_current_price()`'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_current_price()`  '
- en: '`get_current_volume()`'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_current_volume()`  '
- en: '`get_daily_dividend_data(start_date, end_date)`'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_daily_dividend_data(start_date, end_date)`  '
- en: '`get_daily_high()`'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_daily_high()`  '
- en: '`get_daily_low()`'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_daily_low()`  '
- en: '`get_dividend_rate()`'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_dividend_rate()`  '
- en: '`get_dividend_yield()`'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_dividend_yield()`  '
- en: '`get_earnings_per_share()`'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_earnings_per_share()`  '
- en: '`get_ebit()`'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_ebit()`  '
- en: '`get_exdividend_date()`'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_exdividend_date()`  '
- en: '`get_financial_stmts(frequency, statement_type, reformat=True)`'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_financial_stmts(frequency, statement_type, reformat=True)`  '
- en: '`get_five_yr_avg_div_yield()`'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_five_yr_avg_div_yield()`  '
- en: '`get_gross_profit()`'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_gross_profit()`  '
- en: '`get_historical_price_data(start_date, end_date, time_interval)`'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_historical_price_data(start_date, end_date, time_interval)`  '
- en: '`get_income_before_tax()`'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_income_before_tax()`  '
- en: '`get_income_tax_expense()`'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_income_tax_expense()`  '
- en: '`get_interest_expense()`'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_interest_expense()`  '
- en: '`get_key_statistics_data()`'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_key_statistics_data()`  '
- en: '`get_market_cap()`'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_market_cap()`  '
- en: '`get_net_income()`'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_net_income()`  '
- en: '`get_net_income_from_continuing_ops()`'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_net_income_from_continuing_ops()`  '
- en: '`get_num_shares_outstanding(price_type=''current'')`'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_num_shares_outstanding(price_type=''current'')`  '
- en: '`get_open_price()`'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_open_price()`  '
- en: '`get_operating_income()`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_operating_income()`  '
- en: '`get_payout_ratio()`'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_payout_ratio()`  '
- en: '`get_pe_ratio()`'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_pe_ratio()`  '
- en: '`get_prev_close_price()`'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_prev_close_price()`  '
- en: '`get_price_to_sales()`'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_price_to_sales()`  '
- en: '`get_research_and_development()`'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_research_and_development()`  '
- en: '`get_stock_earnings_data(reformat=True)`'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_stock_earnings_data(reformat=True)`'
- en: '`get_stock_exchange()`'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_stock_exchange()`'
- en: '`get_stock_price_data(reformat=True)`'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_stock_price_data(reformat=True)`'
- en: '`get_stock_quote_type_data()`'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_stock_quote_type_data()`'
- en: '`get_summary_data(reformat=True)`'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_summary_data(reformat=True)`'
- en: '`get_ten_day_avg_daily_volume()`'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_ten_day_avg_daily_volume()`'
- en: '`get_three_month_avg_daily_volume()`'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_three_month_avg_daily_volume()`'
- en: '`get_total_operating_expense()`'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_total_operating_expense()`'
- en: '`get_total_revenue()`'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_total_revenue()`'
- en: '`get_yearly_high()`'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_yearly_high()`'
- en: '`get_yearly_low()`'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_yearly_low()`'
- en: We will explore the `pandas_datareader` library in the next section.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一部分中探索 `pandas_datareader` 库。
- en: Exploring the pandas_datareader Python library
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 pandas_datareader Python 库
- en: '`pandas_datareader` is one of the most advanced libraries for financial data
    and offers access to multiple data sources.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas_datareader` 是用于金融数据的最先进的库之一，提供对多个数据源的访问。'
- en: 'Some of the data sources supported are as follows:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的一些数据源如下：
- en: Yahoo Finance
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 雅虎财经
- en: The Federal Reserve Bank of St Louis' FRED
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 圣路易斯联邦储备银行的 FRED
- en: IEX
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IEX
- en: Quandl
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Quandl
- en: Kenneth French's data library
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kenneth French 的数据库
- en: World Bank
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 世界银行
- en: OECD
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经济合作与发展组织
- en: Eurostat
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eurostat
- en: Econdb
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Econdb
- en: Nasdaq Trader symbol definitions
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 纳斯达克交易员符号定义
- en: Refer to [https://pandas-datareader.readthedocs.io/en/latest/remote_data.html](https://pandas-datareader.readthedocs.io/en/latest/remote_data.html)
    for a full list.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 参考[https://pandas-datareader.readthedocs.io/en/latest/remote_data.html](https://pandas-datareader.readthedocs.io/en/latest/remote_data.html)以获取完整列表。
- en: 'Installation is simple:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 安装很简单：
- en: '[PRE18]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Let''s now set up the basic data retrieval parameters:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们设置基本的数据检索参数：
- en: '[PRE19]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The general access method for downloading the data is `data.DataReader(ticker,
    data_source, start_date, end_date)`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 下载数据的一般访问方法是 `data.DataReader(ticker, data_source, start_date, end_date)`。
- en: Access to Yahoo Finance
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问雅虎财经
- en: 'Let''s download the last 10 years'' worth of Apple stock prices:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们下载 Apple 过去10年的股票价格：
- en: '[PRE20]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The output is virtually identical to the output from the `yahoofinancials` library
    in the preceding section.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 输出与前一部分中的 `yahoofinancials` 库的输出几乎相同。
- en: Access to EconDB
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问 EconDB
- en: The list of available tickers is available at [https://www.econdb.com/main-indicators](https://www.econdb.com/main-indicators).
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 可用股票标记列表在[https://www.econdb.com/main-indicators](https://www.econdb.com/main-indicators)上可用。
- en: 'Let''s download the time series of monthly oil production in the US for the
    last 10 years:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们下载美国过去10年的月度石油产量时间序列：
- en: '[PRE21]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Each data source has different output columns.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据源都有不同的输出列。
- en: Access to the Federal Reserve Bank of St Louis' FRED
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问圣路易斯联邦储备银行的 FRED
- en: The list of available data, along with tickers, can be inspected at [https://fred.stlouisfed.org/](https://fred.stlouisfed.org/).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在[https://fred.stlouisfed.org/](https://fred.stlouisfed.org/)检查可用数据列表和标记。
- en: 'Let''s download the last 10 years of real gross domestic product of the USA:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们下载美国过去10年的实际国内生产总值：
- en: '[PRE22]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We restricted the output to just two rows:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将输出限制为只有两行：
- en: '[PRE23]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now, let''s study 5 years of the 20-year constant maturity yields on U.S. government
    bonds:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们研究美国政府债券20年期恒久收益率的5年数据：
- en: '[PRE24]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The Federal Reserve Bank of St Louis' FRED data is one of the cleanest data
    sources available, offering complimentary support.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 圣路易斯联邦储备银行的 FRED 数据是可用的最清洁的数据源之一，提供免费支持。
- en: Caching queries
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缓存查询
- en: One of the key advantages of the library is its implementation of caching the
    results of queries, thereby saving bandwidth, speeding up code execution, and
    preventing the banning of IPs due to the overuse of APIs.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 该库的一个关键优势是实现了查询结果的缓存，从而节省带宽，加快代码执行速度，并防止因 API 过度使用而禁止 IP。
- en: 'By way of an example, let''s download the entire history of Apple stock:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 举例来说，让我们下载 Apple 股票的全部历史数据：
- en: '[PRE25]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Let''s now access just one data point:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们只访问一个数据点：
- en: '[PRE26]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Caching can be enabled for all previous examples, too.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 缓存也可以为所有以前的示例启用。
- en: Exploring the Quandl data source
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 Quandl 数据源
- en: Quandl is one of the largest repositories of economic/financial data on the
    internet. Its data sources can be accessed free of charge. It also offers premium
    data sources, for which there is a charge.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Quandl 是互联网上最大的经济/金融数据存储库之一。其数据源可以免费访问。它还提供高级数据源，需要付费。
- en: 'Installation is straightforward:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 安装很简单：
- en: '[PRE27]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To access the data, you have to provide an access key (apply for one at [https://quandl.com](https://quandl.com)):'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问数据，您必须提供访问密钥（在[https://quandl.com](https://quandl.com)申请）：
- en: '[PRE28]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: To find a ticker and data source, use [https://www.quandl.com/search](https://www.quandl.com/search).
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找股票和数据源，请使用[https://www.quandl.com/search](https://www.quandl.com/search)。
- en: 'Let''s now download the `Monthly average consumer prices in metropolitan France
    - Apples (1 Kg); EUR` data:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们下载`法国大都市地区每月平均消费价格 - 苹果（1 公斤）；欧元`数据：
- en: '[PRE29]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Let''s now download Apple''s fundamental data:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们下载苹果公司的基本数据：
- en: '[PRE30]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The difference between Yahoo and Quandl data is that the Quandl data is more
    reliable and more complete.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Yahoo 和 Quandl 数据之间的区别在于，Quandl 数据更可靠、更完整。
- en: Exploring the IEX Cloud data source
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 IEX Cloud 数据源
- en: IEX Cloud is one of the commercial offerings. It offers a plan for individuals
    at USD 9 per month. It also offers a free plan, with a limit of 50,000 API calls
    per month.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: IEX Cloud 是其中一个商业产品。它为个人提供每月 9 美元的计划。它还提供一个免费计划，每月限制为 50,000 次 API 调用。
- en: 'The installation of the Python library is standard:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Python 库的安装是标准的：
- en: '[PRE31]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The full library's documentation is available at [https://addisonlynch.github.io/iexfinance/stable/index.html](https://addisonlynch.github.io/iexfinance/stable/index.html).
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的库文档可在[https://addisonlynch.github.io/iexfinance/stable/index.html](https://addisonlynch.github.io/iexfinance/stable/index.html)上找到。
- en: 'The following code is designed to retrieve all symbols:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码旨在检索所有符号：
- en: '[PRE32]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The following code is designed to obtain Apple''s balance sheet (not available
    for free accounts):'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码旨在获取苹果公司的资产负债表（免费账户不可用）：
- en: '[PRE33]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The following code is designed to get the current price (not available for
    free accounts):'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码旨在获取当前价格（免费账户不可用）：
- en: '[PRE34]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The following code is designed to get the sector performance report (not available
    for free accounts):'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码旨在获取部门绩效报告（免费账户不可用）：
- en: '[PRE35]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The following code is designed to get historical market data for Apple:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码旨在获取苹果公司的历史市场数据：
- en: '[PRE36]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: We can see that each data source offers a slightly different set of output columns.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到每个数据源提供了略有不同的输出列。
- en: Exploring the MarketStack data source
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索 MarketStack 数据源
- en: MarketStack offers an extensive database of real-time, intra-day, and historical
    market data across major global stock exchanges. It offers free access for up
    to 1,000 monthly API requests.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: MarketStack 提供跨主要全球股票交易所的实时、盘内和历史市场数据的广泛数据库。它为每月高达 1,000 次的 API 请求提供免费访问。
- en: While there is no official MarketStack Python library, the REST JSON API provides
    comfortable access to all its data in Python.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然没有官方的 MarketStack Python 库，但 REST JSON API 在 Python 中提供了对其所有数据的舒适访问。
- en: 'Let''s download the adjusted close data for Apple:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们下载苹果公司的调整后收盘数据：
- en: '[PRE37]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Let''s now download all tickers on the Nasdaq stock exchange:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们下载纳斯达克证券交易所的所有股票代码：
- en: '[PRE38]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The ticket universe retrieval function is one of the most valuable functions
    of MarketStack. One of the first steps for all backtesting is determining the
    universe (that is, the complete list) of the stocks to trade. Then, you restrict
    yourself to a subset of that list, for example, by trading only stocks with certain
    trends, or certain volumes.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: MarketStack 的票务宇宙检索功能是最有价值的功能之一。所有回测的第一步之一是确定股票交易的宇宙（即完整列表）。然后，您可以通过仅交易具有某些趋势或某些交易量的股票等方式将自己限制在该列表的子集中。
- en: Summary
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: In this chapter, we have outlined different ways to obtain financial and economic
    data in Python. In practice, you usually use multiple data sources at the same
    time. We explored the `yahoofinancials` Python library and saw single- and multiple-tickers
    retrievals. We then explored the `pandas_datareader` Python library to access
    Yahoo Finance, EconDB, and Fed’s Fred data and cache queries. We then explored
    the Quandl, IEX Cloud and MarketStack data sources.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们概述了在 Python 中获取金融和经济数据的不同方法。在实践中，您通常同时使用多个数据源。我们探索了`yahoofinancials`
    Python 库，并看到了单个和多个股票检索。然后，我们探索了`pandas_datareader` Python 库，以访问 Yahoo Finance、EconDB
    和 Fed 的 Fred 数据，并缓存查询。然后我们探索了 Quandl、IEX Cloud 和 MarketStack 数据源。
- en: In the next chapter, we introduce the backtesting library, Zipline, as well
    as the trading portfolio performance and risk analysis library, PyFolio.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍回测库 Zipline，以及交易组合绩效和风险分析库 PyFolio。
