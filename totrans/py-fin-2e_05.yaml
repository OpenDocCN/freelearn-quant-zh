- en: Chapter 5. Bond and Stock Valuation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Bond or fixed income securities and stock are two widely used investment vehicles.
    Thus, they deserve a thorough discussion. Before touching upon bond or stock valuation,
    we have to discuss interest rate and its related concepts, such as **Annual Percentage
    Rate** (**APR**), **Effective Annual Rate** (**EAR**), compounding frequency,
    how to convert one effective rate to another one, the term structure of interest
    rate, how to estimate the selling price of a regular bond, how to use the so-called
    discount dividend model to estimate the price of a stock, and so on. In particular,
    this chapter will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to interest rates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion between various effective rates, APR
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The term structure of interest rates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bond evaluation and YTM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Credit rating versus default spread
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Definition of duration and modified duration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stock evaluation, total returns, capital gain yield, and dividend yield
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A new data type – dictionary
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to interest rates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There is no doubt that interest rates play an important role in our economy.
    When the economy is expanding, interest rates tend to go high since the high demand
    of capital would push up borrowing rates. In addition, inflation might go up as
    well. When this is happening, central banks will do their best to control the
    inflation at an appropriate level. One tool to fight the potential inflation hike
    is to increase banks' lending rates. On the other hand, the bond price is negatively
    correlated with interest rates.
  prefs: []
  type: TYPE_NORMAL
- en: 'There is a good chance that many readers of this book are confused with the
    difference between simple interest and compound interest. Simple interest does
    not consider interest on interest while compound interest rate does. Assume that
    we borrow $1,000 today for 10 years. What are the future values at the end of
    each year if the annual rate is 8%? Assume that this annual rate is both the simple
    and compounded interest rates. Their corresponding formulae are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_05_01.jpg)![Introduction to interest
    rates](img/B06175_05_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *PV* is the loan today, *R* is the period rate, and *n* is the number
    of periods. The graphic representation of the principal, the future values with
    a simple interest rate, and the future values with a compound interest rate are
    shown in the diagram which follows. The related Python program is in *Appendix
    A*. The difference between the top red line (future values with a compounded interest
    rate) and the middle one (future values with a simple interest rate) is interest
    on interest:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_05_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In [Chapter 3](ch03.html "Chapter 3. Time Value of Money"), *Time Value of Money*
    we have learnt the time value of money. Let's use the same simple example to start.
  prefs: []
  type: TYPE_NORMAL
- en: 'Today, $100 is deposited in a bank with a 10% annual interest rate. How much
    is it at the end of one year? We know that it will be $110\. $100 is our principal
    while $10 will be the interest payment. Alternatively, the following formula could
    be applied:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_1000.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *FV* is the future value, *PV* is the present value, *R* is the period
    effective rate and *n* is the number of periods. Here is the result: *100*(1+0.1)=110*.
    Compared with [Chapter 3](ch03.html "Chapter 3. Time Value of Money"),*Time Value
    of Money*, a careful reader would find that *R* is here defined as *effective
    period rate* instead of *period rate*. The keyword of *effective* was added. In
    previous chapters, there is an *R* in all formulae, such as in *FV*(of one *PV*),
    *PV*(one *FV*), *PV*(annuity), *PV*(annuity due), *PV*(growing annuity), *FV*(annuity),
    *FV*(annuity due) and *FV*(growing annuity). The *R* in those formulae is actually
    an effective rate. Here, we explain this important concept.'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let''s see the conversional way to estimate an effective rate for a
    given **Annual Percentage Rate** (**APR**) and a compounding frequency (*m*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_1001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, ![Introduction to interest rates](img/B06175_05_61.jpg) is an effective
    period rate with respect to a certain period (identified by *m*), *APR* is Annual
    Percentage Rate and *m* is the compounding frequency. The values of m could be
    1 for annual, 2 for semi-annual, 4 for quarterly, 12 for monthly, and 365 for
    daily. If APR is 10% compounded semi-annually, then the effective semi-annual
    rate is 5% (=0.10/2). On the other hand, if APR is 0.08 compounded quarterly,
    then the effective quarterly rate is 2% (=0.08/4).
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example related to house mortgage. John Doe intends to buy a house
    in Buffalo, New York, with a price tag of $240,000\. He plans to pay 20% of the
    price of the house as a down payment and borrow the rest from M&T Bank. For a
    30-year mortgage, the bank offers an annual rate of 4.25%. How much is his monthly
    mortgage payment? As discussed in [Chapter 3](ch03.html "Chapter 3. Time Value
    of Money"),*Time Value of Money*, the `scipy.pmt()`function could be applied here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: In the preceding code, the effective monthly rate is 0.045/12\. The reason behind
    this calculation is that the compounding frequency is assumed to be monthly since
    this is a mortgage with a regular monthly payment. Based on this result, every
    month John has to pay $972.84.
  prefs: []
  type: TYPE_NORMAL
- en: 'To compare two rates with different compounding frequencies, we have to convert
    them into the same rates before we could compare. One such effective rate is called
    **Effective Annual Rate** (**EAR**). For a given APR with a compounding frequency
    of *m*, its *EAR* is calculated here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_1002.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Assume that a company plans to borrow $10m for a long-term investment project.
    Bank A offers an annual rate of 8% compounded semi-annually, while bank B offers
    a rate of 7.9% compounded quarterly. For the company, which borrowing rate is
    cheaper? By applying the preceding formula, we have the following results. Since
    8.137% is lower than 8.160%, the offer from bank B is better:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Obviously, we could have other benchmarks. For example, we know that the effective
    semi-annual rate from bank A''s offer is 4% (=0.08/2). Then we would ask: what
    is the equivalent effective quarterly rate from bank B? In other words, we compare
    two effective semi-annual rates. In order to convert one effective rate to another
    one, a so-called **2-Step Approach** is introduced:'
  prefs: []
  type: TYPE_NORMAL
- en: Which effective rate is given? To answer this question, we simply apply equation
    (4). There is no rationality behind this since it is quoted this way by financial
    institutions. Assume that the annual rate is 10%, compounded semi-annually. The
    effective semi-annual rate is given, and its value is 5%, that is, *0.1/2=0.05*.If
    APR is 8%, compounded monthly, then it means that the effective monthly rate is
    0.833%, that is,*0.08/12=0.006666667*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to convert one given effective rate to another target effective rate? If
    the given effective semi-annual rate is 5%, what is the equivalent effective quarterly
    rate? We draw a time line of one year, with two frequencies. On top, we have the
    given effective rate and its corresponding compounding frequency. In this case,
    5% and 2 periods (Rsemi=5% and n1=2):![Introduction to interest rates](img/B06175_05_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the bottom, we have the effective rate we intend to estimate and its corresponding
    frequency (*R* and *n2=4*). Then, we apply the future formula of ![Introduction
    to interest rates](img/B06175_05_62.jpg)by using *PV=1* twice with different input
    values:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_05_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Set them equal, that is, ![Introduction to interest rates](img/B06175_05_63.jpg)
    Solve for *R*, we have *R=(1+0.05)**(2/4)-1*. The result is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The effective quarterly rate is 2.469508%. The beauty of this approach is that
    we don't have to remember other formula except *FV=PV(1+R)n*. By the way, there
    is no link between this step and step 1.
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, we could apply certain formula directly. Here, we show how to
    derive two formula: from *APR* to *Rm* and from *APR1* to *APR2*. For formula
    between two annual rates of *APR1(m1)*and *APR2(m2)*is given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_1004.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *APR1* (*APR2*) is the first (second) APR Annual Percentage Rate, while
    *m1* (*m2*) is its corresponding compounding frequency per year. Based on the
    preceding equation, we have the following formula to calculate the effective rate
    with a new compounding frequency (*m2*) for a given APR (*APR1*) and its corresponding
    frequency (*m1*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_1005.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'For the same example, a bank offers10% annual rate compounding semi-annually.
    What is its equivalent effective quarterly rate? By applying *Equation (7)* with
    a set of input values of *APR1=0.10, m1=* *2*, and *m2=4*, see the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'We have the same results as that from the 2-step approach. Actually, we could
    write a simple Python function based on equation (7), see the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Calling the function is simple, as we can see in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'With a few comments, such as the definitions of those three inputs, a formula
    used to estimate our target effective rate, plus a few examples, could be added.
    The program should be clearer see the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Objective: convert one APR to another effective rate `Rm`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Formula used: *Rm=(1+APR1/m1)**(m1/m2)-1*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'To get the second APR(*APR2*) for a given APR and its corresponding frequency,
    we have the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_1006.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'By applying *equation (8)*, we have a result for APR2:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The corresponding -line Python program is shown here. To save space, the program
    has no additional explanation or comments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'For a continuously compounded interest rate, different ways could be used to
    explain this confusion concept. First, we apply the formula of **Effective Annual
    Rate** (**EAR**) by increasing the compounding frequency of *m*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_05_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'For example, if APR is 10% and compounded semi-annually, EAR will be 10.25%:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Since this function is quite simple, we could write a Python function instead,
    see the following program:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, assume that the APR is 10% and let''s increase the compounding frequency,
    see the following program:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is the output image:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_05_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Actually, when the compounding frequency approaches an infinity, the limit
    will be our continuously compounded rate with a formula of *EAR=exp(Rc)-1*, see
    the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'The second method to explain the formula of a continuously compounded rate,
    is to remember another way to calculate the future value of one present cash flow.
    Recall in [Chapter 3](ch03.html "Chapter 3. Time Value of Money"),*Time Value
    of Money*, we have the following formula to calculate the future value for a given
    present value:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_05_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *FV* is the future value, *PV* is the present value, *R* is the effective
    period rate and *n* is the number of periods. Another way to calculate the future
    value of one present value is using a continuously compounded rate, *Rc*. Its
    formula is given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_1007.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *Rc* is the continuously compounded rate, *T* is time when the future
    value is calculated (in years). If we choose one year as *T* and $1 as *PV*, equaling
    the preceding two equations would lead to the following one:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_05_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Note that *Rm=APR/m* is from *Equation (4)*. Then solve the preceding equation
    for *Rc*. Finally, for a given APR and *m* (compounding frequency), we have the
    following formula to estimate *Rc*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_1008.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, `log()` is the natural logarithm function. Assume that the APR is 2.34%
    compounded semi-annually. What is its equivalent Rc?
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, we could write a 2-line Python function based on the preceding
    formula to convert an APR to Rc:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'The output would be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Similarly, for a given *Rc*, we have the following formula to calculate its
    corresponding *APR*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_1009.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The related Python function is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'For an effective period rate, we have the following equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to interest rates](img/B06175_1010.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The function and an example are shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'The output can be seen here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, an analogy of withdrawing $100 from a bank is compared with the concept
    of effective rates. Assume that we go to a bank to withdraw $100\. The following
    seven combinations are all equal:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Denomination of bills | Number of bills |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 100 | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| 50 | 2 |'
  prefs: []
  type: TYPE_TB
- en: '| 20 | 5 |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | 10 |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | 20 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 50 |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | 100 |'
  prefs: []
  type: TYPE_TB
- en: Table 5.1 Denominations and number of bills for withdrawing $100
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Now, let''s look at the similar situation related to effective rates with different
    combinations of APRs and compounding frequencies (m). APR is 10% and compounded
    semi-annually. The following 11 interest rates are all equal, where **NA** is
    not applicable:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Interest rate quotation | M |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| APR is 10%, compounded semi-annually | 2 |'
  prefs: []
  type: TYPE_TB
- en: '| APR is 10.25%, compounded annually | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| APR is 9.87803063838397%,compounded quarterly | 4 |'
  prefs: []
  type: TYPE_TB
- en: '| APR is 9.79781526228125%,compounded monthly | 12 |'
  prefs: []
  type: TYPE_TB
- en: '| APR is 9.75933732280154%. compounded daily | 365 |'
  prefs: []
  type: TYPE_TB
- en: '|   |   |'
  prefs: []
  type: TYPE_TB
- en: '| Effective annual rate is 0.1025 | NA |'
  prefs: []
  type: TYPE_TB
- en: '| Effective semi-annually rate is 0.05 | NA |'
  prefs: []
  type: TYPE_TB
- en: '| Effective quarterly rate is 0.0246950765959599 | NA |'
  prefs: []
  type: TYPE_TB
- en: '| Effective monthly rate is 0.00816484605190104 | NA |'
  prefs: []
  type: TYPE_TB
- en: '| Effective daily rate is 0.000267379104734289 | NA |'
  prefs: []
  type: TYPE_TB
- en: '| Continuously compounded rate is 0.0975803283388641 | NA |'
  prefs: []
  type: TYPE_TB
- en: Table 5.2 Even with different APRs and compounding frequencies, they are all
    equal
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Let''s look at another analogy. Mary''s monthly salary is $5,000\. Thus, her
    annual salary would be *$60,000 (=50,000 * 12)*. This is our conventional way
    to calculate monthly salary versus the annual one. Now, let''s make a simple twist.
    The company tells Mary that she would get just one lump sum at the end of the
    year. At the same time, she could borrow her original monthly salary from their
    company''s accounting department and the company would cover the related cost.
    Literately, there is no difference between those two scenarios. Assume that the
    monthly effective rate is 0.25%. This means that in January, Mary would borrow
    $5,000 for 11 months because she would pay it back at the end of the year. This
    is true for February and other months. Recall from [Chapter 3](ch03.html "Chapter 3. Time
    Value of Money"),*Time Value of Money*, this represents the future value of an
    annuity. For this case, the `scipy.fv()` function could be used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: The result suggests that receiving $5,000 every month for 12 months is the same
    as receiving $60,831.91 at the end of the year just once. Obviously, compared
    with the original $60,000 annual salary, the extra money of $831.91 is for the
    interest payments.
  prefs: []
  type: TYPE_NORMAL
- en: Term structure of interest rates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The term structure of interest rates is defined as the relationship between
    risk-free rate and time. A risk-free rate is usually defined as the default-free
    treasury rate. From many sources, we could get the current term structure of interest
    rates. For example, on 12/21/2016, from Yahoo!Finance at [http://finance.yahoo.com/bonds](http://finance.yahoo.com/bonds),
    we could get the following information.
  prefs: []
  type: TYPE_NORMAL
- en: 'The plotted term structure of interest rates could be more eye catching; see
    the following image:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Term structure of interest rates](img/B06175_05_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Based on the information supplied by the preceding image, we have the following
    code to draw a so-called yield curve:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'The related graph is given in the following image:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Term structure of interest rates](img/B06175_05_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The upward sloping''s term structure means the long-term rates are higher than
    the short-term rates. Since the term structure of interest rates has many missing
    numbers, the function called `.interpolate()` from the `pandas` module could be
    used to interpolate those values, see the following example where we have two
    missing values between `2` and `6`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'The related output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'We could manually calculate those missing values. First, a Δ is estimated:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Term structure of interest rates](img/B06175_1011.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, Δ is the incremental value between *v2*(the ending value) and *v1* (the
    beginning value), and *n* is the number of internals between those two values.
    The Δfor the above case is *(6-2)/3=1.33333*. Thus, the next value will be *v1+Δ=2+1.33333=3.33333*.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the preceding example, related to the term structure of interest rates,
    from years 6 to 9, there is no data. The code and output are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: The term structure of interest rates is very important since it serves as a
    benchmark to estimate **Yield to Maturity** (**YTM**) for corporate bonds. YTM
    is the period return if the bond holder holds until the bond expires. Technically
    speaking, YTM is the same as **Internal Rate of Return** (**IRR**). In the financial
    industry, the spread, defined as the difference between YTM of a corporate bond
    over the risk-free rate, is used to estimate the discount rate for corporate bonds.
    The spread is a measure of the default risk. Thus, it should be closely correlated
    with the credit rating of the company and of the bond.
  prefs: []
  type: TYPE_NORMAL
- en: 'For this reason, a Python dataset called `spreadBasedOnCreditRating.pkl` is
    used to explain the relationship between the default spread and credit rating.
    The dataset could be downloaded from the author''s web page at [http://canisius.edu/~yany/python/spreadBasedOnCreditRating.pkl](http://canisius.edu/~yany/python/spreadBasedOnCreditRating.pkl).
    The following program retrieves and prints the data. The dataset is assumed to
    be in the `c:/temp/` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: The index column is the credit rating based on both Moody's and Standard& Poor's
    credit rating scales. Except for the last row, US Treasury Yield, the values in
    the dataset have a unit of basis point which is worth one hundredth of 1%. In
    other words, each value should be divided by 100 twice. For example, for an `AA`
    rated bond, its spread on year 5 is 50 basis points, that is, *0.005 (=50/10000)*.
    If the risk-free rate for a 5-year zero-coupon bond is 2%, the corresponding rate
    for a corporate bond, rated as AA, would be *2.5% (2.5%+ 0.5%)*.
  prefs: []
  type: TYPE_NORMAL
- en: 'The duration is a very important concept for risk analysis and hedging. The
    duration is defined as: the number of years needed to recover our initial investment.
    Let''s look at the simple case: a zero-coupon bond. Today, we buy a 1-year zero-coupon
    bond. One year later, we would receive its face value of $100\. Its timeline and
    cash flow are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Term structure of interest rates](img/B06175_05_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Obviously, we have to wait for one year to recover our initial investment.
    Thus, the duration of this 1-year bond is 1\. For a zero-coupon bond, the duration
    of the bond is the same as its maturity:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Term structure of interest rates](img/B06175_1012.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here,*D* is duration and *T* is the maturity of a zero-coupon bond (in years).
    Let''s look at our second example that we would have two equal cash flows of $100
    at the end of the first two years:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Term structure of interest rates](img/B06175_05_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'How many years do we have to wait to recover our initial investment? The fact
    is that we have to wait for one year to receive the first $100 and wait for two
    years to receive the second $100\. Thus, the first guess would be 1.5 years. However,
    after reading [Chapter 3](ch03.html "Chapter 3. Time Value of Money"),*Time Value
    of Money*, we know that $100 received in year 2 is not equivalent to $100 received
    in year 1\. If using the end of year 1 as our benchmark, the equivalent value
    of the second $100 is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we would say that we have to wait 1 year to receive $100 and wait two
    years to receive $95.24\. On average, how many years would we wait? The solution
    should be a weighted average. The weights of those two $100s are given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Finally, we have *D=w1*T1+w2*T2=w1*1+w2*2=0.5122*1 + 0.487805*2=1.487*. The
    answer is that we have to wait 1.487 years to recover our initial investment.
    In the above reasoning, we discount the second $100 to the end of year 1 to get
    our answer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, we could compound the first $100 to the end of year2, then compare,
    see the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'The corresponding weights are given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'The solution should be the same since the weights are the same as before. This
    suggests that we could use any point of time to estimate the weights of those
    cash flows happening at different points in time. Conventionally, the present
    value is used as the benchmark, see the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Again, both weights remain the same. Another advantage of using the present
    value as our benchmark is that we could estimate the total present value as well.
    The total value is given here. We could argue that if we invested $185.94 today,
    we would recover 51.2% in year 1 and the rest by the end of year 2\. Thus, on
    average we have to wait for 1.487 years:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'The general formula to estimate the duration for *n*given future cash flows
    is given in the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Term structure of interest rates](img/B06175_1013.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*D* is duration, *n* is the number of cash flows, *wi* is the weight of the
    ith cash flow, and *wi* is defined as the present value of ith cash flow over
    the present values of all cash flows, *Ti* is the timing (in years) of the ith
    cash flow. Here, a Python function called `duration` is written:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'If we add a header, the program would be more helpful, see the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Bond evaluation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bond is also called fixed income security. There are different types of categories.
    Based on maturity, bonds could be classified into short-term, median-term, and
    long-term. For US Treasury securities, T-bills are the securities issued by the
    Department of Treasury with a maturity less than 1 year, T-notes are for government
    bonds beyond 1 year but less than 10 years. T-bonds are treasury securities with
    a maturity beyond 10 years. Based on coupon payments, there are zero-coupon bonds
    and coupon bonds. When it is a central government's bond, we call them risk-free
    bonds since the central government usually has a right to print money, that is
    by default, free.
  prefs: []
  type: TYPE_NORMAL
- en: 'If a bond holder could convert his/her bond into the underlying common stock
    with a predetermined number of shares before maturity, it is called a convertible
    bond. If a bond issuer could retire or buy back a bond before its maturity, it
    is named a **callable bond**. On the other hands, if the bond buyers could sell
    the bond back to the original issuers before maturity, it is balled a **puttable
    bond**. The cashflow for a zero-coupon bond is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bond evaluation](img/B06175_05_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, *FV* is the face value and n is the maturity (in years). To estimate the
    price of such a zero-coupon bond, we could apply the present value of one future
    cash flow easily. In other words, we could apply the `scipy.pv()` function.
  prefs: []
  type: TYPE_NORMAL
- en: 'For a coupon bond, we expect a set of regular coupon payments. The periodic
    coupon payment is estimated by the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bond evaluation](img/B06175_05_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here,*FV* is the face value of the bond and frequency is the number of coupon
    payments each year. Let''s look at a 3-year coupon bond. The face value is $100
    with an annual coupon rate of 8%. The coupon payment is annual. The annual coupon
    payment is $8 for the next three years and the investors would also receive the
    face value of $100 on the maturity date. The timeline of this coupon bond and
    related future cash flows are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bond evaluation](img/B06175_05_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Recall that for the present value of one future cash flow and the present value
    of annuity, we have the following two formulae:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bond evaluation](img/B06175_05_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *C* is a constant cash flow and *n* is the number of periods. The price
    of a coupon bond is the combination of these two types of payments:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bond evaluation](img/B06175_1014.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The `scipy.pv()` function could be used to calculate the price of bond. Assume
    that the effective annual rate is 2.4%:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: Based on the above result, the price of this 3-year coupon bond is $116.02.
  prefs: []
  type: TYPE_NORMAL
- en: Since the price of a bond is the present value of its all future cash flows,
    its price should be negatively correlated with the discount rate. In other words,
    should the interest rate increase, the price of bonds would fall, and vice versa.
  prefs: []
  type: TYPE_NORMAL
- en: '**Yield to Maturity** (**YTM**) is the same concept as **International Rate
    of Return** (**IRR**). Assume that we bought a zero-coupon bond for $717.25\.
    The face value of the bond is $1,000 and it would mature in 10 years. What is
    its YTM? For a zero-coupon bond, we have the following formula for YTM:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bond evaluation](img/B06175_1015.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here,*FV* is the face value, *PV* is the price of the zero-coupon bond and
    *n* is the number of years (maturity).By applying the formula, we have *717.25*(1+YTM)^10=1000*.
    Thus, we have the following result:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'Assume that we bought a bond for $825 today. It has a maturity term of 5 years.
    The coupon rate is 3% and coupon payments are annual. If the face value is $1,000,
    what is the YTM? The `scipy.rate()` function could be used to estimate the YTM:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'Based on this result, the YTM is 7.498%. The relationship between bond price,
    coupon rate, and face value is shown in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Condition | Bond price versus face value | Premium, par, and discount |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Coupon rate> YTM | Price of bond> FV | At a premium |'
  prefs: []
  type: TYPE_TB
- en: '| Coupon rate =YTM | Price of bond=FV | At par |'
  prefs: []
  type: TYPE_TB
- en: '| Coupon rate <YTM | Price of bond<FV | At a discount |'
  prefs: []
  type: TYPE_TB
- en: 'Table 5.3: Relationship between bond price, coupon rate, and face value'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Obviously, for two zero-coupon bonds, the longer the maturity, the riskier the
    bond. The reason is that for a zero-coupon bond with a longer maturity, we have
    to wait longer to recoup our initial investment. For the coupon bond with the
    same maturity, the higher the coupon rates, the safer the bond is since we could
    receive more payments early for the bond with a higher coupon rate. How about
    zero-coupon bonds and a coupon bond with different maturity dates?
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is one example, we have a 15-year zero coupon bond with a face value of
    $100 and a coupon bond of 30years. The coupon rate is 9% with an annual coupon
    payment. Which bond is riskier? If the current yield jumps from 4% to 5%, what
    are the percentages for both of them? The riskier bond would have a much higher
    percentage change when the yield jumps or falls:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'The related output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'For the coupon bond, we have the following result:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'Based on the preceding results, the 30-year coupon bond is riskier than the
    15-year zero coupon bond since it has a bigger percentage change. For the 15-year
    zero coupon bond, its duration is 15 years. How about the aforementioned 30-year
    coupon bonds? The following result shows it is 17 years. Note that `p4f` is a
    set of Python programs written by the author:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'Note, in order to use the model called `p4f`, readers of this book can download
    it at [http://canisius.edu/~yany/python/p4f.cpython-35.pyc](http://canisius.edu/~yany/python/p4f.cpython-35.pyc).
    The relationship between the percentage change of a bond price and the change
    of YTM is given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bond evaluation](img/B06175_1016.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here,*B* is the bond price, ΔB is the change in bond price, *y* is YTM, *m*
    is the corresponding compounding frequency. The modified duration is defined here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Bond evaluation](img/B06175_1017.jpg)![Bond evaluation](img/B06175_1018.jpg)'
  prefs: []
  type: TYPE_IMG
- en: For banks, their deposits usually are short-term while their loans (lending)
    are usually long-term. Thus, banks face an interest rate risk. One hedging strategy
    is called *duration matching*, that is, match the duration of liabilities with
    the duration of assets.
  prefs: []
  type: TYPE_NORMAL
- en: Stock valuation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are several ways to estimate the price of a stock. One method is called
    the *dividend discount model*. The logic is that the price of a stock today is
    simply the summation of the present value of all its future dividends. Let''s
    use the simplest one period model to illustrate. We expect a $1 dividend at the
    end of one year and its selling price is expected to be $50\. If the appropriate
    cost of equity is 12%, what is the price of stock today? The timeline and future
    cash flows are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_05_36.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The price of stock is simply the present values of those two future cash flows,
    $45.54:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: Let's look at a two-period model. We expect two dividends of $1.5 and $2 at
    the end of the next 2 years. In addition, the selling price is expected to be
    $78\. What is the price today?
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_05_37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Assume that for this stock, the appropriate discount rate is 14%. Then the
    present value of the stock is $62.87:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'Along the same lines, we could estimate the cost of equity if both the present
    value and futures values are given. If the current price is $30 and the expected
    selling price at the end of one year is $35:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_05_38.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Then we could estimate the total return:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'The total return, cost of equity (*Re*), has two components: capital gain yield
    and dividend yield:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_1019.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The capital gain yield is 16.667% while the dividend yield is 3.333%. Another
    possible scenario is that a stock might enjoy a constant dividend growth rate.
    Company A is expected to issue a $4 dividend next year and enjoys a constant dividend
    growth rate of 2% afterward. If the cost of equity is 18%, what will be the stock
    price today? From [Chapter 3](ch03.html "Chapter 3. Time Value of Money"), *Time
    Value of Money*, we know that the present value of growing perpetuity formula
    could be applied:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_05_40.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'By using the correct notation, that is, *P0* as today''s stock price, *d1*
    as the first expected dividend, we could have the following equivalent pricing
    formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_1020.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'From the following results, we know that today''s price should be $25:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'Many young and small firms would not issue any dividends since they might need
    capital greatly after they came into existence. After a successful period, those
    firms might enjoy a super growth. After that, firms usually enter a long-term
    normal growth. For those cases, we could apply an n-period model. For an n-period
    model, we have *n+1*future cash flows: n dividend plus 1 selling price. Thus,
    we could have the following general formula for an n period model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_1021.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The selling price at the end of the n period is given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_1022.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s use an example to explain how to apply this n-period model. Assume that
    a company had issued a $1.5 dividend last year. The dividend would enjoy grammatical
    growth in the next 5 years with growth rates of 20%, 15%, 10%, 9%, and 8%. After
    that, the growth rate would be reduced to a long-term growth rate of 3% forever.
    If the rate of return for such types of stocks is 18.2%, what is the stock price
    today? The following table shows the time periods and the growth rates:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Period=> | 1 | 2 | 3 | 4 | 5 | 6 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Growth rate | 0.2 | 0.15 | 0.1 | 0.09 | 0.08 | 0.04 |'
  prefs: []
  type: TYPE_TB
- en: 'As our first step, it should be asked how many periods for the n-period model?
    The rule of thumb is *one period less than the year when the dividend enjoys a
    long-term growth rate*. For this case, we could choose 5:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Period=> | 1 | 2 | 3 | 4 | 5 | 6 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Growth rate | 0.2 | 0.15 | 0.1 | 0.09 | 0.08 | 0.04 |'
  prefs: []
  type: TYPE_TB
- en: '| dividend | 1.80 | 2.07 | 2.277 | 2.48193 | 2.680 | 2.7877 |'
  prefs: []
  type: TYPE_TB
- en: 'The first dividend of 1.8 is from *1.5*(1+0.2)*. To solve this problem, we
    have the following codes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'In the preceding codes, we drop the last cash flow since it is used to calculate
    the selling price of P5\. Because the `scipy.npv()` treats the first cash flow
    happening at time zero, we have to adjust the result by timing it by `(1+R)`.
    Calculating the present of five future dividends separated with the calculation
    of the present value of the selling price is to remind readers of the existence
    of so-called Excel sign convention. The stock price is `17.47` (=9.52+7.95). Alternatively,
    we could use the `p4f.pvPriceNperiodModel()` function, see the following code.
    The Python program is included in *Appendix D*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding model depends on an important assumption, the number of shares
    is constant. Thus, if a company uses a part of its earnings to buy back shares,
    this assumption is violated. Thus, we could not use the *dividend discount model*.
    For those cases, we could apply a so-called share repurchase and the total payout
    model. Here is the formula. The present value of all of the firm''s equity, rather
    than a single share, is calculated first:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_05_44.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Logic Solution expects its total earnings at the end of the year to be about
    $400 million. The company plans to payout 45% of its total earnings: 30% for dividends
    and 15% for shares repurchases. If the company''s long-term growth rate is 3%,
    the cost of equity is 18%, and the number of shares outstanding is 50 million,
    what is its stock price today? The solution is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'The third method is to estimate the total value of the firm, that is, the enterprise
    value. Then we estimate the total value of the equity. Finally, we divide the
    total value of equity by the number of shares outstanding to reach the price.
    The enterprise value is defined here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_05_45.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here,*Equity* is the market value of equity, *Debt* is the total book value
    of debt and Cash is the cash holding. The enterprise value could be viewed as
    the total capital we need to buy a whole company. Let''s look at a simple example.
    Assume that the market value of a company is $6 million, the total debt is $4
    million and the cash holding is $1 million. It seems that an investor needs $10
    million to buy the whole company since she needs $6 million to buy all the shares
    and assume the debt burden of $4 million. Actually, since $1 million cash is available
    for the new owner, she needs to raise just $9 million. After we have the enterprise
    value, the following formula is used to find out the price of one share:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_05_46.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here *V0* is the enterprise value, *Debt* is the debt today, and *Cash* is
    the cash today. *V0* could be viewed as the total value of the firm owned by both
    equity holders and debt (bond) holders:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_1026.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Free cash flow at time *t* is defined as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_1027.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*FCFt* is free cash flow for year *t*, *NIt* is the net income or year *t*,
    *Dt* is the depreciation for year *t*, *CapExt* is the capital expenditure for
    year *t* and ![Stock valuation](img/B06175_05_64.jpg) is the change in net working
    capital for year *t*. Net working capital is the difference between current assets
    and current liability. The generated formula is given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_1028.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*WACC* is the weighted average cost of capital. The reason is that we estimate
    the total value of the whole company, thus it is not appropriate to use the cost
    of equity as our discount rate:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_1029.jpg)'
  prefs: []
  type: TYPE_IMG
- en: ……………(31)
  prefs: []
  type: TYPE_NORMAL
- en: 'Where *We* (*Re*) is the weight (cost) for equity, *Wd* (*Rd*) is the weight
    (before-tax cost) for debt, and *Tc* is the corporate tax rate. Since Re is after-tax
    cost of equity, we have to convert *Rd* (before tax of equity) into the after-tax
    cost of debt by timing (1-Tc). *Vn* could be viewed as the selling price of the
    whole company:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Stock valuation](img/B06175_1030.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Another way to estimate a current stock price is based on certain multiples,
    such as industry P/E ratio. The method is straightforward. Assume that a company's
    next year's expected EPS is $4\. If the industry average P/E ratio is 10, what
    is the stock price today? It is $40 today.
  prefs: []
  type: TYPE_NORMAL
- en: A new data type – dictionary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Dictionaries are unordered datasets and are accessed via keys and not via their
    position. A dictionary is an associative array (also known as hashes). Any key
    of the dictionary is associated (or mapped) to a value. The first variable is
    the `key`, while the second one is the `value`; see the following example. The
    curly parentheses are used. The second value could be any data type such as a
    string, an integer, or a real number:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: Appendix A – simple interest rate versus compounding interest rate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The formula for payment of a simple interest rate is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix A – simple interest rate versus compounding interest rate](img/B06175_05_52.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The future value for compounded interest is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix A – simple interest rate versus compounding interest rate](img/B06175_05_53.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, *PV* is the present value, *R* is the period rate, and *n* is the number
    of periods. Thus, those two future values will be $1,800 and $2,158.93.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following program offers a graphic representation of a principal, simple
    interest payment, and the future values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'The related graph is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix A – simple interest rate versus compounding interest rate](img/B06175_05_54.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding program, the `xlim()` function would set the range of the x
    axis. This is true for the `ylim()` function. The third input variable for both
    the `xlim()` and `ylim()` functions are for the color and the line. The letter
    `b` is for black, `g` is for green, and `r` is for red.
  prefs: []
  type: TYPE_NORMAL
- en: Appendix B – several Python functions related to interest conversion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: Appendix C – Python program for rateYan.py
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: Appendix D – Python program to estimate stock price based on an n-period model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For an n-period model, we have n+1 future cash flows: n dividends plus one
    selling price:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix D – Python program to estimate stock price based on an n-period
    model](img/B06175_1031.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The selling price at the end of the n-period is given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix D – Python program to estimate stock price based on an n-period
    model](img/B06175_1032.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'See the following code for estimating the present value for a growing perpetuity
    with the first cash flow *n+1* from today:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: Appendix E – Python program to estimate the duration for a bond
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: 'Appendix F – data case #2 – fund raised from a new bond issue'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Currently, you are working as a financial analyst at **International Business
    Machine Corporation** (IBM). The firm plans to issue 30-year corporate bonds with
    a total face value of $60 million in the United States. Each bond has a face value
    of $1,000\. The annual coupon rate is 3.5%. The firm plans to pay coupons once
    every year at the end of each year. Answer the following three questions:'
  prefs: []
  type: TYPE_NORMAL
- en: How much would your company receive today by issuing the 30-year bonds?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the YTM (Yield to Maturity) of the bond?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How much extra money could your company receive if your company manages to increase
    its credit rating by one notch?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The price of a bond is the summation of all its discounted future cash flows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix F – data case #2 – fund raised from a new bond issue](img/B06175_1033.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Find out the appropriate discount rate for each future cash flow:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix F – data case #2 – fund raised from a new bond issue](img/B06175_1034.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here,*Ri* is the discount rate for year *i* , *Rf,i* is the risk-free rate,
    from the Government Treasury term structure of interest (yield curve) for year
    *i*, and *Si* is the credit spread which depends on the credit rating of your
    firm. The spread is based on the Python dataset `calledspreadBasedOnCreditRating.pkl`.
    The Python dataset is available at the website of:[http://canisius.edu/~yany/python/spreadBasedOnCreditRating.pkl](http://canisius.edu/~yany/python/spreadBasedOnCreditRating.pkl):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: For year 5 and double `AA` rating, the spread is 55 basis-points. For each base
    point, it is 100th of 1%. In other words, we should divide 55 by 100 twice, that
    is, *55/10000=0.0055*.
  prefs: []
  type: TYPE_NORMAL
- en: 'The procedure ofa linear interpolation is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: First, let me use a simple example. Assume that the YTM for 5years is 5%, the
    YTM for a 10-year bond is 10%. What are the YTMs for 6, 7, 8, and 9-year bonds?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A quick answer is 6% for a 6-year bond, 7% for a 7-year bond, 8% for an 8-year
    bond, and 9% for a 9-year bond. The basic idea is an equal incremental value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Assume that YTM for a 5-year bond is *R5*, the YTM for a 10-year bond is *R10*.
    There are five intervals between year 5 and year 10\. Thus, the incremental value
    between each year is ![Appendix F – data case #2 – fund raised from a new bond
    issue](img/B06175_05_65.jpg):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For a 6-year bond, its value will be ![Appendix F – data case #2 – fund raised
    from a new bond issue](img/B06175_05_66.jpg)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For a 7-year bond, its value will be ![Appendix F – data case #2 – fund raised
    from a new bond issue](img/B06175_05_67.jpg)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For an 8-year bond, its value will be ![Appendix F – data case #2 – fund raised
    from a new bond issue](img/B06175_05_68.jpg)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For a 9-year bond, its value will be ![Appendix F – data case #2 – fund raised
    from a new bond issue](img/B06175_05_69.jpg)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is a more detailed explanation. If the two known points are given by the
    coordinates ![Appendix F – data case #2 – fund raised from a new bond issue](img/B06175_05_70.jpg)and
    ![Appendix F – data case #2 – fund raised from a new bond issue](img/B06175_05_71.jpg),
    the linear interpolation is the straight line between these points. For a value
    *x* in the interval ![Appendix F – data case #2 – fund raised from a new bond
    issue](img/B06175_05_72.jpg), the value *y* along the straight line is given in
    the equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix F – data case #2 – fund raised from a new bond issue](img/B06175_1035.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This can be derived geometrically from the figure on the right. It is a special
    case of polynomial interpolation with *n=1*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Solving this equation for y, which is the unknown value at x, gives:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix F – data case #2 – fund raised from a new bond issue](img/B06175_1036.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This is the formula for linear interpolation in the interval of *(x0, x1)*.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we cover various concepts related to interest rates, such as
    **Annual Percentage Rate** (**APR**), **Effective Annual Rate** (**EAR**), compounding
    frequency, how to convert one interest rate to another one with different compounding
    frequencies, and the term structure of interest rates. Then we discussed how to
    estimate the selling price of a regular bond and how to estimate the **Yield to
    Maturity** (**YTM**) and duration. To get a stock price, the so-called discount
    dividend model could be applied.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will discuss CAPM which is probably the most widely
    used model in assets pricing. After discussing its basic forms, we show how to
    download historical price data for a listed company and market index data. We
    illustrate how to estimate returns and run a linear regression to calculate the
    market risk for the stock.
  prefs: []
  type: TYPE_NORMAL
