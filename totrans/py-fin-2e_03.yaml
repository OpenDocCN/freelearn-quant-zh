- en: Chapter 3. Time Value of Money
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 章 时间价值
- en: In terms of finance per se, this chapter does not depend on the first two chapters.
    Since, in this book, Python is used as a computational tool to solve various finance
    problems, the minimum requirement is that readers should have installed Python
    plus NumPy and SciPy. In a sense, if a reader has installed Python via Anaconda,
    he/she will be fine without reading the first two chapters. Alternatively, readers
    could read Appendix A on how to install Python.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 就金融本身而言，本章并不依赖于前两章。由于本书中使用 Python 作为计算工具来解决各种金融问题，因此最低要求是读者应安装 Python 以及 NumPy
    和 SciPy。如果读者通过 Anaconda 安装了 Python，实际上可以不读前两章。另外，读者可以阅读附录 A 了解如何安装 Python。
- en: 'In this chapter, various concepts and formulae associated with finance will
    be introduced and discussed in detail. Since those concepts and formulae are so
    basic, readers who have taken one finance course, or professionals with a few
    years'' working experience in the financial industry, could go through this chapter
    quickly. Again, one feature of this book, quite different from a typical finance
    textbook, is that Python is used as the computational tool. In particular, the
    following topics will be covered:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍并详细讨论与金融相关的各种概念和公式。由于这些概念和公式非常基础，曾学习过一门金融课程的读者，或在金融行业工作了几年的专业人士，可以快速浏览本章内容。再次强调，本书的一个特点与典型金融教材有所不同，即使用
    Python 作为计算工具。特别是，以下主题将会涉及：
- en: Present value of one future cash flow and the present value of perpetuity
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单一未来现金流的现值与永续年金的现值
- en: Present value of growing perpetuity
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增长永续年金的现值
- en: Present and future value of annuity
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 年金的现值与未来值
- en: Perpetuity versus perpetuity due, annuity versus annuity due
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 永续年金与永续年金到期，年金与年金到期的区别
- en: Relevant functions contained in SciPy and the `numpy.lib.financial` submodule
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SciPy 中包含的相关函数以及 `numpy.lib.financial` 子模块
- en: A free financial calculator, written in Python, called `fincal`
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用 Python 编写的免费财务计算器，名为 `fincal`
- en: Definition of NPV and NPV rule
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NPV 和 NPV 法则的定义
- en: Definition of IRR and IRR rule
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IRR 和 IRR 法则的定义
- en: Python graphical presentation of time value of money, and NPV profile
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间价值与 NPV 图形展示
- en: Definition of payback period and payback period rule
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回收期和回收期法则的定义
- en: How to write your own financial calculator using Python
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 Python 编写自己的财务计算器
- en: Introduction to time value of money
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间价值引论
- en: 'Let''s use a very simple example to illustrate. Assume that $100 is deposited
    in a bank today with an annual interest rate of 10%. What is the value of the
    deposit one year later? Here is the timeline with the dates and cash flows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个非常简单的例子来说明。假设今天将 $100 存入银行，年利率为 10%。一年后存款的价值是多少？以下是包含日期和现金流的时间线：
- en: '![Introduction to time value of money](img/B06175_03_13.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![时间价值引论](img/B06175_03_13.jpg)'
- en: 'Obviously, our annual interest payment will be $10, that is, *100*0.1=10*.
    Thus, the total value will be *110*, that is, *100 + 10*. The original $100 is
    principal. Alternatively, we have the following result:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们的年利息支付将是 $10，即 *100*0.1=10*。因此，总价值将是 *110*，即 *100 + 10*。原始的 $100 是本金。或者，我们有以下结果：
- en: '![Introduction to time value of money](img/B06175_03_14.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![时间价值引论](img/B06175_03_14.jpg)'
- en: Assume that $100 will be kept in the bank for two years with the same 10% annual
    interest rate for two years. What will be the future value at the end of year
    two?
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 假设 $100 将以相同的 10% 年利率在银行存两年。两年末的未来价值是多少？
- en: '![Introduction to time value of money](img/B06175_03_15.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![时间价值引论](img/B06175_03_15.jpg)'
- en: 'Since at the end of the first year, we have $110 and by applying the same logic,
    the future value at the end of year two should be:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在第一年末，我们有 $110，并且应用相同的逻辑，第二年末的未来价值应该是：
- en: '![Introduction to time value of money](img/B06175_03_16.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![时间价值引论](img/B06175_03_16.jpg)'
- en: 'Since *110 = 100*(1+0.1)*, then we have the following expression:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 *110 = 100*(1+0.1)*，所以我们有以下表达式：
- en: '![Introduction to time value of money](img/B06175_03_17.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![时间价值引论](img/B06175_03_17.jpg)'
- en: 'If $100 is deposited for five years with an annual interest rate of 10%, what
    is the future value at the end of year five? Based on the preceding logic, we
    could have the following formula:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 $100 存入银行五年，年利率为 10%，那么五年末的未来价值是多少？根据前述逻辑，我们可以得到以下公式：
- en: '![Introduction to time value of money](img/B06175_03_18.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![时间价值引论](img/B06175_03_18.jpg)'
- en: 'Generalization leads to our first formula to estimate the future value for
    one given present value:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一般化得出我们用来估算给定现值的未来值的第一个公式：
- en: '![Introduction to time value of money](img/B06175_03_19.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值简介](img/B06175_03_19.jpg)'
- en: 'Here, *FV* is the future value, *PV* is the present value, *R* is the period
    rate and *n* is the number of periods. In the preceding example, *R* is the annual
    interest rate and *n* is the number of years. The frequencies of *R* and *n* should
    be the same. This means that if *R* is the annual (monthly/quarterly/daily) rate
    then *n* must be number of years (months/quarters/days). The corresponding function,
    called `fv()` in the SciPy module, could be used to estimate the future value;
    see the following code. To estimate the future value at the end of year two with
    a 10% annual interest rate, we have the following code:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*FV*是未来值，*PV*是现值，*R*是期利率，*n*是期数。在前面的例子中，*R*是年利率，*n*是年数。*R*和*n*的频率应当一致。这意味着，如果*R*是年利率（月利率/季利率/日利率），那么*n*必须是年数（月数/季数/天数）。对应的函数是SciPy模块中的`fv()`，可用来估算未来值；请参阅以下代码。若要估算在年末以10%年利率计算的未来值，代码如下：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For the function, the input format is `sp.fv(rate,nper,pmt,pv=0,when=''end'')`.
    At the moment, just ignore the last variable called when. For Equation (1), there
    is no pmt, thus the third input should be zero. Please pay attention to the negative
    sign of the previous result. The reason is that `scipy.fv()` function follows
    the Excel sign convention: a positive future value leads to a negative present
    value, and vice versa. To find more information about this function, we type `help(sp.fv),`
    see the following first several lines:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于该函数，输入格式为`sp.fv(rate,nper,pmt,pv=0,when='end')`。目前，暂时忽略最后一个名为when的变量。对于*方程式
    (1)*，没有pmt，因此第三个输入应为零。请注意先前结果中的负号。原因在于`scipy.fv()`函数遵循Excel符号约定：正的未来值对应负的现值，反之亦然。要了解更多关于此函数的信息，我们可以输入`help(sp.fv)`，查看以下几行内容：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Help on function fv in module `numpy.lib.financial`:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`numpy.lib.financial`模块中`fv`函数的帮助文档：'
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Compute the future value.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 计算未来值。
- en: 'If we accidentally enter `sp.fv(0.1,2,100,0)`, the result and corresponding
    cash flows are shown here:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们不小心输入`sp.fv(0.1,2,100,0)`，结果和相应的现金流如下所示：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Later in this chapter, it will be shown that `sp.fv(0.1,2,100,0)` corresponds
    to the present value of two equal $100 occur at the end of the first and second
    years. From Equation (1), we could easily derive our second formula:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 本章稍后将展示，`sp.fv(0.1,2,100,0)`对应的是两个相等的100美元在第一年和第二年年末发生的现值。从*方程式 (1)*，我们可以轻松推导出第二个公式：
- en: '![Introduction to time value of money](img/B06175_03_20.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值简介](img/B06175_03_20.jpg)'
- en: 'The notations of *PV*, *FV*, *R*, and *n* remain the same as those in *Equation
    (1)*. If we plan to have $234 at the end of year five and the interest rate is
    1.45% per year, how much we have to deposit today? The result is shown here on
    the left after applying Equation (2) manually:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*PV*、*FV*、*R*和*n*的符号与*方程式 (1)*中的符号保持一致。如果我们计划在第五年末得到234美元，并且年利率为1.45%，那么我们今天需要存入多少？应用*方程式
    (2)* 手动计算后的结果如下图所示：'
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Alternatively, the `sp.pv()` function could be used, see the following right
    result. To find out more information about the `sp.pv()` function, we use `help(sp.pv)`,
    see the part of the following output:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，也可以使用`sp.pv()`函数，参见右侧的结果。要了解更多关于`sp.pv()`函数的信息，我们可以使用`help(sp.pv)`，查看以下输出的一部分：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Introduction to time value of money](img/B06175_03_01.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值简介](img/B06175_03_01.jpg)'
- en: 'Note that for the fourth input variable of a set of inputs, the `scipy.fv()`
    and `scipy.pv()` functions behave differently: `spicy.fv(0.1,1,100)` would give
    us an error message while `scipy.pv(0.1,1,100)` would work perfectly. The reason
    is that the default value of the fourth input variable in `scipy.pv()` function
    is zero while there is no default value for the fourth input variable in the `scipy.fv()`
    function. This is one type of inconsistency in terms of Python programming.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，对于输入变量集的第四个输入变量，`scipy.fv()`和`scipy.pv()`函数的行为不同：`scipy.fv(0.1,1,100)`会给出错误消息，而`scipy.pv(0.1,1,100)`则可以正常工作。原因是`scipy.pv()`函数的第四个输入变量默认值为零，而`scipy.fv()`函数没有第四个输入变量的默认值。这是Python编程中的一种不一致之处。
- en: 'In finance, it is well known that $100 received today is more valuable than
    $100 received one year later, which in turn is more valuable than $100 received
    in year two. If different sizes are used to represent relative values, we will
    get the following figure. The first blue circle is the present value of $100 today,
    while the second one is the present value of $100 at the end of the first year
    and so on. The Python program to generate such an image is given in *Appendix
    B*:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融学中，广为人知的是，今天收到的100美元比一年后收到的100美元更有价值，而一年后收到的100美元又比两年后收到的100美元更有价值。如果使用不同的大小来表示相对价值，我们将得到以下图形。第一个蓝色圆圈是今天100美元的现值，第二个是第一年末100美元的现值，依此类推。生成该图像的Python程序见*附录B*：
- en: '![Introduction to time value of money](img/B06175_03_02.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_02.jpg)'
- en: 'The next concept is perpetuity, which is defined as *the same constant cash
    flows, at the same intervals forever*. Here is the timeline and those constant
    cash flows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个概念是永续年金，它被定义为*相同的恒定现金流，按相同的间隔永远支付*。这里是时间线以及这些恒定现金流：
- en: '![Introduction to time value of money](img/B06175_03_21.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_21.jpg)'
- en: Note that in the previous case, the first cash flow happens at the end of the
    first period. We could have other perpetuity with its first cash flow at the end
    of other period. Let's study this case first, and later in the chapter, we will
    have a simple extension. What is the present value of such perpetuity when the
    period discount rate is *R*?
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在前面的例子中，第一个现金流发生在第一个周期结束时。我们可以有其他永续年金，其第一个现金流发生在其他周期的结束。我们先研究这个例子，稍后在本章中，我们会进行一个简单的扩展。当周期贴现率为*R*时，如何计算这种永续年金的现值？
- en: 'First, Equation (2) could be applied to each of those future cash flows. Thus,
    the summation of all those present values will be the solution:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，方程式（2）可以应用于每一个未来现金流。因此，所有这些现值的总和将是解：
- en: '![Introduction to time value of money](img/B06175_03_22.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_22.jpg)'
- en: 'To make our derivation simpler, *PV(Perpetuity)* is replaced by *PV*. Let''s
    call it Equation (I):'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化我们的推导，*永续年金现值（PV）*被替换为*PV*。我们称之为方程式（I）：
- en: '![Introduction to time value of money](img/B06175_03_23.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_23.jpg)'
- en: 'To derive the formula, both sides of *Equation (I)* are multiplied by *1/(1+R)*;
    see the following equation. Let''s call it *Equation (II)*:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了推导公式，*方程式（I）*的两边都乘以*1/(1+R)*；见下式。我们称之为*方程式（II）*：
- en: '![Introduction to time value of money](img/B06175_03_24.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_24.jpg)'
- en: '*Equation (I)* minus Equation *(II)* leads to the next equation:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*方程式（I）*减去*方程式（II）*得到下式：'
- en: '![Introduction to time value of money](img/B06175_03_25.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_25.jpg)'
- en: 'Both sides time *(1+R)*, we have:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 将两边乘以*(1+R)*，我们得到：
- en: '![Introduction to time value of money](img/B06175_03_26.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_26.jpg)'
- en: 'Reorganizing the preceding result, finally we have the formula to estimate
    the present value of perpetuity:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 重组前面的结果，最终我们得到了估算永续年金现值的公式：
- en: '![Introduction to time value of money](img/B06175_03_27.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_27.jpg)'
- en: 'Here is one example. John plans to donate $3,000 per year to his alma mater
    to have a welcoming party for the forthcoming MBA students at the end of the year
    forever. If the annual discount rate is 2.5% and the first party will occur at
    the end of the first year, how much he should donate today? By applying the preceding
    formula, the answer is $120,000:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个例子。约翰计划每年捐赠3,000美元给他的母校，用于为即将到来的MBA学生举办迎新派对，且每年都会举行。如果年贴现率为2.5%，且第一次派对将在第一年末举行，那么他今天应该捐赠多少？通过应用前面的公式，答案是120,000美元：
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Assume that the first cash flow is *C* and the following cash flows enjoy a
    constant growth rate of g; see the following timeline and cash flows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 假设第一个现金流为*C*，且随后的现金流享有恒定的增长率g；见下方时间线和现金流：
- en: '![Introduction to time value of money](img/B06175_03_28.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_28.jpg)'
- en: 'If the discount rate is *R*, then the formula to estimate the present value
    of a growing perpetuity has the following form:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果贴现率为*R*，那么估算成长型永续年金现值的公式如下：
- en: '![Introduction to time value of money](img/B06175_03_29.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_29.jpg)'
- en: 'Again, the frequencies of *C*, *R*, and *g* should be consistent, that is,
    have the same frequencies. One of the end-of-chapter problems asks readers to
    prove *Equation (4)*. For the previous example of John''s MBA welcoming party
    donation, the cost of $3,000 needed every year is based on zero inflation. Assume
    that the annual inflation is 1%, how much does he have to denote today? The amount
    needed each year is shown here:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，*C*、*R* 和 *g* 的频率应该保持一致，也就是说，它们的频率应该相同。章节末尾有一个问题要求读者证明*方程 (4)*。以约翰的 MBA 欢迎派对捐款为例，每年需要
    $3,000 的费用是基于零通货膨胀的。假设年通货膨胀率为 1%，他今天需要捐赠多少钱？每年所需的金额如下所示：
- en: '![Introduction to time value of money](img/B06175_03_30.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_30.jpg)'
- en: 'The following result indicates that he needs $200,000 today:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 以下结果表明，他今天需要 $200,000：
- en: '[PRE7]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'For perpetuity, if the first cash flow happens at the end of *k*th period,
    we have the following formula:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于永续年金，如果第一笔现金流发生在第 *k* 期末，我们有以下公式：
- en: '![Introduction to time value of money](img/B06175_03_31.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_31.jpg)'
- en: 'Obviously, when the first cash flow happens at the end of the first period,
    *Equation (5)* collapses to *Equation (3)*. An annuity is defined as *the same
    cash flows at the same intervals for n periods*. If the first cash flow occurs
    at the end of the first period, the present value of an annuity is estimated by
    the following formula:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，当第一笔现金流发生在第一个时期末时，*方程 (5)* 会简化为*方程 (3)*。年金被定义为*在 n 期内相同时间间隔内的相同现金流*。如果第一笔现金流发生在第一个时期末，则年金的现值通过以下公式估算：
- en: '![Introduction to time value of money](img/B06175_03_32.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_32.jpg)'
- en: Here, *C* is a recursive cash flow that happens at the end of each period, *R*
    is the period discount rate, and *n* is the number of periods. *Equation (5)*
    is quite complex than other equations. However, with a little bit imagination,
    *Equation (6)* could be derived by combining Equations (2) and (3); see *Appendix
    C* for more detail.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，*C* 是在每个时期末发生的递归现金流，*R* 是期间折现率，*n* 是期数。*方程 (5)* 比其他方程要复杂。然而，稍加想象，*方程 (6)*
    可以通过结合*方程 (2)* 和 (3) 推导出来；有关更多细节，请参见*附录 C*。
- en: 'To estimate the future value of annuity, we have the following formula:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要估算年金的未来价值，我们有以下公式：
- en: '![Introduction to time value of money](img/B06175_03_33.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_33.jpg)'
- en: Conceptually, we could view *Equation (7)* as the combination of *Equations
    (6)* and (1). In the previous formulae related to perpetuity or annuity, all cash
    flows are assumed to happen at the end of periods. For annuity or perpetuity,
    when the cash flows happen at the beginning of each time period, they are called
    annuity due or perpetuity due. There are three ways to calculate their present
    values.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 从概念上讲，我们可以将*方程 (7)* 看作是*方程 (6)* 和 (1) 的组合。在之前与永续年金或年金相关的公式中，假设所有现金流都发生在期末。对于年金或永续年金，当现金流发生在每个时间段的开始时，它们被称为期初年金或期初永续年金。计算其现值有三种方法。
- en: For the first method, the last input value in `scipy.pv()` or `numpy.lib.financial.pv()`
    will take a value of one.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第一种方法，`scipy.pv()` 或 `numpy.lib.financial.pv()` 中的最后一个输入值将取值为 1。
- en: 'Assume that the discount rate is 1% per year. The annual cash flow is $20 for
    the next 10 years. The first cash flow will be paid today. What is the present
    value of those cash flows? The result is shown here:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 假设折现率为每年 1%。接下来的 10 年每年现金流为 $20。第一笔现金流今天支付。这些现金流的现值是多少？结果如下所示：
- en: '[PRE8]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note that the input format for the `numpy.lib.financial.pv()` function is `rate`,
    `nper`, `pmt`, `fv`, and `when`. The default value of the last variable called
    `when` is zero, that is, at the end of the period. When the variable called `when`
    takes a value of one, it means it is annuity due.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`numpy.lib.financial.pv()` 函数的输入格式为 `rate`、`nper`、`pmt`、`fv` 和 `when`。最后一个变量
    `when` 的默认值为零，即发生在期末。当 `when` 取值为 1 时，表示为期初年金。
- en: 'For the second method , the following formulae could be applied:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第二种方法，以下公式可以应用：
- en: '![Introduction to time value of money](img/B06175_03_34.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_34.jpg)'
- en: 'Here is the methodology: treat annuity due as normal annuity, then multiply
    the result by *(1+R)*. The application is shown here:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是方法：将期初年金视为普通年金，然后将结果乘以 *(1+R)*。应用如下所示：
- en: '[PRE9]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'For the third method , we use the function called `fincal.pvAnnuityDue()` contained
    in the `fincal` package, a financial calculator written in Python; see the following
    result:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第三种方法，我们使用名为 `fincal.pvAnnuityDue()` 的函数，该函数包含在用 Python 编写的财务计算器 `fincal`
    包中；请参见以下结果：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'For how to download this `fincal` module, see *Appendix D – how to download
    a free financial calculator written in Python*. To get more information about
    this function, the `help()` function is applied; see the following code:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何下载 `fincal` 模块，请参见 *附录 D - 如何下载一个用 Python 编写的免费财务计算器*。要获取有关此函数的更多信息，可以使用
    `help()` 函数；请参见以下代码：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Introduction to time value of money](img/B06175_03_35.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_35.jpg)'
- en: '[PRE12]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'For more detail about such a financial calculator called `fincal`, see the
    next section. If cash flows will increase at a constant rate of *g*, we have the
    following formulae for a growing annuity:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 有关名为 `fincal` 的财务计算器的更多详细信息，请参见下一节。如果现金流将以 *g* 的固定速度增长，我们有以下增长年金的公式：
- en: '![Introduction to time value of money](img/B06175_03_36.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_36.jpg)'
- en: 'There are no corresponding functions from SciPy nor from `numpy.lib.financial`.
    Fortunately, we have the functions called `pvGrowingAnnuity()` and `fvGrowingAnnuity()`
    functions from the financial calculator called `fincal`; for more detail, see
    the following code:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数在 SciPy 或 `numpy.lib.financial` 中没有对应的函数。幸运的是，我们有一个名为 `fincal` 的财务计算器，它包含了
    `pvGrowingAnnuity()` 和 `fvGrowingAnnuity()` 函数；有关更多详细信息，请参见以下代码：
- en: '[PRE13]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To find more information about this function, issue `help(fincal.pvGrowingAnnuity)`;
    see the following code:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取有关此函数的更多信息，请输入 `help(fincal.pvGrowingAnnuity)`；请参见以下代码：
- en: '[PRE14]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Introduction to time value of money](img/B06175_03_37.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![货币时间价值介绍](img/B06175_03_37.jpg)'
- en: '[PRE15]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Writing a financial calculator in Python
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用 Python 编写财务计算器
- en: When discussing the various concepts of the time value of money, learners need
    a financial calculator or Excel to solve various related problems.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论货币时间价值的各种概念时，学习者需要一个财务计算器或 Excel 来解决各种相关问题。
- en: 'From the preceding illustrations, it is clear that several functions, such
    as `scipy.pv()`, could be used to estimate the present value of one future cash
    flow or present value of annuity. Actually, the functions related to finance contained
    in the SciPy module came from the `numpy.lib.financial` submodule:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的示例可以看出，像 `scipy.pv()` 这样的多个函数可以用来估算一个未来现金流的现值或年金现值。实际上，SciPy 模块中与财务相关的函数来自
    `numpy.lib.financial` 子模块：
- en: '[PRE16]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: First, we import two modules related to various finance functions.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们导入与各种财务函数相关的两个模块。
- en: '[PRE17]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The following table summarizes those functions:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 下表总结了这些函数：
- en: '| Function | Input format |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 输入格式 |'
- en: '| --- | --- |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `sp.fv()` | `fin.fv()` | `fv(rate, nper, pmt, pv, when=''end'')` |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| `sp.fv()` | `fin.fv()` | `fv(rate, nper, pmt, pv, when=''end'')` |'
- en: '| `sp.pv()` | `fin.pv()` | `pv(rate, nper, pmt, fv=0.0, when=''end'')` |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| `sp.pv()` | `fin.pv()` | `pv(rate, nper, pmt, fv=0.0, when=''end'')` |'
- en: '| `sp.pmt()` | `fin.pmt()` | `pmt(rate, nper, pv, fv=0, when=''end'')` |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| `sp.pmt()` | `fin.pmt()` | `pmt(rate, nper, pv, fv=0, when=''end'')` |'
- en: '| `sp.npv()` | `fin.npv()` | `npv(rate, values)` |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| `sp.npv()` | `fin.npv()` | `npv(rate, values)` |'
- en: '| `sp.rate()` | `fin.rate()` | `rate(nper, pmt, pv, fv, when=''end'', guess=0.1,
    tol=1e-06, maxiter=100)` |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| `sp.rate()` | `fin.rate()` | `rate(nper, pmt, pv, fv, when=''end'', guess=0.1,
    tol=1e-06, maxiter=100)` |'
- en: '| `sp.nper()` | `fin.nper()` | `nper(rate, pmt, pv, fv=0, when=''end'')` |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| `sp.nper()` | `fin.nper()` | `nper(rate, pmt, pv, fv=0, when=''end'')` |'
- en: '| `sp.irr()` | `fin.irr()` | `irr(values)` |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| `sp.irr()` | `fin.irr()` | `irr(values)` |'
- en: '| `sp.mirr()` | `fin.mirr()` | `mirr(values, finance_rate, reinvest_rate)`
    |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| `sp.mirr()` | `fin.mirr()` | `mirr(values, finance_rate, reinvest_rate)`
    |'
- en: '| `sp.ipmt()` | `fin.ipmt()` | `ipmt(rate, per, nper, pv, fv=0.0, when=''end'')`
    |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| `sp.ipmt()` | `fin.ipmt()` | `ipmt(rate, per, nper, pv, fv=0.0, when=''end'')`
    |'
- en: '| `sp.ppmt()` | `fin.ppmt()` | `ppmt(rate, per, nper, pv, fv=0.0, when=''end'')`
    |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| `sp.ppmt()` | `fin.ppmt()` | `ppmt(rate, per, nper, pv, fv=0.0, when=''end'')`
    |'
- en: Table 3.1 A list of functions contained in Scipy and numpy.lib.financial
  id: totrans-122
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表 3.1 Scipy 和 numpy.lib.financial 中包含的函数列表
- en: 'The other financial calculator was written by the author of this book. *Appendix
    B* shows how to download it. Here is a list of functions:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个财务计算器是由本书作者编写的。*附录 B* 显示了如何下载它。以下是函数列表：
- en: '[PRE18]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'There are several advantages of using this financial calculator over the functions
    contained in both the SciPy module and `numpy.lib.financial` submodule. First,
    for three present values, `pv(one cash flow)`, `pv(annuity)`, and `pv(annuity
    due)`, there exist three corresponding functions called `pv_f()`, `pvAnnuity()`
    and `pvAnnuityDue()`. Thus, a new learner who has little knowledge about finance
    would have a much smaller chance to get confused. Second, for each function such
    as present value of one future cash flow, the output is exactly the same as the
    formula shown on a typical textbook; see the following formula:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个财务计算器有几个优点，相比于 SciPy 模块和`numpy.lib.financial`子模块中包含的函数。首先，对于三种现值，`pv(单笔现金流)`、`pv(年金)`和`pv(年金到期)`，分别有三个对应的函数，分别是`pv_f()`、`pvAnnuity()`和`pvAnnuityDue()`。因此，对于一个对金融知识了解较少的新学习者来说，他/她更不容易产生困惑。其次，对于每个函数，如单笔未来现金流的现值，输出与典型教材中显示的公式完全一致；请参见以下公式：
- en: '![Writing a financial calculator in Python](img/B06175_03_38.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![用 Python 编写财务计算器](img/B06175_03_38.jpg)'
- en: 'In other words, there is no Excel sign convention. For *fv=100*, *r=0.1*, and
    *n=1*, from the preceding formula, we are supposed to get a value of 90.91\. With
    the following code, we show the results without and with the sign convention:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，没有 Excel 的符号约定。对于*fv=100*、*r=0.1*和*n=1*，根据之前的公式，我们应该得到一个 90.91 的值。通过以下代码，我们展示了没有符号约定和有符号约定的结果：
- en: '[PRE19]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Third, for each function contained in `fincal`, we could find out which formula
    is used plus a few examples:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 第三，对于`fincal`中的每个函数，我们可以找出使用的公式，并附上一些示例：
- en: '[PRE20]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![Writing a financial calculator in Python](img/B06175_03_39.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![用 Python 编写财务计算器](img/B06175_03_39.jpg)'
- en: '[PRE21]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Last but not least, a new learner could write his/her own financial calculator!
    For more detail, see the *Writing your own financial calculator written in Python*
    section and *Appendix H*.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，新的学习者可以自己编写财务计算器！更多细节，请参见《*用 Python 编写你自己的财务计算器*》章节和*附录 H*。
- en: 'From the preceding discussion, it is known that for the present value of annuity,
    the following formula could be used:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的讨论中，我们知道，对于年金的现值，可以使用以下公式：
- en: '![Writing a financial calculator in Python](img/B06175_03_40.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![用 Python 编写财务计算器](img/B06175_03_40.jpg)'
- en: 'In the preceding formula, we have four variables of *pv*, *c*, *R*, and *n*.
    To estimate a present value, we are given *c*, *R*, and *n*. Actually, for any
    set of three values, we could estimate the number 4\. Let''s use the same notations
    in SciPy and NumPy:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述公式中，我们有四个变量：*pv*、*c*、*R*和*n*。为了估算现值，我们给定了*c*、*R*和*n*。实际上，对于任何一组三个值，我们都可以估算出第四个值。让我们使用
    SciPy 和 NumPy 中相同的符号：
- en: '![Writing a financial calculator in Python](img/B06175_03_41.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![用 Python 编写财务计算器](img/B06175_03_41.jpg)'
- en: 'The four corresponding functions are: `sp.pv()`, `sp.pmt()`, `sp.rate()`, and
    `sp.nper()`. Here is an example. John is planning to buy a used car with a price
    tag of $5,000\. Assume that he would pay $1,000 as the download payment and borrow
    the rest. The annual interest rate for a car load is 1.9% compounded monthly.
    What is his monthly payment if he plans to retire his load in three years? We
    could calculate the monthly payment manually; see the following code:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 四个对应的函数是：`sp.pv()`、`sp.pmt()`、`sp.rate()`和`sp.nper()`。这是一个例子。约翰计划购买一辆二手车，价格为
    $5,000。假设他将支付 $1,000 作为首付，其余部分借款。车贷的年利率为 1.9%，按月复利计算。如果他打算在三年内偿还贷款，那么他的月供是多少？我们可以手动计算月供；请参见以下代码：
- en: '[PRE22]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Since the annual interest rate is compounded monthly, the effective monthly
    rate is 0.019/12\. In [Chapter 5](ch05.html "Chapter 5. Bond and Stock Valuation"),
    *Bond and Stock Valuation*, how to convert different effective rates will be discussed
    in more detail. Based on the preceding result, John''s monthly payment is $114.40\.
    Alternatively, we could use the `scipy.pmt()` function; see the following code:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 由于年利率是按月复利计算的，实际月利率为 0.019/12。在[第5章](ch05.html "第5章。债券与股票估值")《债券与股票估值》中，将更详细地讨论如何转换不同的有效利率。根据之前的结果，约翰的月供为
    $114.40。或者，我们可以使用`scipy.pmt()`函数；请参见以下代码：
- en: '[PRE23]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Similarly, for the rate in the preceding function, the `scipy.rate()` and `numpy.lib.rate()`
    functions could be applied. Here is one example. A company plans to lease a limousine
    for its CEO. If the monthly payment is $2,000 for the next three years and the
    present value of the car is $50,000, what is the implied annual rate?
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，对于前面公式中的利率，可以使用`scipy.rate()`和`numpy.lib.rate()`函数。这里是一个例子。某公司计划为其CEO租赁一辆豪华轿车。如果接下来的三年每月付款$2,000，且汽车的现值为$50,000，隐含的年利率是多少？
- en: '[PRE24]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The monthly effective rate is 2.12% while the annual rate is 25.45%.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 月有效利率为2.12%，年利率为25.45%。
- en: With the same logic, for the `nper` in the preceding function, the `scipy.nper()`
    and `numpy.lib.financial.nper()` functions could be applied.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 按照相同的逻辑，对于前面公式中的`nper`，可以使用`scipy.nper()`和`numpy.lib.financial.nper()`函数。
- en: Here is one example. Peter borrows $5,000 to pay the cost to get a Python certificate.
    If the monthly rate is 0.25% and he plans to pay back $200 per month, how many
    months will he need to repay his loan?
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个例子。Peter借了$5,000来支付获得Python证书的费用。如果月利率为0.25%，他计划每月偿还$200，他需要多少个月才能偿还贷款？
- en: '[PRE25]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Based on the preceding result, he needs about 30 months to repay his whole
    loan. In the preceding two examples, the future value is zero. Following the same
    logic, for a future value annuity, we have the following function:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 基于前面的结果，他大约需要30个月才能偿还全部贷款。在前面的两个例子中，未来价值为零。按照相同的逻辑，对于未来价值年金，我们有以下公式：
- en: '![Writing a financial calculator in Python](img/B06175_03_42.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![在Python中编写财务计算器](img/B06175_03_42.jpg)'
- en: 'If using the same notations as SciPy and `numpy.lib.financial`, we have the
    following formula:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用与SciPy和`numpy.lib.financial`相同的符号，我们得到以下公式：
- en: '![Writing a financial calculator in Python](img/B06175_03_43.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![在Python中编写财务计算器](img/B06175_03_43.jpg)'
- en: The `scipy.pmt()`, `scipy.rate()`, `scipy.nper()`, `numy.lib.financial.pmt()`,
    `numpy.lib.financial.rate()`, and `numpy.lib.financial.nper()` functions could
    be used to estimate those values. We will discuss those formulae further in the
    *The general formulae for many functions* section used in Scipy and `numpy.lib.financial`.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '`scipy.pmt()`、`scipy.rate()`、`scipy.nper()`、`numy.lib.financial.pmt()`、`numpy.lib.financial.rate()`和`numpy.lib.financial.nper()`函数可以用来估算这些值。我们将在*Scipy和`numpy.lib.financial`中的常用公式*部分进一步讨论这些公式。'
- en: Definition of NPV and NPV rule
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 净现值和NPV规则的定义
- en: 'The **Net Present Value** (**NPV**) is defined by the following formula:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '**净现值**（**NPV**）由以下公式定义：'
- en: '![Definition of NPV and NPV rule](img/B06175_03_44.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![净现值和NPV规则的定义](img/B06175_03_44.jpg)'
- en: 'Here is an example. The initial investment is $100\. The cash inflows in the
    next five years are $50, $60, $70, $100, and $20, starting from year one. If the
    discount rate is 11.2%, what is the project''s NPV value? Since only six cash
    flows are involved, we could do the calculation manually:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个例子。初始投资为$100。接下来五年的现金流入分别是$50、$60、$70、$100和$20，从第一年开始。如果折现率为11.2%，该项目的NPV值是多少？由于只有六个现金流，我们可以手动计算：
- en: '[PRE26]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Based on the preceding result, the NPV of this project is $121.56\. A normal
    project is defined as follows: *cash outflows first, then cash inflows*. Anything
    else is an abnormal project. For a normal project, its NPV is negatively correlated
    with the discount rate; see the following graph. The reason is that when the discount
    rate increases, the present value of the future cash flows (most of times benefits)
    will decrease more than the current or the earliest cash flows (most of times
    costs). The NPV profile describes the relationship between NPV and discount rate
    as shown in the following graph. See *Appendix E* for the Python program to generate
    the graph. The *y*-axis is NPV while the *x*-axis is the discount rate:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的结果，该项目的NPV为$121.56。正常项目定义如下：*首先是现金流出，其次是现金流入*。任何其他情况都是不正常项目。对于正常项目，其NPV与折现率呈负相关；见下图。原因是当折现率上升时，未来现金流（大多数情况下是收益）的现值会比当前或最早的现金流（大多数情况下是成本）减少得更多。NPV曲线描述了NPV与折现率之间的关系，见下图。有关生成图表的Python程序，请参阅*附录E*。*y*轴为NPV，*x*轴为折现率：
- en: '![Definition of NPV and NPV rule](img/B06175_03_03.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![净现值和NPV规则的定义](img/B06175_03_03.jpg)'
- en: 'To estimate the NPV of a project, we could call the `npv()` function contained
    either in SciPy or `numpy.lib.financial`; see the following code:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 为了估算一个项目的净现值（NPV），我们可以调用`npv()`函数，该函数包含在SciPy或`numpy.lib.financial`库中；请参阅以下代码：
- en: '[PRE27]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The `scipy.npv()` function estimates the present values for a given set of
    cash flows. The first input variable is the discount rate, while the second input
    is an array of cash flows. Note that the first cash flow in this cash flow array
    happens at time zero. This `scipy.npv()` function is different from the Excel''s
    NPV function, which is not a true NPV function. Actually, the Excel NPV is a PV
    function. It estimates the present value of future cash flows by assuming the
    first cash flow happens at the end of the first period. An example of using an
    Excel `npv()` function is as follows:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`scipy.npv()` 函数估算给定现金流集的现值。第一个输入变量是折现率，第二个输入是现金流数组。注意，这个现金流数组中的第一个现金流发生在时间零。这个
    `scipy.npv()` 函数不同于 Excel 的 NPV 函数，后者并不是一个真正的 NPV 函数。实际上，Excel 的 NPV 是一个 PV 函数。它通过假设第一个现金流发生在第一个期间结束时，来估算未来现金流的现值。使用
    Excel `npv()` 函数的示例如下：'
- en: '![Definition of NPV and NPV rule](img/B06175_03_04.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![NPV 和 NPV 规则的定义](img/B06175_03_04.jpg)'
- en: 'While using just one future cash flow, the meaning of the `scipy.npv()` function
    is clearer as shown in the following lines of code:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在仅使用一个未来现金流时，`scipy.npv()` 函数的意义通过以下代码行变得更加清晰：
- en: '[PRE28]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The related Excel function and its output is shown here:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 相关的 Excel 函数及其输出如图所示：
- en: '![Definition of NPV and NPV rule](img/B06175_03_05.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![NPV 和 NPV 规则的定义](img/B06175_03_05.jpg)'
- en: For just one future cash flow, the result based on Excel's `npv()` function
    is shown in the preceding right image. For the `numpy.lib.financial.npv()` function,
    the only cash flows of $100 would happen today, while for the Excel `npv()` function,
    the only cash flow of $100 would happen one period later. Thus, *100/(1+0.1)*
    leads to 90.91.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 对于只有一个未来现金流，基于 Excel 的 `npv()` 函数的结果如前图所示。对于 `numpy.lib.financial.npv()` 函数，唯一的现金流
    $100 会发生在今天，而对于 Excel 的 `npv()` 函数，唯一的现金流 $100 会发生在一个期间后。因此，*100/(1+0.1)* 得出 90.91。
- en: 'The NPV rule is given here:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: NPV 规则如下：
- en: '![Definition of NPV and NPV rule](img/B06175_03_45.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![NPV 和 NPV 规则的定义](img/B06175_03_45.jpg)'
- en: Definition of IRR and IRR rule
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IRR 和 IRR 规则的定义
- en: 'The **Internal Rate of Return** (**IRR**) is defined as the discount rate that
    makes NPV equal zero. Assume that we invest $100 today and the future cash flows
    will be $30, $40, $40, and $50 for the next four years. Assuming that all cash
    flows happen at the end of the year, what is the IRR for this investment? In the
    following program, the `scipy.irr()` function is applied:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**内部收益率**（**IRR**）被定义为使 NPV 等于零的折现率。假设我们今天投资 $100，未来四年的现金流分别为 $30、$40、$40 和
    $50。假设所有现金流都发生在年底，那么该投资的 IRR 是多少？在以下程序中，应用了 `scipy.irr()` 函数：'
- en: '[PRE29]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'We could verify whether such a rate does make NPV equal zero. Since the NPV
    is zero, 20.02% is indeed an IRR:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以验证这样的利率是否使 NPV 等于零。由于 NPV 为零，20.02% 确实是一个 IRR：
- en: '[PRE30]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'For a normal project, the IRR rule is given here:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个正常项目，IRR 规则如下：
- en: '![Definition of IRR and IRR rule](img/B06175_03_46.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![IRR 和 IRR 规则的定义](img/B06175_03_46.jpg)'
- en: 'Here, *Rc* is the cost of capital. This IRR rule holds only for a normal project.
    Let''s look at the following investment opportunity. The initial investment is
    $100 today and $50 next year. The cash inflows for the next five years will be
    $50, $70, $100, $90, and $20\. If the cost of capital is 10%, should we take the
    project? The time line and corresponding cash flows are shown here:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*Rc* 是资本成本。这个 IRR 规则仅适用于正常项目。我们来看下面的投资机会。今天的初始投资是 $100，明年的投资是 $50。未来五年的现金流入分别为
    $50、$70、$100、$90 和 $20。如果资本成本是 10%，我们应该接受这个项目吗？时间线及相应的现金流如下：
- en: '![Definition of IRR and IRR rule](img/B06175_03_47.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![IRR 和 IRR 规则的定义](img/B06175_03_47.jpg)'
- en: 'The Python codes are given here:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这里给出了 Python 代码：
- en: '[PRE31]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Since the IRR is 25.9%, which is higher than the cost of capital of 10%, we
    should accept the project based on the IRR rule. In the preceding example, it
    is a normal project. For abnormal projects or projects with multiple IRRs, we
    could not apply the IRR rule. When the cash flows change direction more than once,
    we might have multiple IRRs. Assume that our cash flows will be `504`, -`432`,-`432`,
    -`432`, and `843`, starting today:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 IRR 为 25.9%，高于 10% 的资本成本，我们应该根据 IRR 规则接受该项目。在前面的例子中，这是一个正常项目。对于不正常项目或具有多个
    IRR 的项目，我们不能应用 IRR 规则。当现金流方向发生超过一次变化时，我们可能会有多个 IRR。假设我们的现金流为 `504`，-`432`，-`432`，-`432`
    和 `843`，从今天开始：
- en: '[PRE32]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The related graph is shown here:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 相关图表如图所示：
- en: '![Definition of IRR and IRR rule](img/B06175_03_06.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![IRR 和 IRR 规则的定义](img/B06175_03_06.jpg)'
- en: 'Since the direction of our cash flows changes twice, the project might have
    two different IRRs. The preceding right image shows that this is the case. For
    the Python program to draw the preceding NPV profile, see *Appendix F*. Using
    the `spicy.npv()` function, we only got one IRR. From the `fincal.IRRs_f()` function,
    we could get both IRRs; see the following code:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的现金流方向发生了两次变化，该项目可能会有两个不同的IRR。前述右侧的图像显示了这是这种情况。对于Python程序绘制前述的NPV曲线，参见*附录F*。使用`spicy.npv()`函数，我们只得到了一个IRR。从`fincal.IRRs_f()`函数中，我们可以得到两个IRR；请参见以下代码：
- en: '[PRE33]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Definition of payback period and payback period rule
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回收期和回收期规则的定义
- en: 'A payback period is defined as the number of years needed to recover the initial
    investment. Assume that the initial investment is $100\. If every year the firm
    could recover $30, then the payback period is 3.3 years:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 回收期定义为收回初始投资所需的年数。假设初始投资为$100。如果每年公司能够回收$30，那么回收期为3.3年：
- en: '[PRE34]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The decision rule for the payback rule is given here:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 回收期规则的决策规则如下所示：
- en: '![Definition of payback period and payback period rule](img/B06175_03_48.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![回收期和回收期规则的定义](img/B06175_03_48.jpg)'
- en: Here, *T* is the payback period for a project while *Tc* is the maximum number
    of years required to recover the initial investment. Thus, if *Tc* is four, the
    preceding project with a payback period of 3.3 should be accepted.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，*T*是项目的回收期，而*Tc*是收回初始投资所需的最大年数。因此，如果*Tc*是四年，那么回收期为3.3年的前述项目应该被接受。
- en: The major advantage of the payback period rule is its simplicity. However, there
    are many shortcomings for such a rule. First, it does not consider the time value
    of money. In the previous case, $30 received at the end of the first year is the
    same as $30 received today. Second, any cash flows after the payback period is
    ignored. This bias would be against the project with a long period of future cash
    flows. Last but not least, there is no theoretical foundation to define a good
    cut-off point of *Tc*. In other words, there is no viable reason to argue why
    a cut-off of four years is better than five.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 回收期规则的主要优点是其简单性。然而，这种规则也存在许多缺点。首先，它没有考虑货币的时间价值。在前面的案例中，第一年末收到的$30与今天收到的$30是一样的。其次，回收期之后的任何现金流都被忽略了。这种偏差不利于具有较长未来现金流的项目。最后但同样重要的是，没有理论基础来定义一个好的*Tc*截止点。换句话说，没有合理的理由来解释为什么四年的截止点比五年更好。
- en: Writing your own financial calculator in Python
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用Python编写你自己的财务计算器
- en: 'It could be viewed as a great achievement when a new Python learner could write
    his/her own financial calculator. The basic knowledge to do so includes the following:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个新的Python学习者能够编写自己的财务计算器时，这可以视为一个巨大的成就。做到这一点的基本知识包括以下内容：
- en: Knowledge on how to write a function
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何编写一个函数的知识
- en: What are the related finance formulae?
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相关的财务公式是什么？
- en: 'For the latter, we have learnt from the preceding sections, such as the formula
    to calculate the present value of one future cash flow. Let''s write the simplest
    Python function to double an input value:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 对于后者，我们已经从前面的章节中学到了一些内容，比如计算单一未来现金流现值的公式。现在我们来写一个最简单的Python函数来对输入值进行加倍：
- en: '[PRE35]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Here, `def` is the keyword for writing a function, `dd` is the function name,
    and `x` in the parentheses is an input variable. For Python, the indentation is
    critical. The preceding indentation indicates that the second line is the part
    of the `dd` function. Calling this function is the same as calling other built-in
    Python functions:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`def`是编写函数的关键字，`dd`是函数名，括号中的`x`是输入变量。对于Python，缩进是至关重要的。前面的缩进表示第二行是`dd`函数的一部分。调用这个函数与调用其他内建的Python函数相同：
- en: '[PRE36]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now, let''s write our simplest financial calculator. First, launch Python and
    use its editor to enter the following codes:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们编写最简单的财务计算器。首先，启动Python并使用其编辑器输入以下代码：
- en: '[PRE37]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'For simplicity, each function of the preceding three functions has just two
    lines. After activating those functions by running the whole program, the `dir()`
    function could be used to show their existence:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简单起见，前述三个函数中的每个函数只有两行代码。在通过运行整个程序激活这些函数后，可以使用`dir()`函数来显示它们的存在：
- en: '[PRE38]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Calling this self-generated financial calculator is trivial; see the following
    code:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 调用这个自生成的财务计算器是微不足道的；请参见以下代码：
- en: '[PRE39]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Again, when entering input values, two methods could be used: the meaning of
    input variables depend on their order, see the first call, and with a keyword,
    see the last two preceding examples.'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，在输入值时，可以使用两种方法：输入变量的含义取决于它们的顺序，见第一次调用；或者使用关键字，见最后两个示例。
- en: A more elegant method to write one's own financial calculator is shown in *Appendix
    G*.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 编写个人财务计算器的一种更优雅的方法见于*附录 G*。
- en: Two general formulae for many functions
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多个函数的两个通用公式
- en: 'This section is optional since it is quite complex in terms of mathematical
    expression. Skipping this section would not have any impact on the understanding
    of the other chapters. Thus, this section is for advanced learners. Up to now
    in this chapter, we have learnt the usage of several functions, such as `pv()`,
    `fv()`, `nper()`, `pmt()`, and `rate()` included in the SciPy module or `numpy.lib.financial`
    submodule. The first general formula is related to the present value:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 这一节是可选的，因为在数学表达式上比较复杂。跳过这一节不会影响对其他章节的理解。因此，这一节适合进阶学习者。目前为止，在本章中，我们已经学习了 SciPy
    模块或 `numpy.lib.financial` 子模块中包含的几个函数的使用方法，如 `pv()`、`fv()`、`nper()`、`pmt()` 和
    `rate()`。第一个通用公式与现值有关：
- en: '![Two general formulae for many functions](img/B06175_03_49.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![多个函数的两个通用公式](img/B06175_03_49.jpg)'
- en: 'On the right-hand side of the preceding equation, the first one is the present
    value of one future cash flow, while the second part is the present value of annuity.
    The variable *type* takes a value of zero (default value); it is the present value
    of a normal annuity, while it is an annuity due if *type* takes a value of 1\.
    The negative sign is for the sign convention. If using the same notation as that
    used for the functions contained in SciPy and `numpy.lib.financial`, we have the
    following formula:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在前述公式的右侧，第一个部分是单个未来现金流的现值，而第二部分是年金的现值。变量*type*的值为零（默认值）；它表示普通年金的现值，而如果*type*的值为
    1，则表示到期年金。负号用于符号约定。如果使用与 SciPy 和 `numpy.lib.financial` 中函数相同的符号，我们有以下公式：
- en: '![Two general formulae for many functions](img/B06175_03_50.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![多个函数的两个通用公式](img/B06175_03_50.jpg)'
- en: 'Here are several examples using both Equation (14) and the `pv()` function
    from SciPy. James intends to invest *x* dollars today for the next 10 years. His
    annual rate of return is 5%. During the next 10 years, he will withdraw $5,000
    at the beginning of each year. In addition, he hopes that he will have $7,000
    at the end of his investment horizon. How much must he invest today, that is,
    what is the value of x? By applying the preceding equation manually, we have the
    following result. Please pay attention to the negative sign:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几个使用公式（14）和 `pv()` 函数（来自 SciPy）示例。James 打算今天投资 *x* 美元，投资期限为 10 年。他的年回报率是
    5%。在接下来的 10 年里，他将在每年年初提取 5,000 美元。此外，他希望在投资期满时能有 7,000 美元。今天他必须投资多少，即 *x* 的值是多少？通过手动应用前述公式，我们得到了以下结果。请注意负号：
- en: '[PRE40]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The result is the same as when the `scipy.pv()` function is called; see the
    following code:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 结果与调用 `scipy.pv()` 函数时相同；见以下代码：
- en: '[PRE41]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'To separate normal annuity from annuity due, we have the following two equations.
    For a normal annuity, we have the following equation:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将普通年金与到期年金分开，我们有以下两个公式。对于普通年金，我们有以下公式：
- en: '![Two general formulae for many functions](img/B06175_03_51.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![多个函数的两个通用公式](img/B06175_03_51.jpg)'
- en: 'For annuity due, we have the following equation:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 对于到期年金，我们有以下公式：
- en: '![Two general formulae for many functions](img/B06175_03_52.jpg)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![多个函数的两个通用公式](img/B06175_03_52.jpg)'
- en: 'Similarly, for the future value, we have the following general formula:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，对于未来值，我们有以下通用公式：
- en: '![Two general formulae for many functions](img/B06175_03_53.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![多个函数的两个通用公式](img/B06175_03_53.jpg)'
- en: 'If using the same notations used in SciPy and `numpy.lib.financial`, we have
    the following formula:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用与 SciPy 和 `numpy.lib.financial` 中相同的符号，我们有以下公式：
- en: '![Two general formulae for many functions](img/B06175_03_54.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![多个函数的两个通用公式](img/B06175_03_54.jpg)'
- en: 'Similarly, we could separate annuity from annuity due. For a normal annuity,
    we have the following formula:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们可以将年金与到期年金分开。对于普通年金，我们有以下公式：
- en: '![Two general formulae for many functions](img/B06175_03_55.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![多个函数的两个通用公式](img/B06175_03_55.jpg)'
- en: 'For an annuity due, we have the following formula:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 对于到期年金，我们有以下公式：
- en: '![Two general formulae for many functions](img/B06175_03_56.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![多个函数的两个通用公式](img/B06175_03_56.jpg)'
- en: 'In the following equations, **present value** (**pv**) appears twice. However,
    they have quite different meanings. Similarly, future value appears twice with
    different meanings as well:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下方程中，**现值**（**pv**）出现了两次。然而，它们的含义大不相同。同样，未来值也出现了两次，且含义不同：
- en: '![Two general formulae for many functions](img/B06175_03_57.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![许多函数的两个通用公式](img/B06175_03_57.jpg)'
- en: 'Let''s use a simple example to explain the links between those two equations.
    First, let''s simplify our functions by dropping the sign convention and assume
    normal annuity, that is, it is not annuity due:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个简单的例子来解释这两个方程之间的联系。首先，通过去掉符号约定来简化我们的函数，并假设是普通年金，即不考虑期初年金：
- en: '![Two general formulae for many functions](img/B06175_03_58.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![许多函数的两个通用公式](img/B06175_03_58.jpg)'
- en: Actually, we would have three *pv* (present value) and three *fv* (future value).
    We invest $100 for three years. In addition, at the end of each year for the next
    three years, we invest $20\. If the rate of return is 4% per year, what is the
    future value of our investment?
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们将有三个*pv*（现值）和三个*fv*（未来值）。我们投资$100，投资期为三年。此外，在接下来的三年里，每年年底我们再投资$20。如果年回报率为4%，那么我们的投资的未来值是多少？
- en: '![Two general formulae for many functions](img/B06175_03_59.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![许多函数的两个通用公式](img/B06175_03_59.jpg)'
- en: 'Obviously, we could apply the last equation to get our answer:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们可以应用最后一个方程来得出我们的答案：
- en: '[PRE42]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Actually, we have three future values. Let''s call them **FV(total)**, **FV(
    annuity)** and **FV(one PV)**. The relationship between them is given here:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们有三个未来值。我们将它们称为**FV(total)**、**FV( annuity)** 和 **FV(one PV)**。它们之间的关系如下：
- en: '![Two general formulae for many functions](img/B06175_03_60.jpg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![许多函数的两个通用公式](img/B06175_03_60.jpg)'
- en: 'The following code shows how to calculate the future value of annuity and the
    future value of one present value:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了如何计算年金的未来值和一个现值的未来值：
- en: '[PRE43]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The total future value is the summation of those two future values: *62.4320+
    112.4864=174.92*. Now, let''s see how to get three corresponding present values.
    Let''s call them **PV(total)**, **PV( annuity)**, and **PV(one PV)**. The relationship
    between them will be as follows:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 总未来值是这两个未来值的总和：*62.4320+ 112.4864=174.92*。现在，让我们看看如何得到三个对应的现值。我们将它们称为**PV(total)**、**PV(
    annuity)** 和 **PV(one PV)**。它们之间的关系如下：
- en: '![Two general formulae for many functions](img/B06175_03_61.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![许多函数的两个通用公式](img/B06175_03_61.jpg)'
- en: 'Let''s use the same cash flows shown previously. Obviously, the first $100
    is itself the present value. The present value of three $20s could be calculated
    manually; see the following code:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用之前展示的相同现金流。显然，第一个$100本身就是现值。三个$20的现值可以手动计算；请参见以下代码：
- en: '[PRE44]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Thus, the total present value will be *100 + 55.51=155.51*. Alternatively,
    we could apply `scipy.pv()` to estimate the present value of annuity; see the
    following code:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，总现值将是*100 + 55.51=155.51*。另外，我们可以应用 `scipy.pv()` 来估算年金的现值；请参见以下代码：
- en: '[PRE45]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The relationship between total future value (`174.92`) and total present value
    (`155.51`), has the following relationship:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 总未来值（`174.92`）和总现值（`155.51`）之间的关系如下：
- en: '[PRE46]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: In summary, when calling the `scipy.pv()` and `scipy.fv()` functions, the meaning
    of `fv` in the `scipy.pv()` function is different from the final value of `scipy.fv()`.
    Readers have to understand the difference between a total future, the future value
    of one present value, and the future value of annuity. This is true for the `pv`
    variable in the `scipy.fv()` function and the final result after calling the `scipy.pv()`
    function.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，当调用 `scipy.pv()` 和 `scipy.fv()` 函数时，`scipy.pv()` 函数中的 `fv` 含义与 `scipy.fv()`
    函数中的最终值是不同的。读者需要理解总未来值、一个现值的未来值和年金的未来值之间的区别。这对于 `scipy.fv()` 函数中的 `pv` 变量和调用 `scipy.pv()`
    函数后的最终结果也适用。
- en: Appendix A – Installation of Python, NumPy, and SciPy
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 A – Python、NumPy 和 SciPy 的安装
- en: 'To install Python via Anaconda, we have the following steps:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Anaconda 安装 Python，我们需要以下步骤：
- en: Go to [http://continuum.io/downloads](http://continuum.io/downloads).
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[http://continuum.io/downloads](http://continuum.io/downloads)。
- en: Find an appropriate package; see the following screenshot:![Appendix A – Installation
    of Python, NumPy, and SciPy](img/B06175_03_07.jpg)
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到合适的软件包；请参见以下截图：![附录 A – Python、NumPy 和 SciPy 的安装](img/B06175_03_07.jpg)
- en: 'For Python, different versions coexist. From the preceding screenshot, we see
    that there exist two versions of **3.5** and **2.7**. For this book, the version
    is not that critical. The old version has fewer problems while the new one usually
    has new improvements. After Python is installed via Anaconda, NumPy and SciPy
    will be installed at the same time. After launching Python through Spyder, issue
    the following two lines. If there is no error, then those two modules were pre-installed:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Python，不同版本并存。从前面的截图中，我们可以看到存在 **3.5** 和 **2.7** 两个版本。对于本书来说，版本并不是那么关键。旧版本问题较少，而新版本通常有新的改进。在通过
    Anaconda 安装 Python 后，NumPy 和 SciPy 将同时安装。启动 Python 并通过 Spyder 发出以下两行命令。如果没有错误，说明这两个模块已预安装：
- en: '[PRE47]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The other method is to install Python directly.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是直接安装 Python。
- en: 'Go to [http://www.python.org/download](http://www.python.org/download). Depending
    on your computer, choose the appropriate package, for example, Python 3.5.2 version.
    In terms of installing a module, find the Python documentation. The following
    command will install the latest version of a module and its dependencies from
    the **Python Packaging Index** (**PIP**):'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 访问 [http://www.python.org/download](http://www.python.org/download)。根据你的计算机，选择合适的安装包，例如
    Python 3.5.2 版本。关于安装模块，请查阅 Python 文档。以下命令将从**Python 包索引**（**PIP**）安装模块及其依赖项的最新版本：
- en: '[PRE48]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'For POSIX users (including Mac OS X and Linux users), the examples in this
    guide assume the use of a virtual environment. To install a specific version,
    see the following code:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 POSIX 用户（包括 Mac OS X 和 Linux 用户），本指南中的示例假定使用虚拟环境。要安装特定版本，请参见以下代码：
- en: '[PRE49]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Normally, if a suitable module is already installed, attempting to install
    it again will have no effect. Upgrading existing modules must be requested explicitly:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，如果已经安装了适当的模块，再次尝试安装它不会有任何效果。升级现有模块必须明确请求：
- en: '[PRE50]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Appendix B – visual presentation of time value of money
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 B – 时间价值的直观展示
- en: 'If a reader has difficulty understanding the following code, she/he could just
    ignore this part. In finance, we know that $100 received today is more valuable
    than $100 received one year later. If we use size to represent the difference,
    we could have the following Python program to represent the same concept:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 如果读者在理解以下代码时有困难，可以忽略这一部分。在金融学中，我们知道今天收到的 $100 比一年后收到的 $100 更有价值。如果我们用大小来表示差异，我们可以通过以下
    Python 程序来表示相同的概念：
- en: '[PRE51]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'The graph is shown here. The first blue circle is the present value, while
    the second one is the present value of the same $100 at the end of the second
    year:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示了图表。第一个蓝色圆圈是现值，而第二个是同样 $100 在第二年末的现值：
- en: '![Appendix B – visual presentation of time value of money](img/B06175_03_08.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![附录 B – 时间价值的直观展示](img/B06175_03_08.jpg)'
- en: Appendix C – Derivation of present value of annuity from present value of one
    future cash flow and present value of perpetuity
  id: totrans-271
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 C – 从未来现金流的现值和永久年金的现值推导年金现值
- en: 'First, we have the following two formulae:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们有以下两个公式：
- en: '![Appendix C – Derivation of present value of annuity from present value of
    one future cash flow and present value of perpetuity](img/B06175_03_62.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![附录 C – 从未来现金流的现值和永久年金的现值推导年金现值](img/B06175_03_62.jpg)'
- en: Here, *FV* is the future value, *R* is the discount period rate, *n* is the
    number of periods, and *C* is the same cash flow happening at the end of each
    period with the first cash flow happening at the end of the first period.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*FV* 是未来值，*R* 是折现期利率，*n* 是期数，*C* 是在每个期末发生的相同现金流，第一个现金流发生在第一期末。
- en: 'An annuity is defined as *a set of equivalent cash flows occurring in the future*.
    If the first cash flow occurs at the end of the first period, the present value
    of an annuity is by the following formula:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 年金被定义为*一组未来发生的等值现金流*。如果第一个现金流发生在第一期末，则年金的现值由以下公式给出：
- en: '![Appendix C – Derivation of present value of annuity from present value of
    one future cash flow and present value of perpetuity](img/B06175_03_63.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![附录 C – 从未来现金流的现值和永久年金的现值推导年金现值](img/B06175_03_63.jpg)'
- en: 'Here, *C* is a recursive cash flow happening at the end of each period, *R*
    is period discount rate, and *n* is the number of periods. *Equation (3)* is quite
    complex. However, with a little bit of imagination, we could combine equations
    (1) and (2) to derive Equation (3). This can be done by decomposing an annuity
    into two perpetuities:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*C*是每期末发生的递归现金流，*R*是期的折现率，*n*是期数。*方程（3）*相当复杂。然而，稍加想象，我们可以通过将方程（1）和（2）结合，推导出方程（3）。这可以通过将年金分解为两个永续年金来完成：
- en: '![Appendix C – Derivation of present value of annuity from present value of
    one future cash flow and present value of perpetuity](img/B06175_03_64.jpg)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![附录 C – 通过现值的未来单笔现金流和永续年金的现值推导年金现值](img/B06175_03_64.jpg)'
- en: 'This is equivalent to the following two perpetuities:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 这相当于以下两个永续年金：
- en: '![Appendix C – Derivation of present value of annuity from present value of
    one future cash flow and present value of perpetuity](img/B06175_03_65.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![附录 C – 通过现值的未来单笔现金流和永续年金的现值推导年金现值](img/B06175_03_65.jpg)'
- en: 'Conceptually, we could think this way: Mary would receive $20 per year for
    the next 10 years. This is equivalent to two perpetuities: she would receive $20
    every year forever and at the same time PAY $20 every year forever, starting at
    year 11\. Thus, the present value of her annuity will be the present value of
    the first perpetuity minus the present value of her second perpetuity:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 从概念上讲，我们可以这样考虑：玛丽将在未来 10 年内每年收到 20 美元。这相当于两个永续年金：她将永远每年收到 20 美元，并且从第 11 年开始，每年支付
    20 美元。因此，她的年金现值将是第一个永续年金的现值减去第二个永续年金的现值：
- en: '![Appendix C – Derivation of present value of annuity from present value of
    one future cash flow and present value of perpetuity](img/B06175_03_66.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![附录 C – 通过现值的未来单笔现金流和永续年金的现值推导年金现值](img/B06175_03_66.jpg)'
- en: If the same cash flow happens at the same interval forever, it is called perpetuity.
    If the discount rate is a constant and the first cash flows happens at the end
    of the first period, its present value has the following.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 如果相同的现金流在相同的时间间隔内永远发生，则称为永续年金。如果折现率是恒定的，并且第一笔现金流发生在第一个周期结束时，则其现值如下所示。
- en: Appendix D – How to download a free financial calculat
  id: totrans-284
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 D – 如何下载免费财务计算器
- en: 'ecutable file at [http://canisius.edu/~yany/fincal.pyc](http://canisius.edu/~yany/fincal.pyc).
    Assume that it was saved under `c:/temp/`. Change your path; see the following
    screenshot:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 可执行文件位于[http://canisius.edu/~yany/fincal.pyc](http://canisius.edu/~yany/fincal.pyc)。假设它保存在`c:/temp/`中。更改你的路径；请参见以下截图：
- en: '![Appendix D – How to download a free financial calculat](img/B06175_03_09.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![附录 D – 如何下载免费财务计算器](img/B06175_03_09.jpg)'
- en: 'Here is an example:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个例子：
- en: '[PRE52]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'To find out all contained functions, the `dir()` function is used; see the
    following code:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 要找出所有包含的函数，可以使用`dir()`函数；请参见以下代码：
- en: '[PRE53]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'To find out the usage of each function, the `help()` function could be used:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解每个函数的用途，可以使用`help()`函数：
- en: '[PRE54]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '![Appendix D – How to download a free financial calculat](img/B06175_03_67.jpg)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![附录 D – 如何下载免费财务计算器](img/B06175_03_67.jpg)'
- en: '[PRE55]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Appendix E – The graphical presentation of the relationship between NPV and
    R
  id: totrans-295
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 E – NPV 与 R 关系的图形表示
- en: 'An NPV profile is the relationship between a project''s NPV and its discount
    rate (cost of capital). For a normal project, where cash outflows first then cash
    inflows, its NPV will be a decreasing function of the discount rate; see the following
    code:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: NPV 曲线是项目的净现值与其折现率（资本成本）之间的关系。对于正常项目（即现金流先为支出后为收入），其净现值将是折现率的递减函数；请参见以下代码：
- en: '[PRE56]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'The associated graph is shown here:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 相关图表如下所示：
- en: '![Appendix E – The graphical presentation of the relationship between NPV and
    R](img/B06175_03_10.jpg)'
  id: totrans-299
  prefs: []
  type: TYPE_IMG
  zh: '![附录 E – NPV 与 R 关系的图形表示](img/B06175_03_10.jpg)'
- en: 'To make our graph better, we could add a title, both labels, and one horizon
    line; see the following code:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使我们的图表更好，我们可以添加标题、标签以及一条水平线；请参见以下代码：
- en: '[PRE57]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'The output is shown here:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![Appendix E – The graphical presentation of the relationship between NPV and
    R](img/B06175_03_11.jpg)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![附录 E – NPV 与 R 关系的图形表示](img/B06175_03_11.jpg)'
- en: Appendix F – graphical presentation of NPV profile with two IRRs
  id: totrans-304
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 F – 带有两个 IRR 的净现值（NPV）曲线图
- en: 'Since the direction of cash flow changes twice, we might have two IRRs:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 由于现金流的方向发生了两次变化，我们可能会有两个内部收益率（IRR）：
- en: '[PRE58]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The corresponding graph is shown here:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的图表如下所示：
- en: '![Appendix F – graphical presentation of NPV profile with two IRRs](img/B06175_03_12.jpg)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
  zh: '![附录F – 带有两个内部收益率的净现值（NPV）图形展示](img/B06175_03_12.jpg)'
- en: Appendix G – Writing your own financial calculator in Python
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录G – 用Python编写你自己的财务计算器
- en: 'Now, let''s write our simplest financial calculator. First, launch Python and
    use the editor to enter the following codes. For simplicity, each function of
    preceding 10 functions has just two lines. Again, a proper indentation is critical.
    Thus, the second line of each function should be indented:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们编写我们最简单的财务计算器。首先，启动Python并使用编辑器输入以下代码。为简单起见，每个前面10个函数的函数体只有两行。再次强调，正确的缩进非常重要。因此，每个函数的第二行应该有缩进：
- en: '[PRE59]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Assume that the preceding program is called `myCalculator`.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 假设前面的程序名为`myCalculator`。
- en: 'The following program would generate an executable filed called `myCalculator.cpython-35.pyc`:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序将生成一个可执行文件，名为`myCalculator.cpython-35.pyc`：
- en: '[PRE60]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Exercises
  id: totrans-315
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 习题
- en: What is the present value of $206 received in 10 years with an annual discount
    rate of 2.5%?
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果年折现率为2.5%，那么10年后收到206美元的现值是多少？
- en: What is the future value of perpetuity with a periodic annual payment of $1
    and a 2.4% annual discount rate?
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 永续年金的未来价值是多少，如果年付款为1美元，年折现率为2.4%？
- en: For a normal project, its NPV is negatively correlated with the discount rate.
    Why?
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于一个普通项目，其净现值（NPV）与折现率负相关，为什么？
- en: John deposits $5,000 in the bank for 25 years. If the annual rate is 0.25% per
    year, what is the future value?
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 约翰在银行存入5,000美元，存期25年。如果年利率为每年0.25%，未来值是多少？
- en: If the annual payment is $55 with 20 years remaining, what is the present value
    if the annual discount rate is 5.41%, compounded semi-annually?
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果年付款为55美元，剩余期限为20年，年折现率为5.41%，按半年复利计算，现值是多少？
- en: If Mary plans to have $2,400 by the end of year 5, how much does she have to
    save each year if the corresponding annual rate is 3.12%?
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果玛丽计划在第5年末拥有2,400美元，她每年需要存多少钱，如果对应的年利率为3.12%？
- en: Why have we got a negative number of periods in the following code?
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么在以下代码中我们得到了负的期数？
- en: '[PRE61]'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: If a firm's earnings per share grows from $2 to $4 over a 9-year period (the
    total growth is 100%), what is its annual growth rate?
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一家公司每股收益从2美元增长到4美元，增长周期为9年（总增长为100%），其年增长率是多少？
- en: In this chapter, while writing a present value function, we use `pv_f()`. Why
    not use `pv()`, the same as the following formula?![Exercises](img/B06175_03_68.jpg)
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本章中，在编写现值函数时，我们使用了`pv_f()`。为什么不使用`pv()`，它和以下公式一样呢？！[习题](img/B06175_03_68.jpg)
- en: Here *PV* is the present value, *FV* is the future value, *R* is the periodic
    discount rate, and *n* is the number of periods.
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里，*PV* 是现值，*FV* 是未来值，*R* 是周期折现率，*n* 是期数。
- en: A project contributes cash inflows of $5,000 and $8,000 at the end of the first
    and second years. The initial cost is $3,000\. The appropriate discount rates
    are 10% and 12% for the first and the second years respectively. What is the NPV
    of the project?
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个项目在第一年和第二年分别产生5,000美元和8,000美元的现金流入。初期投资为3,000美元。第一年和第二年的折现率分别为10%和12%。该项目的净现值（NPV）是多少？
- en: 'Firm A will issue new bonds with annual coupon payment of $80 and a face value
    of $1,000\. Interest payments are made semi-annually, and the bond matures in
    2 years. The spot interest rate for the first year is 10%. At the end of the first
    year, the 1-year spot rate is expected to be 12%:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: A公司将发行年票息为80美元，面值为1,000美元的新债券。利息支付为半年付，债券将在2年后到期。第一年的现货利率为10%。第一年末，1年期现货利率预计为12%：
- en: What is the present value of the bond?
  id: totrans-329
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 债券的现值是多少？
- en: What is the lump sum you are willing to accept at the end of the second year?
  id: totrans-330
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你愿意在第二年末接受一次性支付的金额是多少？
- en: Peter's rich uncle has promised him a payment of $4,000 if he completes college
    in four years. Richard has just finished a very difficult sophomore (second) year,
    including taking several finance courses. Richard would very much like to take
    a long vacation. The appropriate discount rate is 10% compounded semi-annually.
    What is value that Peter would be giving up today if he took his vacation?
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 彼得的富有叔叔承诺如果他在四年内完成大学学业，将支付他4,000美元。理查德刚刚完成了非常艰难的二年级（大二），包括修读几门金融课程。理查德非常希望能够享受一个长假。适当的折现率为10%，半年复利。彼得如果现在去度假，将放弃什么价值？
- en: Today, you have $5,000 to invest and your investment horizon is 25 years. You
    are offered an investment plan that will pay you 6 percent per year for the next
    10 years and 9 percent per year for the last 15 years. How much will you have
    at the end of the 25 years? What is your average annual percentage return?
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 今天，您有5000美元可供投资，投资期限为25年。您被提供一个投资计划，未来10年每年回报6%，接下来的15年每年回报9%。在25年结束时，您将拥有多少资金？您的年平均回报率是多少？
- en: What are the advantages and disadvantages of using a default input value or
    values?
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用默认输入值的优点和缺点是什么？
- en: We know that the present value of growing perpetuity has the following formula:![Exercises](img/B06175_03_69.jpg)
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们知道，增长永续年金的现值公式为：![Exercises](img/B06175_03_69.jpg)
- en: Prove it.
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 证明这一点。
- en: Today, Jane is 32 years old. She plans to retire at the age of 65 with $2.5
    million savings. If she could get a 3.41%, compounded monthly, return every year,
    what will be her monthly contribution?
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 今天，简已经32岁了。她计划在65岁时退休，届时储蓄达到250万美元。如果她每年能获得3.41%的复利回报（按月复利），她每月需要存多少钱？
- en: Assume that we have a set of small programs put together called `fin101.py`.
    What is the difference between the two Python commands, `import fin101` and `from
    fin101 import *`?
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设我们有一组小程序组成的文件，名为`fin101.py`。`import fin101`和`from fin101 import *`这两个Python命令有什么区别？
- en: How can you prevent erroneous inputs such as negative interest rate?
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何防止输入错误，如负利率？
- en: Write a Python program to estimate payback period. For example, the initial
    investment is $256, and the expected future cash inflows in the next 7 years will
    be $34, $44, $55, $67, $92, $70, and $50\. What is the project's payback period
    in years?
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个Python程序来估算回收期。例如，初始投资为256美元，预计未来7年内的现金流分别为34美元、44美元、55美元、67美元、92美元、70美元和50美元。该项目的回收期是多少年？
- en: 'In the preceding exercise, if the discount rate is 7.7 percent per year, what
    is the discounted payback period? Note: The discount payback period looks at how
    to recover our initial investment by checking the summation of present values
    of future cash flows.'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在前面的练习中，如果贴现率是每年7.7%，则折现回收期是多少？注意：折现回收期是通过检查未来现金流的现值之和来计算如何收回初始投资。
- en: Summary
  id: totrans-341
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, many basic concepts related to finance were introduced, such
    as present value of one future cash flow, present value of perpetuity, present
    value of annuity, future value of one cash flow/annuity, and the concept of present
    of annuity due. The several decision rules were discussed in detail, such as the
    NPV rule, IRR rule, and payback period rule. For the next chapter, we will discuss
    how to retrieve data associated with economics, finance, and accounting from several
    open sources such as Yahoo!Finance, Google finance, Prof. French's data library,
    and Federal Research's economic data library.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了许多与金融相关的基本概念，如单一未来现金流的现值、永续年金的现值、年金的现值、单一现金流/年金的未来值，以及应付年金现值的概念。详细讨论了几种决策规则，如净现值（NPV）规则、内部收益率（IRR）规则和回收期规则。在下一章中，我们将讨论如何从几个开放资源（如Yahoo!Finance、Google
    Finance、Prof. French的数据图书馆和联邦研究的经济数据图书馆）中检索与经济学、金融学和会计学相关的数据。
