- en: Chapter 9. Trading Volatility for Profit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll look at various trading strategies for volatility.
    We''ll cover directional volatility trading and relative value volatility arbitrage.
    Options and payoff diagrams, where we use F# and FSharpChart to visualize them,
    are also briefly covered. In this chapter, you will learn:'
  prefs: []
  type: TYPE_NORMAL
- en: Trading volatility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Volatility arbitrage opportunities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Obtaining and calculating the data needed for the strategy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deriving the mathematics behind volatility arbitrage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trading the volatility
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Trading volatility is like trading most other assets, except that volatility
    can't be traded explicitly. Volatility is traded implicitly using, for example,
    options, futures, and the VIX index. Because volatility is an intrinsic value
    of the assets, it can't be traded directly. To be able to trade volatility, either
    a hedge position using a derivative and its underlying asset or an option position
    is initiated.
  prefs: []
  type: TYPE_NORMAL
- en: 'One often divides volatility trading into two categories: directional trading
    and relative value. Directional trading in volatility means we trade in the direction
    of the volatility. If the volatility is high, we may initiate a short trade in
    volatility. Relative value means we initiate two trades, where, for example, we
    go long in a call and short in another call. The first call may be under-valued
    in terms of volatility and the other may be slightly over-priced. The two related
    assets are then supposed to mean revert, and the profit is to be monetized.'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we'll briefly cover volatility trading and the ways of earning
    profit from this activity.
  prefs: []
  type: TYPE_NORMAL
- en: Plotting payoff diagrams with FSharpCharts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll construct basic payoff diagrams for European call and
    put options. Payoff diagrams are useful to visualize the theoretical payoff given
    the price of the stock and the strike of the option.
  prefs: []
  type: TYPE_NORMAL
- en: 'The payoff function for a **call** option is defined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Plotting payoff diagrams with FSharpCharts](img/4623OS_09_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'And the payoff function for a **put** option is defined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Plotting payoff diagrams with FSharpCharts](img/4623OS_09_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s look at how to do this in F#. We start by defining the payoff functions
    for calls and puts:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We can use these functions to produce numbers to be fed into FSharpChart and
    visualize the data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'We start by generating the payoff diagram for a call option with a strike value
    of `50.0`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![Plotting payoff diagrams with FSharpCharts](img/4623OS_09_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The payoff diagram showing the call option
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding chart, we can see the payoff of the call option being **0**
    until the stock price reaches **50** (the strike of the option). From there, the
    payoff goes up. We only plot values from **0** to **100**, so the maximum payoff
    in this diagram is **50**.
  prefs: []
  type: TYPE_NORMAL
- en: 'The procedure is the same for a put option with a strike value of `50.0`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![Plotting payoff diagrams with FSharpCharts](img/4623OS_09_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The payoff diagram showing the put option
  prefs: []
  type: TYPE_NORMAL
- en: The payoff diagram for the put option is the opposite of what we had seen earlier.
    In the preceding chart, the payoff will decline until it is zero at the strike
    of the option. This means the put option will be profitable for stock prices below
    the strike of the option.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, we create a combined chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![Plotting payoff diagrams with FSharpCharts](img/4623OS_09_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3: The combined payoff diagram'
  prefs: []
  type: TYPE_NORMAL
- en: Learning directional trading strategies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Directional trading in volatility means trading in the direction of the volatility.
    If the volatility is high, we may initiate a short trade in volatility. In this
    section, we'll first look at how to trade volatility using option strategies.
    Then, using an option and the underlying price to trade volatility, we'll look
    at the VIX index and the delta neutral position.
  prefs: []
  type: TYPE_NORMAL
- en: Trading volatility using options
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One way of trading volatility is to use options. We'll look at two option strategies
    for trading volatility or price movement in the underlying option.
  prefs: []
  type: TYPE_NORMAL
- en: Trading the straddle
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The straddle position consists of two options: one put and one call. Straddles
    are useful when the viewpoint of the underlying market is neutral, which means
    there is no speculation in the long-term movement of the market. It also means
    the straddle position is useful when one wants to trade volatility, regardless
    of the movement of the market.'
  prefs: []
  type: TYPE_NORMAL
- en: Long straddle
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A long straddle trade is created by taking a long position on both a call and
    a put option with the same strike and expiration. The long straddle is useful
    if you think the volatility is low and you want to monetize the potential increase
    in volatility.
  prefs: []
  type: TYPE_NORMAL
- en: The idea is that the two options (call and put) will cancel out the exposure
    to the underlying market, except for the volatility in the underlying asset of
    the options. This means the straddle is very sensitive to changes in volatility.
    In more technical terms, their respective deltas will be close to 0.5 and -0.5,
    which means they cancel out. This is because the delta for the money options is
    around 0.5 for calls and -0.5 for puts.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at some code to implement the payoff function for the long straddle:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot depicts the line chart for the payoff function for
    the long straddle:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Long straddle](img/4623OS_09_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The combined payoff diagram
  prefs: []
  type: TYPE_NORMAL
- en: Short straddle
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A short straddle is the opposite of a long straddle. Here, we create the position
    by going short on one call and one put option that have the same strike and expiration.
    A short straddle is used for trading a decrease in the volatility of an asset,
    without exposure to the market in other aspects.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code for the payoff for our short straddle is obtained by adding two short
    positions (note the minus preceding `(payoffCall k s)` ):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot depicts the line chart for the payoff function for
    the short straddle:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Short straddle](img/4623OS_09_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The combined payoff diagram
  prefs: []
  type: TYPE_NORMAL
- en: Trading the butterfly spread
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The butterfly spread consists of three legs and comes in two flavors: the long
    butterfly spread and the short butterfly spread.'
  prefs: []
  type: TYPE_NORMAL
- en: The long butterfly spread
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The long butterfly position is created by selling two at-the-money call options
    and buying two calls: an in-the-money call option and an out-of-the-money call
    option. The two calls will serve as insurances for the short position.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In summary, you need to:'
  prefs: []
  type: TYPE_NORMAL
- en: Short sell two at-the-money call options
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Buy an in-the-money call
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Buy an out-of-the-money call
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We can represent the preceding rules as code in F# to generate payoffs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'This code will generate a diagram showing the payoff for the long butterfly:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The long butterfly spread](img/4623OS_09_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The payoff diagram for the long butterfly spread
  prefs: []
  type: TYPE_NORMAL
- en: The short butterfly spread
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The short butterfly position is created by buying two at-the-money call options
    and selling an in-the-money and an out-of-the-money call. The two calls will serve
    as insurances for the short position.
  prefs: []
  type: TYPE_NORMAL
- en: 'In summary, you have to:'
  prefs: []
  type: TYPE_NORMAL
- en: Buy two at-the-money (or in the middle of the two other's strike prices) call
    options
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sell an in-the-money call
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sell an out-of-the-money call
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We can represent the preceding rules as code in F# to generate payoffs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'This code will generate the following diagram showing the payoff for the short
    butterfly:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The short butterfly spread](img/4623OS_09_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The payoff diagram for the short butterfly spread
  prefs: []
  type: TYPE_NORMAL
- en: Trading the VIX
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Another alternative if you are is interested in trading volatility using a
    directional trading strategy is to trade the VIX index. VIX is an index that combines
    the implied volatility of the S&P 500 index options. This can be interpreted as
    an indication of future volatility for the next 30 days to come. The prediction
    power of the VIX is in parity with historical returns of the S&P 500 index itself.
    This means that the information provided from the VIX is not a silver bullet when
    it comes to volatility forecasting; it is better used for directional trading
    in volatility. The following is a screenshot of a plot over the VIX index and
    a moving average indicator:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading the VIX](img/4623OS_09_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The VIX index from 2000-01-01 to 2013-11-01
  prefs: []
  type: TYPE_NORMAL
- en: Trading the delta neutral portfolio
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A delta neutral portfolio is constructed by an option and the underlying instrument.
    The portfolio will, in theory, be resistant to small changes in the underlying
    price (delta neutral). On the other hand, other things tend to change the value
    of the portfolio; this means we have to rebalance it on a regular basis.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we'll mainly extend our analysis of the delta neutral portfolio
    and study how it can be used to trade volatility.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows the actual volatility and the implied volatility
    for an asset:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading the delta neutral portfolio](img/4623OS_09_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The actual and implied volatilities for an asset
  prefs: []
  type: TYPE_NORMAL
- en: Which volatility should we use in the delta hedge position? We have two choices,
    either the **actual** volatility or the **implied** volatility.
  prefs: []
  type: TYPE_NORMAL
- en: This turns out to be a rather tricky question to answer without studying the
    profit and loss on a **mark to market** (**MTM**) basis for the two volatilities.
    To put it simply, we can use the actual volatility and then take a random walk
    until the locked-in profit is realized, that is, the two probability distributions
    intersect. The other choice is to use the implied volatility. Using the implied
    volatility will result in a more sane profit and loss curve, which is often preferred
    from the perspective of risk management because the stochastic term is somewhat
    reduced, and the profit will come in small increments over time until it's fully
    realized.
  prefs: []
  type: TYPE_NORMAL
- en: Deriving the mathematics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll look at the mathematics needed to trade a delta neutral
    portfolio.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following table presents values of a market neutral portfolio:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Deriving the mathematics](img/4623OS_09_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The following table shows the values of the market neutral portfolio for the
    next day:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Deriving the mathematics](img/4623OS_09_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Hedging with implied volatility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we are going to derive the mathematical tools for hedging with
    implied volatility to be able to watch the mark to market profit and loss.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is the mark to market profit from the current day to the next
    day:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Hedging with implied volatility](img/4623OS_09_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, **S** is the stock price and **Γ** is the Black-Scholes gamma function.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is the theoretical profit until the end of the arbitrage trade:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Hedging with implied volatility](img/4623OS_09_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We integrate the discounted value of each profit made until the end of the trade
    to get the total theoretical profit.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing the mathematics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Using Math.NET, let''s implement the mathematics derived in the previous section
    to get a feel of the close connection between the formulas and F#:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Learning relative value trading strategies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Relative value** volatility trading refers to trading volatility using opposite
    legs of some financial instruments, such as options, to take advantage of the
    movement in volatility. Usually, one would initiate a trade with a long call and
    a short call, forming a two-legged trade. There are a lot of variations to these
    types of trades, and we will mainly look at trading the slope of the volatility
    smile using options. This will form the basis of the trading strategy used in
    this book.'
  prefs: []
  type: TYPE_NORMAL
- en: Trading the slope of the smile
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, we'll recap [Chapter 6](ch06.html "Chapter 6. Exploring Volatility"),
    *Exploring Volatility*, where we looked at the smile effect for options on the
    OMX exchange in Sweden. The volatility smile is a phenomenon observed in stock
    markets. The smile is obtained by plotting the implied volatility from the options
    on the y axis and moneyness on the x axis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Moneyness is the ratio between the spot price of the underlying asset, **S**,
    and the strike price of the option, **K**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading the slope of the smile](img/4623OS_09_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In the following screenshot, you will see the moneyness, M, on the x axis and
    the implied volatility on the y axis:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading the slope of the smile](img/4623OS_09_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The volatility smile
  prefs: []
  type: TYPE_NORMAL
- en: 'One shortcoming of the preceding chart is that we plot multiple expiration
    dates in the same chart. We need to refine this approach to be able to study the
    volatility smile in more detail. As the first step, let''s modify the code for
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'The first modification is made in the `readVolatilityData` function where a
    `date` parameter is added. This is used to filter out rows that match the date
    from the CSV file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The following code is the same as we used before, but in the next step, we
    need to make a minor change:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is the code to plot the data points together with the regression
    line obtained. As we will see in the chart, the regression is not satisfactory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'The final step is to calculate the regression coefficients and to use these
    to calculate the points for our curve. Then, we will use a combined plot with
    the points and the fitted curve as we did in [Chapter 6](ch06.html "Chapter 6. Exploring
    Volatility"), *Exploring Volatility*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '![Trading the slope of the smile](img/4623OS_09_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The volatility smile for the expiration on January 20, 2013
  prefs: []
  type: TYPE_NORMAL
- en: 'Instead, we can try to fit a third degree polynomial and evaluate the graph.
    We just change the `order` value to `2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '![Trading the slope of the smile](img/4623OS_09_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The volatility smile using a third degree polynomial with the same expiration
    date
  prefs: []
  type: TYPE_NORMAL
- en: The result is more compelling this time. As we can see, there is some inconsistency
    between the options. This isn't necessarily the same as there exist some arbitrage
    opportunities in this case.
  prefs: []
  type: TYPE_NORMAL
- en: How can we take advantage of the inconsistency in the volatility for options
    with the same maturity date? One way could be to study the movements of the implied
    volatility as time proceeds. What if the volatilities are mean reverting the regression
    in some way?
  prefs: []
  type: TYPE_NORMAL
- en: First, we'll zoom in on the problem and on the set of options. The x axis is
    the moneyness of the options. We'll look at the moneyness between `0.50` and `1.5`
    in the first experiment.
  prefs: []
  type: TYPE_NORMAL
- en: 'We write some F# code to help us with this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'This is just a modification to the assignment to `mlist`, filtering on the
    `x` value. The filter and a change to the second degree polynomial will render
    the following chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Trading the slope of the smile](img/4623OS_09_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The volatility smile using a second degree polynomial for moneyness between
    0.5 and 1.5
  prefs: []
  type: TYPE_NORMAL
- en: We'll assume that the slope will change and that the slope is somewhat mean
    reverting, meaning we can initiate a position with one long and one short position
    in options affected by the movement.
  prefs: []
  type: TYPE_NORMAL
- en: Defining the trading strategy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The trading strategy for our system will be based on relative value volatility
    arbitrage as described earlier. This will enable us to trade exclusively with
    options, to be more precise, in-the-money call options.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we define the slope between the two "edges" of the moneyness: the upper
    and lower bounds of the moneyness. We have to look at a graph for doing this.
    For the preceding graph, that would typically be `[0.5, 1.0]`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get a more mathematical expression for the slope, we look at two points
    and calculate the slope from these:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Defining the trading strategy](img/4623OS_09_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, **m** is the moneyness and **σ** (sigma) is the implied volatility from
    the option prices. The slope can either rise or fall, which means **β** will increase,
    decrease, or of course, neither will happen. Let's look at the two cases more
    closely.
  prefs: []
  type: TYPE_NORMAL
- en: Case 1 – increasing the slope
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the case of a slope that is lower than the regression (average), we can
    assume that the slope will eventually revert. In the case of a rising slope, the
    slope is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case 1 – increasing the slope](img/4623OS_09_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'This leads to the following inequality, where the combined volatility is lower
    at time `0` than in the upcoming point in time:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case 1 – increasing the slope](img/4623OS_09_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We can trade this increasing slope by creating a trade with one long call and
    one short call. The difference between the rise in volatility will result in a
    potential profit. This means we need to consider the Vega of the two options.
    In case the Vega is higher for the option corresponding to ![Case 1 – increasing
    the slope](img/4623OS_09_24.jpg) than it is for ![Case 1 – increasing the slope](img/4623OS_09_25.jpg),
    the position may lose money.
  prefs: []
  type: TYPE_NORMAL
- en: Case 2 – decreasing the slope
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As in the case of an increasing slope, the same holds for the case of a decreasing
    slope. We can assume that the slope is reverting at some later point in time.
    This means the slope at time one (t1) minus the slope at point zero (t0) is less
    than zero:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case 2 – decreasing the slope](img/4623OS_09_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'This leads to the following inequality, where the combined volatility is greater
    at time zero than at the upcoming point in time:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case 2 – decreasing the slope](img/4623OS_09_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The trade is initiated with a short call and a long call.
  prefs: []
  type: TYPE_NORMAL
- en: Defining the entry rules
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The entry rules for the system will be:'
  prefs: []
  type: TYPE_NORMAL
- en: Every time there is a situation where the slope for β is lower than the slope
    of the regression, we initiate a trade as per case 1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Every time there is a situation where the slope for β is greater than the slope
    of the regression, we initiate a trade as per case 2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defining the exit rules
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The trade will be closed as soon as the inequality in either case 1 or 2 no
    longer holds. This means the slope has reverted and we may lose money. We'll also
    add a time constraint, which tells us to limit the duration of the trade to two
    days. This can be adjusted of course, but this kind of behavior is typically for
    intraday behavior.
  prefs: []
  type: TYPE_NORMAL
- en: We will implement the rules defined here in the next chapter, where we put the
    pieces together to build a fully working trading system by using options.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have looked into the details about the theory needed for
    our trading strategy. We derived some of the mathematical tools used in volatility
    trading and discussed how these can be used in the trading system. Some of the
    concepts have been introduced in earlier chapters and only slightly modified versions
    were introduced here. In the next chapter, we'll put the pieces together and look
    at how to present the data from the trading system in a GUI.
  prefs: []
  type: TYPE_NORMAL
