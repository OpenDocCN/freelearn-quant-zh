- en: '11'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '11'
- en: Quantum Approximate Optimisation Algorithm
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 量子近似优化算法
- en: 'As the name suggests, the Quantum Approximate Optimisation Algorithm (QAOA)
    is an optimisation algorithm. It is motivated by and draws upon two optimisation
    algorithms considered in previous chapters: AQC and VQE. From AQC it borrows the
    concept of solving an optimisation problem through encoding the corresponding
    objective function in the problem Hamiltonian and then evolving the system in
    such a way that the ground state of the final Hamiltonian provides the solution
    we are after (in a bitstring format). From VQE it borrows the variational principle
    applied to the parameterised quantum circuit. Roughly speaking, QAOA is a gate-model
    version of an optimisation solver that otherwise could have been tackled with
    an analog AQC approach. We can also look at QAOA as a special case of VQE with
    the constraints on the form of the Hamiltonian.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 正如名字所示，量子近似优化算法（QAOA）是一种优化算法。它受到了前几章中讨论的两种优化算法的启发：AQC和VQE。QAOA从AQC中借用了通过将相应的目标函数编码到问题哈密顿量中来解决优化问题的概念，然后通过这种方式演化系统，使得最终哈密顿量的基态提供我们所追求的解决方案（以比特串格式表示）。QAOA从VQE中借用了适用于参数化量子电路的变分原理。粗略地说，QAOA是优化求解器的门模型版本，而这种优化本来可以通过模拟AQC方法来解决。我们也可以将QAOA看作是VQE的特例，其中对哈密顿量的形式有限制。
- en: QAOA was introduced in the pioneering work by Farhi, Goldstone, and Gutmann  [[96](Biblography.xhtml#XFarhi2014)]
    in 2014 and its potential for establishing quantum supremacy was investigated
    by Farhi and Harrow in  [[99](Biblography.xhtml#XFarhi2016)]. QAOA and its sister
    algorithm that generalises it, the Quantum Alternating Operator Ansatz (with the
    same acronym!), have been tested on a number of financial use cases. Here we can
    mention the work by Hodson, Ruck, Ong, Garvin, and Dulma  [[138](Biblography.xhtml#XHodson2019)]
    on portfolio rebalancing experiments and the one by Barkoutsos, Nannicini, Robert,
    Tavernelli, and Woerner  [[26](Biblography.xhtml#XBarkoutsos2019)] using Conditional
    Value-at-Risk (CVaR) as the QAOA objective function. The algorithm has significant
    potential and promises to become a standard tool in the arsenal of quantum computing
    methods aimed at financial applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: QAOA在Farhi、Goldstone和Gutmann于2014年的开创性工作中被提出[[96](Biblography.xhtml#XFarhi2014)]，并且其在建立量子霸权方面的潜力在Farhi和Harrow的研究中得到了探讨[[99](Biblography.xhtml#XFarhi2016)]。QAOA及其推广算法——量子交替算符假设（同样的首字母缩写！）已在多个金融应用案例中进行了测试。这里我们可以提到Hodson、Ruck、Ong、Garvin和Dulma的工作[[138](Biblography.xhtml#XHodson2019)]，该工作涉及投资组合再平衡实验，以及Barkoutsos、Nannicini、Robert、Tavernelli和Woerner的研究[[26](Biblography.xhtml#XBarkoutsos2019)]，他们使用条件风险价值（CVaR）作为QAOA的目标函数。该算法具有显著潜力，并有望成为量子计算方法中针对金融应用的标准工具。
- en: 11.1 Time Evolution
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.1 时间演化
- en: 'Consider again the description of the dynamics of quantum mechanical systems,
    briefly covered in Chapter [1](Chapter_1.xhtml#x1-220001) (as one of the postulates
    of quantum mechanics) and Chapter [2](Chapter_2.xhtml#x1-480002) (where we introduced
    the principles of Adiabatic Quantum Computing). These dynamics are governed by
    the Schrödinger equation ([1.2.2](Chapter_1.xhtml#x1-370002)):'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 再次考虑量子力学系统的动态描述，这在第[1](Chapter_1.xhtml#x1-220001)章（作为量子力学的公设之一）和第[2](Chapter_2.xhtml#x1-480002)章（在其中介绍了绝热量子计算的原理）中简要讨论过。这些动态由薛定谔方程（[1.2.2](Chapter_1.xhtml#x1-370002)）支配：
- en: '| ![ d &#124;ψ (t)⟩ iℏ--dt--- = ℋ &#124;ψ(t)⟩, ](img/file1116.jpg) |  |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| ![ d &#124;ψ (t)⟩ iℏ--dt--- = ℋ &#124;ψ(t)⟩, ](img/file1116.jpg) |  |'
- en: with some initial condition ![|ψ(0)⟩](img/file1117.jpg), where ![|ψ (t)⟩](img/file1118.jpg)
    is the quantum state at time *t* and ℋ is the time-independent Hamiltonian. Its
    solution is given by ([1.2.2](Chapter_1.xhtml#x1-370002)), namely
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一些初始条件 ![|ψ(0)⟩](img/file1117.jpg)，其中 ![|ψ (t)⟩](img/file1118.jpg)是时间 *t*
    处的量子态，ℋ是时间无关的哈密顿量。其解由 ([1.2.2](Chapter_1.xhtml#x1-370002))给出，即
- en: '| ![&#124;ψ (t)⟩ = 𝒰(0,t) &#124;ψ(0)⟩, ](img/file1119.jpg) |  |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| ![&#124;ψ (t)⟩ = 𝒰(0,t) &#124;ψ(0)⟩, ](img/file1119.jpg) |  |'
- en: 'where the operator 𝒰(0*,t*) is obtained from the Hamiltonian ℋ by ([1.2.2](Chapter_1.xhtml#x1-370002)):'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 其中算符 𝒰(0*,t*)是通过 ([1.2.2](Chapter_1.xhtml#x1-370002))从哈密顿量 ℋ得到的：
- en: '| ![ ( iℋt) 𝒰 (0,t) = exp − ---- . ℏ ](img/file1120.jpg) |  |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| ![ ( iℋt) 𝒰 (0,t) = exp − ---- . ℏ ](img/file1120.jpg) |  |'
- en: We work with units where ℏ is set to 1, so that the system dynamics reads
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们采用单位制，其中 ℏ设为1，因此系统的动态可表示为：
- en: '| ![&#124;ψ(t)⟩ = e− iℋt &#124;ψ (0 )⟩. ](img/file1121.jpg) |  |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| ![&#124;ψ(t)⟩ = e− iℋt &#124;ψ (0 )⟩. ](img/file1121.jpg) |  |'
- en: If the initial state of the system ![|ψ(0)⟩](img/file1122.jpg) is known then
    the state of the system at time *t* is also known and is determined by the action
    of the Hamiltonian ℋ over the period of time *t*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果已知系统的初始状态 ![|ψ(0)⟩](img/file1122.jpg)，则可以知道系统在时间 *t* 时的状态，该状态由哈密顿量 ℋ 在时间 *t*
    内的作用决定。
- en: 'However, the solution ([11.1](#x1-2180001)) assumes that the system Hamiltonian
    is time-independent. At the same time, AQC works with time-dependent Hamiltonians
    of the form ([2.2](Chapter_2.xhtml#x1-500002)):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，解（[11.1](#x1-2180001)）假设系统哈密顿量是时间无关的。与此同时，AQC 工作于时间依赖的哈密顿量，形式为（[2.2](Chapter_2.xhtml#x1-500002)）：
- en: '| ![ ( t ) t ℋ (t) = 1 − T- ℋ0 + T-ℋF , ](img/file1123.jpg) |  |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| ![ ( t ) t ℋ (t) = 1 − T- ℋ0 + T-ℋF , ](img/file1123.jpg) |  |'
- en: 'for some *initial* Hamiltonian ℋ[0] and some *final* or *problem* (encoding
    the optimisation problem) Hamiltonian ℋ[F] . How do we reconcile this mismatch?
    The answer is that we can *approximate*  [[272](Biblography.xhtml#XStechly2020)]
    the time-dependent Hamiltonian ℋ(*t*) that transforms the state over [0*,T*] by
    a sequence of time-independent Hamiltonians:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于某些*初始*哈密顿量 ℋ[0] 和某些*最终*或*问题*（编码优化问题）哈密顿量 ℋ[F]，我们如何调和这个不匹配呢？答案是我们可以*近似*[[272](Biblography.xhtml#XStechly2020)]
    由一系列时间无关的哈密顿量来近似时间依赖的哈密顿量 ℋ(*t*)，它在 [0*,T*] 时间段内变换系统状态：
- en: '![ℋ1, ℋ2, ..., ℋm, ](img/file1124.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![ℋ1, ℋ2, ..., ℋm, ](img/file1124.jpg)'
- en: 'transforming the state over the corresponding shorter time intervals:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在相应的较短时间间隔内变换系统状态：
- en: '![[t0 = 0,t1], [t1,t2], ..., [tm−1,tm = T ]. ](img/file1125.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![[t0 = 0,t1], [t1,t2], ..., [tm−1,tm = T ]. ](img/file1125.jpg)'
- en: A good analogy is the approximation of a continuous function (e.g., sin(⋅))
    by a piecewise linear function as shown in Figure [11.1](#11.1). The more granular
    the time intervals [*t*[i−1]*,t*[i]], the better the approximation.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的类比是用分段线性函数近似连续函数（例如，sin(⋅)），如图 [11.1](#11.1) 所示。时间间隔 [*t*[i−1]*,t*[i]] 越细化，近似越好。
- en: '![Figure 11.1: Piecewise linear approximation of t↦→sin(t). ](img/file1127.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.1：t↦→sin(t)的分段线性近似。 ](img/file1127.jpg)'
- en: 'Figure 11.1: Piecewise linear approximation of t![↦→](img/file1126.jpg)sin(t).'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.1：t![↦→](img/file1126.jpg)sin(t)的分段线性近似。
- en: Similarly, we can approximate the operator 𝒰(0*,T*) as
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们可以将算符 𝒰(0*,T*) 近似为
- en: '| ![𝒰 (0,T) ≈ 𝒰(tm− 1,tm )𝒰(tm−2,tm− 1) ⋅⋅⋅𝒰 (t2,t1)𝒰(t0,t1). ](img/file1128.jpg)
    |  |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| ![𝒰 (0,T) ≈ 𝒰(tm− 1,tm )𝒰(tm−2,tm− 1) ⋅⋅⋅𝒰 (t2,t1)𝒰(t0,t1). ](img/file1128.jpg)
    |  |'
- en: Again, larger values of *n* give a better approximation.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，较大的 *n* 值会给出更好的近似。
- en: The evolution of a quantum mechanical system over a long time interval can be
    modelled as a sequence of time-independent Hamiltonians transforming the system
    state over the corresponding shorter time intervals.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 量子力学系统在较长时间间隔内的演化可以被建模为一系列时间无关的哈密顿量，通过相应的较短时间间隔变换系统状态。
- en: 11.2 The Suzuki-Trotter Expansion
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.2 Suzuki-Trotter 展开式
- en: A particularly useful approximation of 𝒰(0*,T*) can be obtained using the Suzuki-Trotter
    expansion  [[279](Biblography.xhtml#XSuzuki1993)]. If 𝒜[1]*,*𝒜[2]*,…,*𝒜[k] are
    operators that do not necessarily commute, then
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 Suzuki-Trotter 展开式[[279](Biblography.xhtml#XSuzuki1993)]获得对 𝒰(0*,T*)的一个特别有用的近似。如果
    𝒜[1]*, 𝒜[2]*,…, 𝒜[k] 是不一定对易的算符，则
- en: '| ![ ( ) [ ( 𝒜 ) ( 𝒜 ) (𝒜 ) ]m exp 𝒜1 + 𝒜2 + ...+ 𝒜k = lim exp -1- exp -2-
    ⋅⋅⋅exp --k . m →∞ m m m ](img/file1129.jpg) |  |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| ![ ( ) [ ( 𝒜 ) ( 𝒜 ) (𝒜 ) ]m exp 𝒜1 + 𝒜2 + ...+ 𝒜k = lim exp -1- exp -2-
    ⋅⋅⋅exp --k . m →∞ m m m ](img/file1129.jpg) |  |'
- en: Recall that two operators 𝒜 and ℬ are said to commute if 𝒜ℬ = ℬ𝒜. Many operators
    introduced in previous chapters do not commute, for example, rotations around
    different axes do not, and the end result (the end quantum state) depends on how
    rotations are ordered.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，两个算符 𝒜 和 ℬ 如果满足 𝒜ℬ = ℬ𝒜，则称它们对易。在前几章中引入的许多算符是不对易的，例如，不同轴上的旋转是不对易的，最终结果（最终量子态）取决于旋转的顺序。
- en: As mentioned in Chapter [1](Chapter_1.xhtml#x1-220001), the expectation values
    of Hermitian operators are real and correspond to physical observables (e.g.,
    the expectation of a Hermitian Hamiltonian is the physically observable energy).
    If operators commute we can *measure* them in an arbitrary order and obtain the
    same answer. There is no uncertainty in the values of the corresponding physical
    observables.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如第[1](Chapter_1.xhtml#x1-220001)章所述，厄米算符的期望值是实数，并且对应于物理可观察量（例如，厄米哈密顿量的期望值是物理上可观察的能量）。如果算符对易，我们可以*按任意顺序测量*它们并得到相同的结果。相应物理可观察量的值没有不确定性。
- en: The Suzuki-Trotter expansion, however, does not require operators to commute
    to remain valid. This has important implications for QAOA as we shall see below.
    If 𝒰(0*,T*) has the form exp([𝒜 + ℬ]*T*) then we can use the Suzuki-Trotter expansion
    to obtain
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，铃木-托特展开不要求算符对易就能保持有效。这对QAOA有重要的影响，正如我们接下来将看到的。如果𝒰(0*,T*)的形式为exp([𝒜 + ℬ]*T*)，则我们可以使用铃木-托特展开得到
- en: '![ [ ( ) ( ) ] 𝒜T-- ℬT- m exp([𝒜 + ℬ]T) = mli→m∞ exp m exp m , ](img/file1130.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![ [ ( ) ( ) ] 𝒜T-- ℬT- m exp([𝒜 + ℬ]T) = mli→m∞ exp m exp m , ](img/file1130.jpg)'
- en: namely the time evolution of [𝒜 + ℬ]*T* can be approximated by applying alternatively 𝒜
    and ℬ over time intervals of length *T∕m*.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 即[𝒜 + ℬ]*T*的时间演化可以通过在时间间隔*T∕m*内交替应用𝒜和ℬ来近似。
- en: In Chapter [3](Chapter_3.xhtml#x1-630003), we introduced detailed specifications
    of the AQC, where the Hamiltonians ℋ[0] and ℋ[F] have the general form
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在第[3](Chapter_3.xhtml#x1-630003)章中，我们介绍了AQC的详细规范，其中哈密顿量ℋ[0]和ℋ[F]具有一般形式。
- en: '| ![ ∑n ∑n ∑n ∑n ℋ0 = σix and ℋF = aiσiz + bijσizσjz, i=1 i=1 i=1 j=i+1 ](img/file1131.jpg)
    |  |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| ![ ∑n ∑n ∑n ∑n ℋ0 = σix and ℋF = aiσiz + bijσizσjz, i=1 i=1 i=1 j=i+1 ](img/file1131.jpg)
    |  |'
- en: for some coefficients (*a*[i])[i=1,…,n] and (*b*[ij])[i,j=1,…,n]. We also refer
    the interested reader to  [[304](Biblography.xhtml#Xwurtz2106counterdiabaticity)]
    for a precise connection between QAOA and AQC, in particular in the case of a
    finite number of steps *m*.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些系数(*a*[i])[i=1,…,n]和(*b*[ij])[i,j=1,…,n]。我们还将感兴趣的读者引导至 [[304](Biblography.xhtml#Xwurtz2106counterdiabaticity)]，以便了解QAOA与AQC之间的精确联系，特别是在有限步骤*m*的情况下。
- en: The initial Hamiltonian ℋ[0] is the operator 𝒜 – called the *mixing* Hamiltonian
    – and the final Hamiltonian ℋ[F] is the operator ℬ – called the *phase* Hamiltonian.
    Recall from Chapter [10](Chapter_10.xhtml#x1-20200010) that the Pauli operators *σ*[x],
    *σ*[y], and *σ*[z] are represented by the quantum gates X, Y, and Z, and the superscript
    in *σ*[x]^i refers to the qubit on which it acts.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 初始哈密顿量ℋ[0]是算符𝒜——称为*混合*哈密顿量——最终哈密顿量ℋ[F]是算符ℬ——称为*相位*哈密顿量。回顾第[10](Chapter_10.xhtml#x1-20200010)章，保利算符*σ*[x]、*σ*[y]和*σ*[z]分别由量子门X、Y和Z表示，*σ*[x]^i中的上标i表示作用的比特。
- en: 'The initial state is set in the equal superposition state of all possible solutions  [[122](Biblography.xhtml#XHadfield2019)]:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 初始状态设置为所有可能解的等超位置状态 [[122](Biblography.xhtml#XHadfield2019)]：
- en: '![ 1 ( ) 1 2∑n−1 |ψ(0)⟩ = √-n- |0...00⟩ + |0 ...01⟩+ ...+ |1...11⟩ = √-n- |i⟩,
    2 2 i=0 ](img/file1132.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![ 1 ( ) 1 2∑n−1 |ψ(0)⟩ = √-n- |0...00⟩ + |0 ...01⟩+ ...+ |1...11⟩ = √-n- |i⟩,
    2 2 i=0 ](img/file1132.jpg)'
- en: which is the ground state of 𝒜 and can be easily constructed from ![|0⟩](img/file1133.jpg)^(⊗n)
    by applying the Hadamard gate H to every qubit, i.e.,
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是𝒜的基态，可以通过对每个比特应用哈达玛门H，从![|0⟩](img/file1133.jpg)^(⊗n)轻松构造得到，即：
- en: '![|ψ(0)⟩ = H⊗n |0⟩⊗n . ](img/file1134.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![|ψ(0)⟩ = H⊗n |0⟩⊗n . ](img/file1134.jpg)'
- en: '**Remark:** For a one-qubit system, 𝒜 is the X gate and the initial state is'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**备注：** 对于一个单比特系统，𝒜是X门，初始状态为'
- en: '![ 1 |ψ(0)⟩ = √--(|0⟩ + |1⟩) = |+⟩ . 2 ](img/file1135.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![ 1 |ψ(0)⟩ = √--(|0⟩ + |1⟩) = |+⟩ . 2 ](img/file1135.jpg)'
- en: As we know from Chapter [10](Chapter_10.xhtml#x1-20200010), state ![|+⟩](img/file1136.jpg)
    is the eigenstate of X with eigenvalue equal to 1, namely X![|+ ⟩](img/file1137.jpg)
    = ![|+⟩](img/file1138.jpg).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在第[10](Chapter_10.xhtml#x1-20200010)章中所知，状态![|+⟩](img/file1136.jpg)是X的特征状态，其特征值为1，即X![|+
    ⟩](img/file1137.jpg) = ![|+⟩](img/file1138.jpg)。
- en: 11.3 The Algorithm Specification
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.3 算法规范
- en: Now everything is in place for the formulation of the QAOA procedure  [[122](Biblography.xhtml#XHadfield2019)].
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在一切就绪，可以开始制定QAOA程序 [[122](Biblography.xhtml#XHadfield2019)]。
- en: '![--------------------------------------------------------------------- -Algorithm---9:-Quantum--Approximate-Optimisation-Algorithm-----------
    Input: 𝒜 and ℬ. 1: A parameterised quantum state |ψ(β, γ)⟩, β := (β1,...,βm ),
    γ := (γ ,...,γ ), is created by alternately applying the operators 𝒜 1 m and ℬ
    for m rounds, where the duration in round i (i = 1,...,m ) is specified by the
    parameters β and γ respectively: i i ( ⊗n) |ψ (β, γ)⟩ = e− iβm𝒜e −iγmℬ ⋅⋅⋅e−iβ2𝒜e−
    iγ2ℬe−iβ1𝒜e −iγ1ℬ H ⊗n |0⟩ . 2: A computational basis (z- basis) measurement is
    performed on the obtained state, which returns a candidate solution. Repeating
    the above state preparation and measurement, the expected value of the cost function
    f over the returned solution samples is given by ⟨f⟩ = ⟨ψ(β,γ)|ℬ |ψ(β,γ )⟩ , which
    can be statistically estimated from the samples produced (as explained in Chapter
    10 ). 3: The above steps may then be repeated with the updated sets of time parameters
    β and γ – the variational part of the algorithm – within the classical optimisation
    loop that aims to minimise the expectation of the cost function ⟨f⟩. Result: The
    algorithm returns the best found solution. ---------------------------------------------------------------------
    ](img/file1139.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![--------------------------------------------------------------------- -算法---9:-量子--近似-优化-算法-----------
    输入: 𝒜 和 ℬ. 1: 通过交替应用运算符 𝒜 1 m 和 ℬ 进行 m 轮操作，创建一个参数化的量子态 |ψ(β, γ)⟩，其中 β := (β1,...,βm
    )，γ := (γ ,...,γ )，每一轮的持续时间由参数 β 和 γ 分别指定： i i ( ⊗n) |ψ (β, γ)⟩ = e− iβm𝒜e −iγmℬ
    ⋅⋅⋅e−iβ2𝒜e− iγ2ℬe−iβ1𝒜e −iγ1ℬ H ⊗n |0⟩ 。 2: 对所得量子态进行计算基（z基）测量，返回一个候选解。重复上述量子态准备和测量过程，从返回的解样本中统计估计成本函数
    f 的期望值 ⟨f⟩ = ⟨ψ(β,γ)|ℬ |ψ(β,γ )⟩（如第10章所述）。 3: 然后，可以在经典优化循环中使用更新后的时间参数 β 和 γ 进行上述步骤的重复——这是算法的变分部分——目标是最小化成本函数
    ⟨f⟩ 的期望值。结果：算法返回找到的最佳解。 ---------------------------------------------------------------------
    ](img/file1139.jpg)'
- en: 'It is important to apply operators exp(−i*β*𝒜) and exp(−i*γ*ℬ) alternately
    to ensure that we are not trapped in a local minimum. It is also important that 𝒜
    and ℬ do not commute  [[272](Biblography.xhtml#XStechly2020)]. Indeed, by applying
    only exp(−i*γ*ℬ), we are facing ending in an eigenstate of the phase Hamiltonian.
    If this happens, we will be trapped there: any further application of a linear
    operator to its eigenvector may change its length but not its direction. The same
    applies to alternating between two commuting operators: if 𝒜 and ℬ commute, then
    we can come up with a set of basis states that are eigenstates of both 𝒜 and ℬ,
    and once we get into one of these eigenstates we remain trapped in it. However,
    since *σ*[x] and *σ*[z] do not commute, there is always a chance to escape from
    the local minimum.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 交替应用运算符 exp(−i*β*𝒜) 和 exp(−i*γ*ℬ) 以确保我们不会陷入局部最小值是非常重要的。同样重要的是，𝒜 和 ℬ 必须不对易 [[272](Biblography.xhtml#XStechly2020)]。事实上，只有应用
    exp(−i*γ*ℬ) 时，我们可能会陷入相位哈密顿量的本征态。如果发生这种情况，我们将被困在那里：对其本征向量进一步应用线性运算符可能会改变其长度，但不会改变其方向。对于两个对易算符交替操作的情况也是如此：如果
    𝒜 和 ℬ 对易，则可以得到一组同时是 𝒜 和 ℬ 本征态的基态，一旦进入这些本征态中的一个，就会被困在其中。然而，由于 *σ*[x] 和 *σ*[z] 不对易，总是有机会逃离局部最小值。
- en: 'The ongoing exploration of QAOA potential started with the foundational paper
    by Farhi, Goldstone, and Gutmann  [[96](Biblography.xhtml#XFarhi2014)] where it
    outperformed classical algorithms on the Max-Cut problem on connected 3-regular
    graphs. A regular graph is one where each vertex has the same number of neighbours.
    In the case of a 3-regular graph (also known as a *cubic* graph), each vertex
    is connected with three other vertices. We consider the Max-Cut problem in the
    next section in its most general formulation. It was a decisive result that prompted
    active development of classical algorithms and, eventually, one with asymptotically
    much better performance was constructed by Barak *et al*  [[25](Biblography.xhtml#XBarak2015)].
    This, in turn, triggered further investigations: the performance comparison between
    QAOA and the best classical algorithms was studied by Hastings in  [[128](Biblography.xhtml#XHastings2019)],
    and Bravyi, Kliesch, Koenig and Tang  [[44](Biblography.xhtml#XBravyi2019)] established
    that the locality and the symmetry of QAOA severely limit its performance. To
    overcome these limitations, they proposed a non-local version that significantly
    outperforms standard QAOA for a frustrated Ising model on random 3-regular graphs.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: QAOA 潜力的持续探索始于 Farhi、Goldstone 和 Gutmann 的基础性论文 [[96](Biblography.xhtml#XFarhi2014)]，该论文展示了
    QAOA 在连通的 3-正则图上的 Max-Cut 问题中超越了经典算法。正则图是指每个顶点都有相同数量的邻居。在 3-正则图（也称为 *立方* 图）的情况下，每个顶点与三个其他顶点相连。我们在下一节中考虑
    Max-Cut 问题的最一般形式。这一决定性结果促使了经典算法的积极发展，最终由 Barak *et al* [[25](Biblography.xhtml#XBarak2015)]
    构建了一个渐近性能更好的算法。这反过来又引发了进一步的研究：Hastings 在 [[128](Biblography.xhtml#XHastings2019)]
    中研究了 QAOA 和最佳经典算法之间的性能比较，而 Bravyi、Kliesch、Koenig 和 Tang [[44](Biblography.xhtml#XBravyi2019)]
    证明了 QAOA 的局部性和对称性严重限制了其性能。为了克服这些局限性，他们提出了一种非局部版本，它在随机 3-正则图上的挫败 Ising 模型中显著优于标准
    QAOA。
- en: 11.4 The Max-Cut Problem
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.4 Max-Cut 问题
- en: The Max-Cut problem is one of the special cases of the graph partitioning problem
    introduced in Chapter [3](Chapter_3.xhtml#x1-630003). The objective is to divide
    the vertices of the graph into two groups such that either the maximum possible
    number of edges going between the two groups are "cut" (if all edges have the
    same weight) or the total weight of these edges is maximised (if they have different
    weights).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Max-Cut 问题是图划分问题的特殊情况之一，该问题在第 [3](Chapter_3.xhtml#x1-630003) 章中有所介绍。其目标是将图的顶点分成两组，使得要么最大数量的边在这两组之间被“切割”（如果所有边的权重相同），要么这些边的总权重最大化（如果边的权重不同）。
- en: The problem of maximisation of the total weight (or number of edges being cut)
    can be formulated as the minimisation of a cost function, which is the sum of
    the costs of all individual edges. Each individual cost *c*[ij], associated with
    the edge connecting vertices *i* and *j*, is given by
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 总权重（或切割边的数量）最大化的问题可以表述为代价函数的最小化，该代价函数是所有单独边的代价之和。与连接顶点 *i* 和 *j* 的边相关的每个单独代价
    *c*[ij] 由以下公式给出：
- en: '| ![ 1 cij = -wij(1 − sisj), 2 ](img/file1140.jpg) |  |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| ![ 1 cij = -wij(1 − sisj), 2 ](img/file1140.jpg) |  |'
- en: where *s*[i] and *s*[j] are classical spin variables taking values {−1*,*+1}
    and *w*[ij] is the weight associated with the edge connecting vertices *i* and *j*.
    The two groups of vertices are those where the spin variables take the same values
    (either −1 or +1). We can see from ([11.4](#x1-2210004)) that when *s*[i] and *s*[j]
    have the same sign, the cost *c*[ij] is zero; however, when *s*[i] and *s*[j]
    have opposite signs, the cost *c*[ij] is equal to the weight *w*[ij].
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *s*[i] 和 *s*[j] 是经典自旋变量，取值为 {−1,*+1}，而 *w*[ij] 是与连接顶点 *i* 和 *j* 的边相关联的权重。两个顶点组是指自旋变量取相同值的组（要么是
    −1，要么是 +1）。从 ([11.4](#x1-2210004)) 中可以看出，当 *s*[i] 和 *s*[j] 的符号相同，代价 *c*[ij] 为零；然而，当
    *s*[i] 和 *s*[j] 的符号相反时，代价 *c*[ij] 等于权重 *w*[ij]。
- en: The cost function for the whole graph then has the form
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 整个图的代价函数具有以下形式：
- en: '| ![ ∑ 1 L (s) = 2wij(1− sisj), {ij}∈G ](img/file1141.jpg) |  |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| ![ ∑ 1 L (s) = 2wij(1− sisj), {ij}∈G ](img/file1141.jpg) |  |'
- en: where s := (*s*[1]*,…,s*[n]) is the set of decision variables associated with
    the *n*-node graph *G* and the sum goes over all pairs of nodes connected by the
    graph edges.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 s := (*s*[1]*,…,s*[n]) 是与 *n* 节点图 *G* 相关联的决策变量集，求和遍历所有通过图边连接的节点对。
- en: 'There are many possible applications of the Max-Cut problem in finance, for
    example *client clustering* or *client segmentation*, where the task can be formulated
    by creating a graph containing a node for each client and an edge between each
    pair of clients. The weight of an edge connecting any two clients is determined
    by the relative closeness of clients’ characteristics: the closer the clients,
    the smaller the weight of the edge that connects them. The clusters that are formed
    by finding maximum weight cuts have the property that clients in one cluster are
    more dissimilar from clients in other clusters.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Max-Cut问题在金融中的应用有很多种，例如*客户聚类*或*客户细分*，其中任务可以通过创建一个包含每个客户的节点和每对客户之间的边的图来进行建模。连接任意两位客户的边的权重由客户特征的相对接近程度决定：客户越接近，连接它们的边的权重越小。通过找到最大权重割得到的集群具有这样的性质：同一集群中的客户与其他集群中的客户更加不同。
- en: However, the flagship application of Max-Cut in finance is portfolio optimisation.
    Dees, Stanković, Constantinides, and Mandi  [[81](Biblography.xhtml#XDees2019)]
    have shown that the graph-theoretic portfolio partitioning technique can help
    devise robust and tractable asset allocation schemes by virtue of a rigorous graph
    framework for considering smaller, computationally feasible, and economically
    meaningful clusters of assets, based on graph cuts. Barkoutsos, Nannicini, Robert,
    Tavernelli, and Woerner  [[26](Biblography.xhtml#XBarkoutsos2019)] improved variational
    quantum optimisation using a Conditional Value-at-Risk technique – ubiquitous
    in financial risk management. A portfolio optimisation QAOA use case addressed
    by solving the maximum independent set problem on a quantum simulator was presented
    in  [[276](Biblography.xhtml#XSuchara2021)]. It is also necessary to mention portfolio
    rebalancing experiments using the Quantum Alternating Operator Ansatz conducted
    by Hodson, Ruck, Ong, Garvin, and Dulma  [[138](Biblography.xhtml#XHodson2019)].
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Max-Cut在金融领域的代表性应用是投资组合优化。Dees、Stanković、Constantinides 和 Mandi [[81](Biblography.xhtml#XDees2019)]
    已经展示了，基于图切分的图论投资组合分割技术能够通过严格的图框架帮助设计出稳健且可处理的资产配置方案，考虑到较小的、计算上可行的、且在经济上有意义的资产集群。Barkoutsos、Nannicini、Robert、Tavernelli
    和 Woerner [[26](Biblography.xhtml#XBarkoutsos2019)] 通过使用条件价值风险（CVaR）技术改进了变分量子优化，该技术在金融风险管理中广泛使用。一个投资组合优化的QAOA应用实例，通过在量子模拟器上求解最大独立集问题进行了展示，见[[276](Biblography.xhtml#XSuchara2021)]。此外，还需要提到Hodson、Ruck、Ong、Garvin
    和 Dulma [[138](Biblography.xhtml#XHodson2019)] 进行的使用量子交替算符假设的投资组合再平衡实验。
- en: 11.4.1 QAOA gates
  id: totrans-61
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 11.4.1 QAOA 门
- en: The mixing Hamiltonian 𝒜 and the phase Hamiltonian ℬ corresponding to the cost
    function ([11.4](#x1-2210004)) read
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 对应于成本函数（[11.4](#x1-2210004)）的混合哈密顿量 𝒜 和相位哈密顿量 ℬ 表示为
- en: '| ![ n ∑ i ∑ 1- ( i j) 𝒜 = σx and ℬ = 2 wij 1− σ zσ z , i=1 {ij}∈G ](img/file1142.jpg)
    |  |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| ![ n ∑ i ∑ 1- ( i j) 𝒜 = σx 和 ℬ = 2 wij 1− σ zσ z , i=1 {ij}∈G ](img/file1142.jpg)
    |  |'
- en: where the spin variables *s* are replaced by the corresponding Pauli operators *σ*.
    We therefore need to find the quantum gate representation of the operators
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，旋转变量*s*被对应的泡利算符*σ*替代。因此，我们需要找到这些算符的量子门表示
- en: '| ![ ( ) ( i) 1 i j exp − iβσx and exp −2-iγσ zσz . ](img/file1143.jpg) |  |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| ![ ( ) ( i) 1 i j exp − iβσx 和 exp −2-iγσ zσz . ](img/file1143.jpg) |  |'
- en: 'To do so, we require the following (see also Lemma [1](Chapter_1.xhtml#x1-30002r1),
    albeit with a slightly different proof):'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们需要以下内容（参见引理[1](Chapter_1.xhtml#x1-30002r1)，虽然证明略有不同）：
- en: '**Theorem 9.** *With *ℐ *denoting the identity operator, the following holds
    for any* *unitary Hermitian operator *ℋ *and any* *𝜃* ∈ℝ*:*'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**定理 9.** *假设*ℐ *表示单位算符，以下对于任何* *单位厄米算符*ℋ *和任意* *𝜃* ∈ℝ*成立：*'
- en: '| ![ ( ) ( ) ( ) 1- 𝜃- 𝜃- R 𝜃(ℋ) ≡ exp − 2i𝜃ℋ = cos 2 ℐ − isin 2 ℋ. ](img/file1144.jpg)
    |  |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| ![ ( ) ( ) ( ) 1- 𝜃- 𝜃- R 𝜃(ℋ) ≡ exp − 2i𝜃ℋ = cos 2 ℐ − isin 2 ℋ. ](img/file1144.jpg)
    |  |'
- en: '*Proof.* Since ℋ is a unitary Hermitian operator its eigenvalues are +1 and
    −1 (Chapter [1](Chapter_1.xhtml#x1-220001)). Let 𝒫[±] be projectors onto the eigenspace
    of eigenvalues ±1 respectively, so that'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*证明.* 由于ℋ是单位厄米算符，其本征值为+1和−1（见第[1](Chapter_1.xhtml#x1-220001)章）。令 𝒫[±] 为分别投影到本征值±1的本征空间的投影算符，因此'
- en: '| ![ℐ = 𝒫+ + 𝒫 − , ℋ = 𝒫+ − 𝒫− . ](img/file1145.jpg) |  |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| ![ℐ = 𝒫+ + 𝒫 − , ℋ = 𝒫+ − 𝒫− . ](img/file1145.jpg) |  |'
- en: 'When a function (in this case *R*[𝜃]) is applied to a matrix (in this case
    ℋ) it is applied to each of the eigenvalues:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个函数（在本例中为*R*[𝜃]）应用到一个矩阵（在本例中为ℋ）时，它应用到矩阵的每一个本征值上：
- en: '| ![ ( ) ( ) R (ℋ ) = exp − 1-i𝜃(+1 ) 𝒫 + exp − 1i𝜃 (− 1) 𝒫 𝜃 2 + 2 − ( 1 )
    ( 1 ) = exp − --i𝜃 𝒫+ + exp -i𝜃 𝒫− . 2 2 ](img/file1146.jpg) |  |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| ![ ( ) ( ) R (ℋ ) = exp − 1-i𝜃(+1 ) 𝒫 + exp − 1i𝜃 (− 1) 𝒫 𝜃 2 + 2 − ( 1 )
    ( 1 ) = exp − --i𝜃 𝒫+ + exp -i𝜃 𝒫− . 2 2 ](img/file1146.jpg) |  |'
- en: From ([11.4.1](#x1-222001r1)) we have
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 从 ([11.4.1](#x1-222001r1)) 我们得到：
- en: '| ![ 1 1 𝒫+ = -(ℐ + ℋ ) and 𝒫− = --(ℐ − ℋ ). 2 2 ](img/file1147.jpg) |  |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| ![ 1 1 𝒫+ = -(ℐ + ℋ ) and 𝒫− = --(ℐ − ℋ ). 2 2 ](img/file1147.jpg) |  |'
- en: Substituting ([11.4.1](#x1-222001r1)) into ([11.4.1](#x1-222001r1)) yields
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 将 ([11.4.1](#x1-222001r1)) 代入 ([11.4.1](#x1-222001r1)) 得到：
- en: '| *R*[𝜃](ℋ) | = ![1- 2](img/file1148.jpg)exp![( ) 1- − 2i𝜃](img/file1149.jpg)(ℐ
    + ℋ) + ![1- 2](img/file1150.jpg)exp![( ) 1- 2i𝜃](img/file1151.jpg)(ℐ−ℋ) |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| *R*[𝜃](ℋ) | = ![1- 2](img/file1148.jpg)exp![( ) 1- − 2i𝜃](img/file1149.jpg)(ℐ
    + ℋ) + ![1- 2](img/file1150.jpg)exp![( ) 1- 2i𝜃](img/file1151.jpg)(ℐ−ℋ) |'
- en: '|  | = ![1- 2](img/file1152.jpg)![[ ( ) ( )] exp − 1i𝜃 + exp 1i𝜃 2 2](img/file1153.jpg)ℐ
    + ![1- 2](img/file1154.jpg)![[ ( ) ( )] exp − 1i𝜃 − exp 1i𝜃 2 2](img/file1155.jpg)ℋ
    |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '|  | = ![1- 2](img/file1152.jpg)![[ ( ) ( )] exp − 1i𝜃 + exp 1i𝜃 2 2](img/file1153.jpg)ℐ
    + ![1- 2](img/file1154.jpg)![[ ( ) ( )] exp − 1i𝜃 − exp 1i𝜃 2 2](img/file1155.jpg)ℋ
    |'
- en: '|  | = cos![( ) 𝜃- 2](img/file1156.jpg)ℐ− isin![( ) 𝜃- 2](img/file1157.jpg)ℋ*.*
    |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '|  | = cos![( ) 𝜃- 2](img/file1156.jpg)ℐ− isin![( ) 𝜃- 2](img/file1157.jpg)ℋ*.*
    |'
- en: □
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: □
- en: 'We can use ([9](#x1-222001r9)) to write down expressions for the operators ([11.4.1](#x1-2220001))
    in matrix form. We start with the first operator:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 ([9](#x1-222001r9)) 来写下矩阵形式的算符表达式 ([11.4.1](#x1-2220001))。我们从第一个算符开始：
- en: '| ![exp(− iβ σx) = cos(β)I⌊ − isin⌋(β)X ⌊ ⌋ = cos(β)⌈1 0⌉ − isin(β)⌈0 1⌉ 0
    1 1 0 ⌊ ⌋ cos(β ) − isin(β) = ⌈ ⌉. − isin(β) cos(β ) ](img/file1158.jpg) |  |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| ![exp(− iβ σx) = cos(β)I⌊ − isin⌋(β)X ⌊ ⌋ = cos(β)⌈1 0⌉ − isin(β)⌈0 1⌉ 0
    1 1 0 ⌊ ⌋ cos(β ) − isin(β) = ⌈ ⌉. − isin(β) cos(β ) ](img/file1158.jpg) |  |'
- en: Since the operator R[X](*𝜃*) has the following matrix representation
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 由于算符 R[X](*𝜃*) 的矩阵表示如下：
- en: '| ![ ⌊ ⌋ (𝜃) (𝜃) RX(𝜃) = ⌈ cos 2( ) − isin( 2) ⌉ , − isin 𝜃2 cos 𝜃2 ](img/file1159.jpg)
    |  |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| ![ ⌊ ⌋ (𝜃) (𝜃) RX(𝜃) = ⌈ cos 2( ) − isin( 2) ⌉ , − isin 𝜃2 cos 𝜃2 ](img/file1159.jpg)
    |  |'
- en: (see, for example, Chapter [6](Chapter_6.xhtml#x1-1190006) or Theorem [9](#x1-222001r9)),
    we have
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: （见例如，[第6章](Chapter_6.xhtml#x1-1190006) 或 定理 [9](#x1-222001r9)），我们得到：
- en: '![exp(− iβ σx) = RX(2β ), ](img/file1160.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![exp(− iβ σx) = RX(2β ), ](img/file1160.jpg)'
- en: so that opeator exp(−i*βσ*[x]^i) should be represented in the circuit by the
    gate R[X](2*β*) placed on the quantum register *i*.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，算符 exp(−i*βσ*[x]^i) 应该在电路中由量子寄存器 *i* 上的门 R[X](2*β*) 来表示。
- en: 'We can proceed now with the gate representation of operator exp![(− 1iγσ σ
    ) 2 z z](img/file1161.jpg), where *σ*[z]*σ*[z] represents the tensor product of
    two *σ*[z] operators acting on two different qubits:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以继续处理算符 exp![(− 1iγσ σ ) 2 z z](img/file1161.jpg) 的门表示，其中 *σ*[z]*σ*[z]
    代表两个作用于不同量子比特的 *σ*[z] 算符的张量积：
- en: '| ![ ( 1 ) (γ ) ( γ) exp − -iγσzσz = cos -- I ⊗ I − isin -- Z⊗ Z 2 ⌊ ⌋2 ⌊ 2
    ⌋ 1 0 0 0 1 0 0 0 ( )&#124;&#124; &#124;&#124; ( ) &#124;&#124; &#124;&#124; =
    cos γ- &#124;&#124; 0 1 0 0 &#124;&#124;− isin γ- &#124;&#124;0 − 1 0 0&#124;&#124;
    2 &#124; 0 0 1 0 &#124; 2 &#124;0 0 − 1 0&#124; ⌈ ⌉ ⌈ ⌉ 0 0 0 1 0 0 0 1 ⌊ (γ)
    (γ) ⌋ &#124;cos 2 − isin 2 ( ) 0 ( ) 0 0 &#124; &#124;&#124; 0 cos γ2 + isin γ2
    0 0 &#124;&#124; = &#124;&#124; (γ ) (γ) &#124;&#124; ⌈ 0 0 cos 2 + isin 2 ( )
    0 ( )⌉ 0 0 0 cos γ − isin γ ⌊ ⌋ 2 2 e−iγ∕2 0 0 0 &#124;&#124; iγ∕2 &#124;&#124;
    = &#124;&#124; 0 e 0 0 &#124;&#124; . &#124;⌈ 0 0 eiγ∕2 0 &#124;⌉ −iγ∕2 0 0 0
    e ](img/file1162.jpg) |  |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| ![ ( 1 ) (γ ) ( γ) exp − -iγσzσz = cos -- I ⊗ I − isin -- Z⊗ Z 2 ⌊ ⌋2 ⌊ 2
    ⌋ 1 0 0 0 1 0 0 0 ( )&#124;&#124; &#124;&#124; ( ) &#124;&#124; &#124;&#124; =
    cos γ- &#124;&#124; 0 1 0 0 &#124;&#124;− isin γ- &#124;&#124;0 − 1 0 0&#124;&#124;
    2 &#124; 0 0 1 0 &#124; 2 &#124;0 0 − 1 0&#124; ⌈ ⌉ ⌈ ⌉ 0 0 0 1 0 0 0 1 ⌊ (γ)
    (γ) ⌋ &#124;cos 2 − isin 2 ( ) 0 ( ) 0 0 &#124;&#124; &#124;&#124; 0 cos γ2 +
    isin γ2 0 0 &#124;&#124; = &#124;&#124; (γ ) (γ) &#124;&#124; ⌈ 0 0 cos 2 + isin
    2 ( ) 0 ( )⌉ 0 0 0 cos γ − isin γ ⌊ ⌋ 2 2 e−iγ∕2 0 0 0 &#124;&#124; iγ∕2 &#124;&#124;
    = &#124;&#124; 0 e 0 0 &#124;&#124; . &#124;⌈ 0 0 eiγ∕2 0 &#124;⌉ −iγ∕2 0 0 0
    e ](img/file1162.jpg) |  |'
- en: Where we used the fact that
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们利用了以下事实：
- en: '![ ( 1 ) ( γ) (γ ) exp − -iγ = cos -- − isin -- 2 2 2 ](img/file1163.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![ ( 1 ) ( γ) (γ ) exp − -iγ = cos -- − isin -- 2 2 2 ](img/file1163.jpg)'
- en: and
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 和
- en: '![ ( 1 ) ( γ) (γ ) exp -iγ = cos -- + isin -- . 2 2 2 ](img/file1164.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![ ( 1 ) ( γ) (γ ) exp -iγ = cos -- + isin -- . 2 2 2 ](img/file1164.jpg)'
- en: 'The following lemma provides a quantum circuit for the operator exp![( 1 )
    −2iγσzσz](img/file1165.jpg):'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下引理提供了算符 exp![( 1 ) −2iγσzσz](img/file1165.jpg) 的量子电路表示：
- en: '**Lemma 8.** *The operator* exp![( ) − 12iγ σizσjz](img/file1166.jpg) *can
    be represented by the* *following circuit:*'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**引理 8.** *算符* exp![( ) − 12iγ σizσjz](img/file1166.jpg) *可以通过以下电路表示：*'
- en: '![](img/file1167.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/file1167.jpg)'
- en: '*Proof.* From ([6.3.3](Chapter_6.xhtml#x1-130014r3)), we can write'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '*证明。* 从 ([6.3.3](Chapter_6.xhtml#x1-130014r3))，我们可以写出：'
- en: '| ![ ⌊ ⌋ ⌊ ⌋ e−iγ∕2 0 −iγ∕2 1 0 RZ(γ ) = ⌈ iγ∕2⌉ = e ⌈ iγ⌉ . 0 e 0 e ](img/file1168.jpg)
    |  |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| ![ ⌊ ⌋ ⌊ ⌋ e−iγ∕2 0 −iγ∕2 1 0 RZ(γ ) = ⌈ iγ∕2⌉ = e ⌈ iγ⌉ . 0 e 0 e ](img/file1168.jpg)
    |  |'
- en: The multiplier exp![( 1 ) − 2iγ](img/file1169.jpg) is an unobservable global
    phase and can be ignored. Now,
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 乘子exp![( 1 ) − 2iγ](img/file1169.jpg)是一个不可观测的全球相位，可以忽略。现在，
- en: '| ![ ⌊ ⌋ 1 0 0 0 ⌊ ⌋ ⌊ ⌋ &#124; &#124; ⌈1 0⌉ ⌈1 0 ⌉ &#124;&#124; 0 eiγ 0 0
    &#124;&#124; RZ(γ )⊗ RZ(γ) = iγ ⊗ iγ = &#124;&#124; iγ &#124;&#124; . 0 e 0 e
    ⌈ 0 0 e 0 ⌉ 0 0 0 e2iγ ](img/file1170.jpg) |  |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| ![ ⌊ ⌋ 1 0 0 0 ⌊ ⌋ ⌊ ⌋ &#124; &#124; ⌈1 0⌉ ⌈1 0 ⌉ &#124;&#124; 0 eiγ 0 0
    &#124;&#124; RZ(γ )⊗ RZ(γ) = iγ ⊗ iγ = &#124;&#124; iγ &#124;&#124; . 0 e 0 e
    ⌈ 0 0 e 0 ⌉ 0 0 0 e2iγ ](img/file1170.jpg) |  |'
- en: Finally, the matrix representation of the CR[z](−2*γ*) gate is
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，CR[z](−2*γ*)门的矩阵表示为
- en: '| ![ ⌊ ⌋ &#124; 1 0 0 0 &#124; &#124; 0 1 0 0 &#124; CRZ(− 2γ ) = &#124;&#124;
    &#124;&#124; , &#124;⌈ 0 0 1 0 &#124;⌉ 0 0 0 e− 2iγ ](img/file1171.jpg) |  |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| ![ ⌊ ⌋ &#124; 1 0 0 0 &#124; &#124; 0 1 0 0 &#124; CRZ(− 2γ ) = &#124;&#124;
    &#124;&#124; , &#124;⌈ 0 0 1 0 &#124;⌉ 0 0 0 e− 2iγ ](img/file1171.jpg) |  |'
- en: and the matrix representation of the whole circuit shown in the lemma is
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 和整个电路的矩阵表示如引理所示
- en: '| ![⌊ ⌋ ⌊ ⌋ ⌊ ⌋ 1 0 0 0 1 0 0 0 e− iγ∕2 0 0 0 &#124;&#124; iγ &#124;&#124;
    &#124;&#124; &#124;&#124; &#124;&#124; iγ∕2 &#124;&#124; &#124;&#124;0 e 0 0 &#124;&#124;
    &#124;&#124;0 1 0 0 &#124;&#124; = eiγ∕2&#124;&#124; 0 e 0 0 &#124;&#124;. &#124;0
    0 eiγ 0 &#124; &#124;0 0 1 0 &#124; &#124; 0 0 eiγ∕2 0 &#124; ⌈ 2iγ⌉ ⌈ −2iγ⌉ ⌈
    − iγ∕2⌉ 0 0 0 e 0 0 0 e 0 0 0 e ](img/file1172.jpg) |  |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| ![⌊ ⌋ ⌊ ⌋ ⌊ ⌋ 1 0 0 0 1 0 0 0 e− iγ∕2 0 0 0 &#124;&#124; iγ &#124;&#124;
    &#124;&#124; &#124;&#124; &#124;&#124; iγ∕2 &#124;&#124; &#124;&#124;0 e 0 0 &#124;&#124;
    &#124;&#124;0 1 0 0 &#124;&#124; = eiγ∕2&#124;&#124; 0 e 0 0 &#124;&#124;. &#124;0
    0 eiγ 0 &#124; &#124;0 0 1 0 &#124; &#124; 0 0 eiγ∕2 0 &#124; ⌈ 2iγ⌉ ⌈ −2iγ⌉ ⌈
    − iγ∕2⌉ 0 0 0 e 0 0 0 e 0 0 0 e ](img/file1172.jpg) |  |'
- en: Again, the global phase can be ignored and we arrive at the same matrix expression
    we obtained for exp![( ) − 12iγσz σz](img/file1173.jpg). □
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，全球相位可以忽略，我们得到了与exp![( ) − 12iγσz σz](img/file1173.jpg)相同的矩阵表达式。□
- en: 11.4.2 QAOA circuit
  id: totrans-105
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 11.4.2 QAOA电路
- en: As pointed out in Chapters [8](Chapter_8.xhtml#x1-1620008) and [9](Chapter_9.xhtml#x1-1850009),
    existing quantum processors often have limited qubit connectivity, so that we
    need to use a particular embedding scheme in order to map the Max-Cut graph onto
    the QPU graph. The simplest case is a one-to-one mapping of the graph nodes and
    the connectivity edges. Figure [11.2](#11.2) displays one such graph (implemented
    in Rigetti’s Aspen system) consisting of eight nodes (embedded in qubits 1*,…,*8)
    and eight edges. Nodes 1, 3, 5, and 7 each have one connection and nodes 2, 4,
    6, and 8 each have three connections.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在章节[8](Chapter_8.xhtml#x1-1620008)和[9](Chapter_9.xhtml#x1-1850009)中指出的，现有的量子处理器通常具有有限的量子比特连通性，因此我们需要使用特定的嵌入方案，将Max-Cut图映射到QPU图中。最简单的情况是图节点和连通边的一对一映射。图[11.2](#11.2)展示了这样的一个图（在Rigetti的Aspen系统中实现），由八个节点（嵌入在量子比特1*，…，*8中）和八条边组成。节点1、3、5和7各有一个连接，而节点2、4、6和8各有三个连接。
- en: '![Figure 11.2: Embedding of the Max-Cut optimisation problem on Rigetti’s Aspen
    system. ](img/file1174.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图11.2：Max-Cut优化问题在Rigetti的Aspen系统中的嵌入。](img/file1174.jpg)'
- en: 'Figure 11.2: Embedding of the Max-Cut optimisation problem on Rigetti’s Aspen
    system.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2：Max-Cut优化问题在Rigetti的Aspen系统中的嵌入。
- en: The corresponding QAOA circuit is shown in Figure [11.3](#11.3).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 对应的QAOA电路如图[11.3](#11.3)所示。
- en: '![Figure 11.3: QAOA circuit for the Max-Cut problem. ](img/file1175.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图11.3：Max-Cut问题的QAOA电路。](img/file1175.jpg)'
- en: 'Figure 11.3: QAOA circuit for the Max-Cut problem.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.3：Max-Cut问题的QAOA电路。
- en: The circuit consists of four distinct layers. The first one is a layer of Hadamard
    gates creating an equal superposition of states ![|0⟩](img/file1176.jpg) and ![|1
    ⟩](img/file1177.jpg) – transformation of the basis states ![|0⟩](img/file1178.jpg)
    into the basis states ![|+ ⟩](img/file1179.jpg). The second layer represents the
    action of the phase Hamiltonian controlled by the adjustable parameter *γ*. The
    third layer represents the action of the mixing Hamiltonian controlled by the
    adjustable parameter *β*. The final layer consists of measurement operators. The
    second and third layers can be applied multiple times with different values of
    parameters *γ* and *β*.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 该电路由四个不同的层组成。第一层是一个Hadamard门层，创建了状态![|0⟩](img/file1176.jpg)和![|1⟩](img/file1177.jpg)的均等叠加——将基态![|0⟩](img/file1178.jpg)转化为基态![|+⟩](img/file1179.jpg)。第二层表示由可调参数*γ*控制的相位哈密顿量的作用。第三层表示由可调参数*β*控制的混合哈密顿量的作用。最后一层由测量算符组成。第二层和第三层可以多次应用，且参数*γ*和*β*的值可以不同。
- en: The optimal solution found by the QAOA using `Qiskit` quantum simulator for
    the case of equal weights (*w*[ij] = 1 for all {*i,j*}∈ *G*) is shown in Figure [11.4](#11.4).
    The optimal solution reads as the bitstring 10011001, and is represented by the
    dashed curve that separates nodes into two equal subsets and cuts across all edges
    of the graph.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`Qiskit`量子模拟器通过QAOA找到的最佳解决方案，针对权重相等的情况（*w*[ij] = 1，对于所有{*i,j*}∈ *G*），如图[11.4](#11.4)所示。最佳解为比特串10011001，并由虚线曲线表示，将节点分成两个相等的子集并切割所有图的边。
- en: '![Figure 11.4: Visualisation of the Max-Cut problem solution. ](img/file1180.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图11.4：Max-Cut问题解决方案的可视化。](img/file1180.jpg)'
- en: 'Figure 11.4: Visualisation of the Max-Cut problem solution.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.4：Max-Cut问题解决方案的可视化。
- en: Here, the graph nodes (qubits) {1*,*4*,*5*,*8} belong to group "1" and the graph
    nodes {2*,*3*,*6*,*7} belong to group "0".
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，图中的节点（量子比特）{1*,*4*,*5*,*8}属于组“1”，而节点{2*,*3*,*6*,*7}属于组“0”。
- en: In the case of unequal weights the circuit layout remains the same but the adjustable
    gate parameters reflect the relative magnitude of the weights assigned to different
    edges. For example, if the weight assigned to the connection between nodes 1 and
    2 is increased from 1 to 5 and all other weights remain equal to 1, then the phase
    Hamiltonian term that corresponds to the connection between nodes 1 and 2 changes
    from exp![(− 1iγσ σ ) 2 z z](img/file1181.jpg) to exp![( ) − 52iγσzσz](img/file1182.jpg),
    and the corresponding segment of the quantum circuit changes to the one shown
    in Figure [11.5](#11.5), with the rest of the circuit remaining the same.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在不等权重的情况下，电路布局保持不变，但可调门参数反映了分配给不同边的权重的相对大小。例如，如果分配给节点1和节点2之间连接的权重从1增加到5，且所有其他权重保持为1，则对应于节点1和节点2之间连接的相位哈密顿量项从exp![(−
    1iγσ σ ) 2 z z](img/file1181.jpg)变化为exp![( ) − 52iγσzσz](img/file1182.jpg)，并且量子电路的相应部分变更为图[11.5](#11.5)所示，电路的其余部分保持不变。
- en: '![Figure 11.5: Weight w12 increases from 1 to 5\. ](img/file1183.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图11.5：权重w12从1增加到5\.](img/file1183.jpg)'
- en: 'Figure 11.5: Weight *w*[12] increases from 1 to 5\.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.5：权重*w*[12]从1增加到5\。
- en: QAOA can successfully solve NP-hard combinatorial optimisation problems in their
    QUBO formulations.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: QAOA可以成功解决其QUBO形式的NP难度组合优化问题。
- en: Summary
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we studied a quantum optimisation algorithm inspired by the
    principles of adiabatic evolution of quantum systems. In this regard, QAOA can
    be seen as a quantum gate model counterpart of the AQC approach to solve classically
    hard optimisation problems.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们研究了一种受到量子系统绝热演化原理启发的量子优化算法。在这方面，QAOA可以看作是AQC方法的量子门模型对应用，用于解决经典难以处理的优化问题。
- en: We discussed the Suzuki-Trotter expansion, which provides an approximation of
    the time evolution of quantum mechanical systems and which lies at the heart of
    the algorithm. We illustrated QAOA implementation (gates and circuit) on the Max-Cut
    problem, which has many applications in finance.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了铃木-托特展开式，它提供了量子力学系统时间演化的近似，并且是算法的核心。我们展示了QAOA在Max-Cut问题上的实现（门和电路），该问题在金融领域有广泛应用。
- en: In the next chapter, we will explore the sources of power of parameterised quantum
    circuits.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨参数化量子电路的动力来源。
