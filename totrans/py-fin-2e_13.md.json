["```py\nimport pandas as pd\nx=pd.read_pickle(\"c:/temp/creditRatings3.pkl\")\nprint(x)\n       Moody's S&P Fitch  NAIC  InvestmentGrade\n0      Aaa   AAA   AAA     1                1\n1      Aa1   AA+   AA+     1                1\n2      Aa2    AA    AA     1                1\n3      Aa3   AA-   AA-     1                1\n4       A1    A+    A+     1                1\n5       A2     A     A     1                1\n6       A3    A-    A-     1                1\n7     Baa1  BBB+  BBB+     2                1\n8     Baa2   BBB   BBB     2                1\n9     Baa3  BBB-  BBB-     2                1\n10     Ba1   BB+   BB+     3                0\n11     Ba2    BB    BB     3                0\n12     Ba3   BB-   BB-     3                0\n13      B1    B+    B+     3                0\n14      B2     B     B     3                0\n15      B3    B-    B-     3                0\n```", "```py\nimport pandas as pd\nx=pd.read_pickle(\"c:/temp/migration1year.pkl\")\nprint(x.head(1))\nprint(x.tail(1))\n    Aaa   Aa1   Aa2  Aa3   A1   A2   A3  Baa1  Baa2  Baa3 ...   Ba3   B1  \\\nAaa  0.89  0.03  0.03  0.0  0.0  0.0  0.0   0.0   0.0   0.0 ...   0.0  0.0   \n      B2   B3  Caa1  Caa2  Caa3  Ca-C    WR  DEF  \nAaa  0.0  0.0   0.0   0.0   0.0   0.0  0.05  0.0  \n[1 rows x 22 columns]\n      Aaa  Aa1  Aa2  Aa3   A1   A2   A3  Baa1  Baa2  Baa3 ...   Ba3   B1   B2\\\nCa-C  0.0  0.0  0.0  0.0  0.0  0.0  0.0   0.0   0.0   0.0 ...   0.0  0.0  0.0   \n       B3  Caa1  Caa2  Caa3  Ca-C    WR  DEF  \nCa-C  0.0  0.01  0.01  0.01  0.35  0.13  0.2  \n[1 rows x 22 columns]\n```", "```py\nimport pandas as pd\nx=pd.read_pickle(\"c:/temp/migration5year.pkl\")\nprint(x.head(1))\nprint(x.tail(1))\n    Aaa   Aa1  Aa2   Aa3    A1    A2   A3  Baa1  Baa2  Baa3 ...   Ba3   B1  \\\nAaa  0.56  0.07  0.1  0.03  0.01  0.01  0.0   0.0   0.0   0.0 ...   0.0  0.0   \n      B2   B3  Caa1  Caa2  Caa3  Ca-C   WR  DEF  \nAaa  0.0  0.0   0.0   0.0   0.0   0.0  0.2  0.0  \n[1 rows x 22 columns]\n      Aaa  Aa1  Aa2  Aa3   A1   A2   A3  Baa1  Baa2  Baa3  ...   Ba3   B1  \\\nCa-C  0.0  0.0  0.0  0.0  0.0  0.0  0.0   0.0   0.0   0.0  ...   0.0  0.0   \n        B2    B3  Caa1  Caa2  Caa3  Ca-C    WR   DEF  \nCa-C  0.02  0.02  0.01  0.01  0.01  0.04  0.43  0.46  \n```", "```py\nimport pandas as pd\nx=pd.read_pickle(\"c:/temp/creditSpread2014.pkl\")\nprint(x.head())\nprint(x.tail())\n  Rating     1     2     3     5     7    10     30\n0  Aaa/AAA   5.0   8.0  12.0  18.0  28.0  42.0   65.0\n1  Aa1/AA+  11.2  20.0  27.0  36.6  45.2  56.8   81.8\n2   Aa2/AA  16.4  32.8  42.6  54.8  62.8  71.2   97.8\n3  Aa3/AA-  21.6  38.6  48.6  59.8  67.4  75.2   99.2\n4    A1/A+  26.2  44.0  54.2  64.6  71.4  78.4  100.2\n               Rating        1        2        3        5        7       10  \\\n13              B1/B+  383.600  409.600  431.400  455.600  477.600  500.800   \n14               B2/B  455.800  481.600  505.200  531.000  555.400  581.400   \n15              B3/B-  527.800  553.800  579.400  606.400  633.600  661.800   \n16           Caa/CCC+  600.000  626.000  653.000  682.000  712.000  743.000   \n17  US Treasury Yield    0.132    0.344    0.682    1.582    2.284    2.892\n```", "```py\nimport pandas as pd\nx=pd.read_pickle(\"c:/temp/moodyAAAyield.p\")\nprint(x.head())\nprint(x.tail())\n```", "```py\nimport scipy as sp\nimport pandas as pd\nimport scipy.stats as stats\nfrom scipy import log,sqrt,exp\n# input area \nD=30\\.            # debt\nE=70\\.            # equity \nT=1\\.             # maturity \nr=0.07           # risk-free\nsigmaE=0.4       # volatility of equity \n#\n# define a function to siplify notations later \ndef N(x):\n    return stats.norm.cdf(x)\n#\ndef KMV_f(E,D,T,r,sigmaE):\n    n=10000\n    m=2000\n    diffOld=1e6     # a very big number\n    for i in sp.arange(1,10):\n        for j in sp.arange(1,m):\n            A=E+D/2+i*D/n\n            sigmaA=0.05+j*(1.0-0.001)/m\n            d1 = (log(A/D)+(r+sigmaA*sigmaA/2.)*T)/(sigmaA*sqrt(T))\n            d2 = d1-sigmaA*sqrt(T)\n            diff4A= (A*N(d1)-D*exp(-r*T)*N(d2)-E)/A  # scale by assets\n            diff4sigmaE= A/E*N(d1)*sigmaA-sigmaE     # a small number already\n            diffNew=abs(diff4A)+abs(diff4sigmaE)\n            if diffNew<diffOld:\n               diffOld=diffNew\n               output=(round(A,2),round(sigmaA,4),round(diffNew,5))\n    return output\n#\nprint(\"KMV=\", KMV_f(D,E,T,r,sigmaE))\nprint(\"KMV=\", KMV_f(D=65e3,E=110e3,T=1,r=0.01,sigmaE=0.2))\n```", "```py\nprint(\"KMV=\", KMV_f(D,E,T,r,sigmaE))\n```", "```py\nimport matplotlib.pyplot as plt\ntime=[3./12.,6./12.,2.,3.,5.,10.,30.]\nrate=[0.45,0.61,1.12,1.37,1.78,2.29,2.93]\nplt.title(\"Term Structure of Interest Rate \")\nplt.xlabel(\"Time (in years) \")\nplt.ylabel(\"Risk-free rate (%)\")\nplt.plot(time,rate)\nplt.show()\n```", "```py\nimport scipy.stats as stats\n#\ncumulativeProb=0\nprint(stats.norm.ppf(cumulativeProb))\n#\ncumulativeProb=0.5\nprint(stats.norm.ppf(cumulativeProb))\n#\ncumulativeProb=0.99\nprint(stats.norm.ppf(cumulativeProb))\n```", "```py\nimport scipy as sp\nimport scipy.stats as stats\n# input area\nR0=0.09              # initial rate\ns=0.182              # standard deviation of the risk-free rate\nnSimulation=10       # number of simulations\nsp.random.seed(123)  # fix the seed\n#\nnum=sp.random.uniform(0,1,size=nSimulation)\nz=stats.norm.ppf(num)\n#\noutput=[]\ndef BIS_f(R,s,n):\n    R=R0\n    for i in sp.arange(0,n):\n        deltaR=z[i]*s/sp.sqrt(2.)\n        logR=sp.log(R)\n        R=sp.exp(logR+deltaR)\n        output.append(round(R,5))\n    return output \n#\nfinal=BIS_f(R0,s,nSimulation)\nprint(final)\n[0.09616, 0.08942, 0.0812, 0.08256, 0.08897, 0.08678, 0.11326, 0.1205, 0.11976, 0.11561]\n```", "```py\n    import matplotlib.pyplot as plt\n    import pandas as pd\n    x=pd.read_pickle(\"c:/temp/creditSpread2014.p\")\n    print(x.head())\n        Rating     1     2     3     5     7    10     30\n    0  Aaa/AAA   5.0   8.0  12.0  18.0  28.0  42.0   65.0\n    1  Aa1/AA+  11.2  20.0  27.0  36.6  45.2  56.8   81.8\n    2   Aa2/AA  16.4  32.8  42.6  54.8  62.8  71.2   97.8\n    3  Aa3/AA-  21.6  38.6  48.6  59.8  67.4  75.2   99.2\n    4    A1/A+  26.2  44.0  54.2  64.6  71.4  78.4  100.2\n    ```"]