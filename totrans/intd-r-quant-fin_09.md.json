["```py\n> set.seed(7)\n\n```", "```py\n> e <- erdos.renyi.game(100, 0.1)\n> plot(e)\n\n```", "```py\n> graph.density(e)\n[1] 0.05434343\n> transitivity(e)\n[1] 0.05522828\n> average.path.length(e)\n[1] 2.923636\n\n```", "```py\n> set.seed(592)\n> w <- watts.strogatz.game(1, 100, 5, 0.05)\n> plot(w)\n\n```", "```py\n> graph.densi\nty(w)\n[1] 0.1010101             # approximately the same\n> transitivity(w)\n[1] 0.4626506             # much higher\n> average.path.length(w)\n[1] 2.625455              # longer\n\n```", "```py\n> we <- get.edgelist(w)> head(we, 5)\n [,1] [,2]\n[1,]    1    2\n[2,]    2   77\n[3,]    3    4\n[4,]    4    5\n[5,]    5    6\n\n```", "```py\n> data <- read.csv2(‘networktable.csv’)\n\n```", "```py\n> str(data)\n‘data.frame’:   21314 obs. of  7 variables:\n $ Bank    : int  1 1 10 18 2 21 21 3 3 30 ...\n $ Partner : int  21 42 11 24 11 11 2 24 42 12 ...\n $ Amount  : num  5 3 0.35 2 1.3 0.8 5 4 1.8 2 ...\n $ Interest: num  7.9 7.9 7.8 8 7.8 7.8 7.75 7.95 7.9 7.9 ...\n $ Year    : int  2007 2007 2007 2007 2007 2007 2007 2007 2007 ...\n $ Month   : int  1 1 1 1 1 1 1 1 1 1 ...\n $ Day     : int  3 3 3 3 3 3 3 3 3 3 ...\n\n```", "```py\n> size <- read.csv2(‘vertices.csv’)\n\n```", "```py\n> bignetwork <- graph.data.frame(data, vertices = size)\n\n```", "```py\n> is.connected(bignetwork)\n[1] TRUE\n\n```", "```py\n> table(is.multiple(bignetwork))\nFALSE  TRUE \n 1049 20265 \n\n```", "```py\n> str(is.loop(bignetwork))\nlogi [1:21314] FALSE FALSE FALSE FALSE FALSE FALSE ...\n\n```", "```py\n> snetwork <- simplify(bignetwork, edge.attr.comb = “sum”)\n\n```", "```py\n> plot(snetwork, edge.arrow.size = 0.4)\n\n```", "```py\n> communities\nNumber of communities (best split): 2\nModularity (best split): 0.02499471\nMembership vector:\n 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n 1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46\n 1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  2  1  2  2\n47 48 49 50\n 2  2  2  2\n\n```", "```py\n> monthlynetwork <- subset(data, (Year == 2008) & (Month == 9))\n\n```", "```py\n> mAmount <- with(data,+   aggregate(Amount, by = list(Month = Month, Year = Year),+   FUN = sum))\n\n```", "```py\n> plot(ts(mAmount$x, start = c(2007, 1), frequency = 12),+   ylab = ‘Amount’)\n\n```", "```py\n> ds <- sapply(2007:2010, function(year) {+    sapply(1:12, function(month) {+        mdata <- subset(data, (Year == year) & (Month == month))+        graph.density(graph.data.frame(mdata))+    })+})\n> plot(ts(as.vector(ds), start = c(2007, 1), frequency=12))\n> abline(v = 2008 + 259/366, col = ‘red’)\n\n```", "```py\n> g <- graph.data.frame(data)\n\n```", "```py\n> degree <- degree(g, normalized = TRUE)\n> between <- betweenness(g, normalized = TRUE)\n> closeness <- closeness(g, normalized = TRUE)\n> eigenv <- evcent(g, directed = TRUE)$vector\n\n```", "```py\n> norm <- function(x) x / mean(x)\n\n```", "```py\n> index <- (norm(degree) + norm(between) ++  norm(closeness) + norm(eigenv)) / 4\n> index\n 1          8         15          2         18          3\n0.91643667 0.49431153 1.06216769 1.35739158 4.56473014 1.44833480\n 26         32         35         36         37          4\n1.36048296 0.73206790 1.13569863 0.40296085 0.54702230 3.94819802\n\n```", "```py\n> hist(index)\n\n```"]