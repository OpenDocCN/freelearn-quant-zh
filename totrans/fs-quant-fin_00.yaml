- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: F# is a functional programming language that allows you to write simple code
    for complex problems. Currently, it is most commonly used in the financial sector.
    Quantitative finance makes heavy use of mathematics to model the real world. If
    you are interested in using F# for your day-to-day work or research in quantitative
    finance, this book is for you.
  prefs: []
  type: TYPE_NORMAL
- en: This book covers everything you need to know about using functional programming
    for quantitative finance. Using a functional programming language for quantitative
    finance will enable you to concentrate more on the model itself rather than the
    implementation details. Tutorials and snippets are summarized into a trading system
    throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: F#, together with .NET, provides a wide range of tools needed to produce high
    quality and efficient code, from prototyping to production. The example code snippets
    in this book can be extended into larger blocks of code, and reused and tested
    easily in a functional language. F# is considered one of the default functional
    languages of choice for financial and trading-related applications.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Introducing F# Using Visual Studio"), *Introducing
    F# Using Visual Studio*, introduces you to F# and its roots in functional languages.
    You will learn how to use F# in Visual Studio and write your first application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Learning More About F#"), *Learning More
    About F#*, teaches you more about F# as a language and illustrates the many sides
    of this paradigm language.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Financial Mathematics and Numerical Analysis"),
    *Financial Mathematics and Numerical Analysis*, introduces the toolset we''ll
    need throughout the book to implement financial models and algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Getting Started with Data Visualization"),
    *Getting Started with Data Visualization*, introduces some of the most common
    ways to use F# to visualize data and display information in a GUI.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Learning Option Pricing"), *Learning Option
    Pricing*, teaches you about options, the Black-Scholes formula and ways of exploring
    options using the tools at hand.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Exploring Volatility"), *Exploring Volatility*,
    digs deeper into the world of Black-Scholes and teaches you about implied volatility.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Getting Started with Order Types and Market
    Data"), *Getting Started with Order Types and Market Data*, takes a rather pragmatic
    approach towards finance and implements a basic order management system.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Setting Up the Trading System Project"),
    *Setting Up the Trading System Project*, builds the foundation for the project
    and shows how to connect to SQL Server and use LINQ for queries.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Trading Volatility for Profit"), *Trading
    Volatility for Profit*, studies various ways of monetizing through movements in
    volatility and the arbitrage opportunity defining the trading strategy for the
    project.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Putting the Pieces Together"), *Putting
    the Pieces Together*, shows the final steps towards the complete trading system
    using a volatility arbitrage strategy and FIX 4.2.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Apart from an interest in F# and finance, you need a computer with Visual Studio
    2012 installed. Visual Studio 2012 is the recommended IDE, supporting F# 3.0.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for anyone interested in writing F# code in the financial domain,
    with a quantitative approach. The book is mainly intended to be a source of inspiration
    and uses a lot of working code examples to illustrate both the concepts of finance
    and F# as a functional language.
  prefs: []
  type: TYPE_NORMAL
- en: At the end of the book we develop a simple trading system for volatility arbitrage.
    Details about orders and the FIX protocol are explained, as well as the theory
    behind the strategy itself. This may work as a foundation for anyone interested
    in developing their own trading system based on options and volatility.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input are shown as follows: "First we set a flag in
    the constructor, `WorkerSupportsCancellation = true`, then we check a flag every
    time we iterate the calculation."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "If you run this code, you will see a form with the title **Displaying data in
    F#**, like the one in the following screenshot."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or may have disliked. Reader feedback is important for
    us to develop titles that you really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply send an e-mail to `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book title via the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide on [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you would report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **errata** **submission** **form** link,
    and entering the details of your errata. Once your errata are verified, your submission
    will be accepted and the errata will be uploaded on our website, or added to any
    list of existing errata, under the Errata section of that title. Any existing
    errata can be viewed by selecting your title from [http://www.packtpub.com/support](http://www.packtpub.com/support).
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyright material on the Internet is an ongoing problem across all
    media. At Packt, we take the protection of our copyright and licenses very seriously.
    If you come across any illegal copies of our works, in any form, on the Internet,
    please provide us with the location address or website name immediately so that
    we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors, and our ability to bring
    you valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`
    if you are having a problem with any aspect of the book, and we will do our best
    to address it.
  prefs: []
  type: TYPE_NORMAL
