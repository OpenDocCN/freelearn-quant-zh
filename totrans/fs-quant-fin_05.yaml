- en: Chapter 5. Learning Option Pricing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章：学习期权定价
- en: In this chapter, you will learn how to get started with option pricing using
    the Black-Scholes formula and the Monte Carlo method. We'll compare the two methods
    and see where they are most suitable in real-world applications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何使用布莱克-斯科尔斯公式和蒙特卡罗方法进行期权定价。我们将比较这两种方法，并看看它们在实际应用中最适合的场景。
- en: 'In this chapter you will learn:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习：
- en: The Black-Scholes option pricing formula
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布莱克-斯科尔斯期权定价公式
- en: How to use the Monte Carlo method to price options
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用蒙特卡罗方法定价期权
- en: European, American, and Exotic options
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 欧洲期权、美式期权和另类期权
- en: How to use real market data from Yahoo! Finance in option pricing
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用来自Yahoo! Finance的真实市场数据进行期权定价
- en: Plotting the greeks in F#
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在F#中绘制希腊字母
- en: The basics of Wiener processes and the Brownian motion
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维纳过程和布朗运动的基础知识
- en: The basics of stochastic differential equations
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机微分方程的基础知识
- en: Introduction to options
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 期权简介
- en: Options come in two variants, puts and calls. The call option gives the owner
    of the option the right, but not the obligation, to buy the underlying asset at
    the strike price. The `put` option gives the holder of the contract the right,
    but not the obligation, to sell the underlying asset. The Black-Scholes formula
    describes the European option, which can only be exercised on the maturity date,
    in contrast to, for example, American options. The buyer of the option pays a
    premium for this in order to cover the risk taken from the counterpart's side.
    Options have become very popular and they are used in the major exchanges throughout
    the world, covering most asset classes.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 期权有两种变体，认沽期权和认购期权。认购期权赋予期权持有者在执行价格下购买标的资产的权利，但没有义务。`认沽`期权赋予合同持有者卖出标的资产的权利，但没有义务。布莱克-斯科尔斯公式描述的是只能在到期日行使的欧洲期权，与例如美式期权不同。期权买方为此支付一定的溢价，以覆盖来自对方风险。期权已经变得非常流行，全球主要交易所都在使用，涵盖了大部分资产类别。
- en: The theory behind options can become complex pretty quickly. In this chapter,
    we'll look at the basics of options and how to explore them using the code written
    in F#.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 期权背后的理论可能很快变得复杂。在本章中，我们将讨论期权的基础知识，以及如何通过F#编写的代码来探索它们。
- en: Looking into contract specifications
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看合同规范
- en: 'Options come in a wide number of variations, some of which will be covered
    briefly in this section. The contract specifications for options will also depend
    on their type. Generally, there are some properties that are more or less general
    to all of them. The general specifications are as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 期权有多种变体，其中一些将在本节中简要介绍。期权的合同规范也将取决于其类型。通常，有一些属性对于所有期权来说或多或少都是通用的。通用规格如下：
- en: Side
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 侧面
- en: Quantity
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数量
- en: Strike price
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行使价格
- en: Expiration date
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 到期日
- en: Settlement terms
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结算条款
- en: The contract specifications, or known variables, are used when we valuate options.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 合同规范或已知变量在我们评估期权时使用。
- en: European options
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 欧洲期权
- en: European options are the basic form of options that other types of options extend.
    American options and Exotic options are some examples. We'll stick to European
    options in this chapter.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 欧洲期权是其他类型期权的基础形式，美式期权和另类期权就是其中的例子。本章将重点讨论欧洲期权。
- en: American options
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 美式期权
- en: American options are options that may be exercised on any trading day on or
    before expiry.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 美式期权是在到期日或之前的任何交易日都可以行使的期权。
- en: Exotic options
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另类期权
- en: Exotic options are options belonging to the broad category of options, which
    may include complex financial structures, and may be combinations of other instruments
    as well.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另类期权属于期权的广义范畴，可能包括复杂的金融结构，也可能是其他工具的组合。
- en: Learning about Wiener processes
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习维纳过程
- en: 'Wiener processes are closely related to stochastic differential equations and
    volatility. A Wiener process, or the geometric Brownian motion, is defined as
    follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 维纳过程与随机微分方程和波动性密切相关。维纳过程或几何布朗运动定义如下：
- en: '![Learning about Wiener processes](img/4623OS_05_01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![学习维纳过程](img/4623OS_05_01.jpg)'
- en: The preceding formula describes the change in the stock price or the underlying
    asset with a drift, µ, and a volatility, σ, and the Wiener process, *Wt*. This
    process is used to model the prices in Black-Scholes.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 上述公式描述了带有漂移项µ和波动性σ的股票价格或标的资产的变化，以及维纳过程*Wt*。这个过程用于在布莱克-斯科尔斯模型中模拟价格变化。
- en: 'We''ll simulate market data using a Brownian motion or a Wiener process implemented
    in F# as a sequence. Sequences can be infinite and only the values used are evaluated,
    which suits our needs. We''ll implement a generator function to generate the Wiener
    process as a sequence as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用布朗运动或维纳过程来模拟市场数据，布朗运动或维纳过程在F#中实现为序列。序列可以是无限的，只有使用的值会被评估，这非常适合我们的需求。我们将实现一个生成器函数，将维纳过程作为序列生成，如下所示：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here, we use the random function in `normd.Sample()`. Let's explain the parameters
    and the theory behind the Brownian motion before looking at the implementation.
    The parameter `T` is the time used to create a discrete time increment `dt`. Notice
    that `dt` will assume there are 500 `N`:`s`, 500 items in the sequence; this of
    course is not always the case, but it will do fine here. Next, we use recursion
    to create the sequence, where we add an increment to the previous value *(x+...)*,
    where x corresponds to *xt-1*.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用`normd.Sample()`中的随机函数。在查看实现之前，先解释一下参数和布朗运动背后的理论。参数`T`是用于创建离散时间增量`dt`的时间。请注意，`dt`假设有500个`N`:`s`，序列中有500个项目；当然，这并不总是如此，但在这里这样做是足够的。接下来，我们使用递归来创建序列，其中我们将增量加到前一个值*(x+...)*，其中x对应于*xt-1*。
- en: 'We can easily generate an arbitrary length of the sequence as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以轻松生成任意长度的序列，如下所示：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Here, we create a sequence of length `50`. Let''s plot the sequence to get
    a better understanding about the process as shown in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们创建了一个长度为`50`的序列。让我们绘制这个序列，以便更好地理解该过程，如下图所示：
- en: '![Learning about Wiener processes](img/4623OS_05_02.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![学习维纳过程](img/4623OS_05_02.jpg)'
- en: A Wiener process generated from the preceding sequence generator
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的序列生成器中生成的维纳过程
- en: 'Next, we''ll look at the following code to generate the graph shown in the
    preceding screenshot:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看以下代码，以生成前面截图中显示的图表：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Most of the code will be familiar to you at this stage, but the interesting
    part is the last line, where we can simply feed a chosen number of elements from
    the sequence into `Seq.iter`, which will plot the values elegantly and efficiently.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 到这一阶段，代码的大部分对你来说应该是熟悉的，但有趣的部分是最后一行，我们可以简单地将序列中选定数量的元素输入到`Seq.iter`中，它将优雅且高效地绘制这些值。
- en: Learning the Black-Scholes formula
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习布莱克-斯科尔斯公式
- en: The Black-Scholes formula was developed by *Fischer Black* and *Myron Scholes*
    in the 1970s. The Black-Scholes formula is a stochastic partial differential equation
    which estimates the price of an option. The main idea behind the formula is the
    delta neutral portfolio. They created the theoretical delta neutral portfolio
    to reduce the uncertainty involved.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 布莱克-斯科尔斯公式是由*费舍尔·布莱克*和*迈伦·斯科尔斯*在1970年代开发的。布莱克-斯科尔斯公式是一个估算期权价格的随机偏微分方程。公式背后的主要思想是delta中性组合。他们创建了理论上的delta中性组合以减少其中的不确定性。
- en: 'This was a necessary step to be able to come to the analytical formula, which
    we''ll cover in this section. The following are the assumptions made under the
    Black-Scholes formula:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个必要的步骤，以便能够得出分析公式，我们将在本节中讨论。以下是布莱克-斯科尔斯公式下所做的假设：
- en: No arbitrage
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有套利
- en: Possible to borrow money at a constant risk-free interest rate (throughout the
    holding of the option)
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以以恒定的无风险利率借钱（在持有期权期间）
- en: Possible to buy, sell, and shortlist fractional amounts of underlying assets
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以购买、出售和列出基础资产的分数部分
- en: No transaction costs
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有交易成本
- en: Price of the underlying asset follows a Brownian motion, constant drift, and
    volatility
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基础资产的价格遵循布朗运动，具有恒定的漂移和波动率
- en: No dividends paid from underlying security
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从基础证券中不支付股息
- en: 'The simplest of the two variants is the one for `call` options. First, the
    stock price is scaled using the cumulative distribution function with `d1` as
    a parameter. Then, the stock price is reduced by the discounted strike price scaled
    by the cumulative distribution function of `d2`. In other words, it''s the difference
    between the stock price and the strike price using probability scaling of each
    and discounting the strike price:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 两种变体中最简单的是`call`期权的变体。首先，使用累积分布函数将股价按`d1`作为参数进行缩放。然后，股价通过`d2`的累积分布函数缩放后的折扣行使价格来减少。换句话说，这是使用各自的概率缩放并折扣行使价格后的股价与行使价格的差值：
- en: '![Learning the Black-Scholes formula](img/4623OS_05_03.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![学习布莱克-斯科尔斯公式](img/4623OS_05_03.jpg)'
- en: 'The formula for the `put` option is a little more involved, but follows the
    same principles, shown as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`put`期权的公式稍微复杂一些，但遵循相同的原则，如下所示：'
- en: '![Learning the Black-Scholes formula](img/4623OS_05_04.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![学习Black-Scholes公式](img/4623OS_05_04.jpg)'
- en: 'The Black-Scholes formula is often separated into parts, where `d1` and `d2`
    are the probability factors describing the probability of the stock price being
    related to the strike price:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Black-Scholes公式通常分为几个部分，其中`d1`和`d2`是概率因子，用来描述股票价格与行使价格的关系概率：
- en: '![Learning the Black-Scholes formula](img/4623OS_05_05.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![学习Black-Scholes公式](img/4623OS_05_05.jpg)'
- en: 'The parameters used in the preceding formula can be summarized as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 前述公式中使用的参数总结如下：
- en: '**N**: The cumulative distribution function'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**N**：累计分布函数'
- en: '**T**: Time to maturity, expressed in years'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**T**：到期时间，以年为单位表示'
- en: '**S**: The stock price or other underlying assets'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**S**：股票价格或其他标的资产的价格'
- en: '**K**: The strike price'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**K**：行使价格'
- en: '**r**: The risk-free interest rate'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**r**：无风险利率'
- en: '**σ**: The volatility of the underlying assets'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**σ**：标的资产的波动率'
- en: Implementing Black-Scholes in F#
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在F#中实现Black-Scholes模型
- en: 'Now that we''ve looked at the basics behind the Black-Scholes formula and the
    parameters involved, we can implement it ourselves. The cumulative distribution
    function is implemented here to avoid dependencies and to illustrate that it''s
    quite simple to implement it yourself too. The Black-Scholes formula is implemented
    in F# by using the following code. It takes six arguments; the first is a call-put-flag
    that determines if it''s a `call` or `put` option. The constants `a1` to `a5`
    are the Taylor series coefficients used in the approximation for the numerical
    implementation:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了Black-Scholes公式的基本原理及相关参数，接下来可以自己实现它。这里实现了累计分布函数，避免了依赖外部库，同时也说明了自己实现这个函数其实是很简单的。Black-Scholes公式在F#中的实现如下所示。它接受六个参数，第一个是一个用于判断是`call`还是`put`期权的标志。常量`a1`到`a5`是用于数值实现的泰勒级数系数：
- en: '[PRE3]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Let''s use the `black_scholes` function using some numbers for the `call` and
    `put` options. Suppose we want to know the price of an option where the underlying
    asset is a stock traded at $58.60 with an annual volatility of 30 percent. The
    risk-free interest rate is, let''s say, one percent. We can use our formula that
    we defined previously to get the theoretical price according to the Black-Scholes
    formula of a `call` option with six months to maturity (0.5 years):'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`black_scholes`函数，并为`call`和`put`期权提供一些数字。假设我们想知道一个期权的价格，该期权的标的资产是一只以58.60美元交易的股票，年波动率为30%。无风险利率为1%。我们可以使用之前定义的公式，根据Black-Scholes公式计算一个到期时间为六个月（0.5年）的`call`期权的理论价格：
- en: '[PRE4]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We will get the value for the `put` option just by changing the flag of the
    function:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需通过更改函数的标志，即可得到`put`期权的值：
- en: '[PRE5]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Sometimes, it''s more convenient to express the time to maturity in number
    of days instead of years. Let''s introduce a helper function for that purpose:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，用天数而非年数来表示到期时间更加方便。我们可以为此目的引入一个辅助函数：
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Note the number `365.25`, which includes the factor for leap years. This is
    not necessary in our examples, but is used for correctness. We can now use this
    function instead when we know the time in days:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意数字`365.25`，它包括了闰年的因素。虽然在我们的示例中不需要使用，但为了准确性，还是用了这个值。当我们知道以天为单位的时间时，现在可以使用这个函数：
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let''s use the same preceding example, but now with `20` days to maturity:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用之前的示例，但现在设定到期日为`20`天：
- en: '[PRE8]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Using Black-Scholes together with charts
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Black-Scholes和图表一起
- en: 'Sometimes, it''s useful to be able to plot the price of an option until expiration.
    We can use our previously defined functions and vary the time left and plot the
    values coming out. In this example, we''ll make a program that outputs the graph
    shown in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，能够绘制期权的价格直到到期是很有用的。我们可以使用之前定义的函数，改变剩余时间并绘制出相应的值。在这个示例中，我们将创建一个程序，输出下方截图中的图表：
- en: '![Using Black-Scholes together with charts](img/4623OS_05_06.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![将Black-Scholes与图表一起使用](img/4623OS_05_06.jpg)'
- en: A chart showing prices for call and put options as a function of time
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 显示看涨期权和看跌期权价格随时间变化的图表
- en: 'The following code is used to generate the graph in the preceding screenshot:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码用于生成前述截图中的图表：
- en: '[PRE9]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The preceding code is just a modified version of the code shown in the previous
    chapter with the options parts added. We have two series in this chart, one for
    `call` options and one for `put` options. We also add a legend for each of the
    series. The last part is the calculation of the prices and the actual plotting.
    List comprehensions are used for compact code, and the Black-Scholes formula is
    called everyday until expiration, where the days are counted down by one day at
    each step.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码只是前一章代码的修改版，新增了期权部分。此图表中有两条序列，一条代表`看涨`期权，另一条代表`看跌`期权。我们还为每个序列添加了图例。最后一部分是计算价格和实际绘图。列表推导用于简洁的代码，Black-Scholes
    公式在每个到期日之前被调用，天数每步递减一天。
- en: It's up to you as the reader to modify the code to plot various aspects of the
    option, such as the option price as a function of an increase in the underlying
    stock price, and so on.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 作为读者，你可以修改代码，绘制期权的不同方面，例如期权价格相对于基础股价上升的变化等等。
- en: Introducing the greeks
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍希腊字母
- en: The **greeks** are partial derivatives of the Black-Scholes formula with respect
    to a particular parameter, such as time, rate, volatility, or stock price. The
    greeks can be divided into two or more categories with respect to the order of
    the derivatives. In this section, we'll look at the first-order and second-order
    greeks.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**希腊字母**是对 Black-Scholes 公式中某一特定参数（如时间、利率、波动性或股价）的偏导数。希腊字母可以根据导数的阶数分为两类或更多类。在本节中，我们将讨论一阶和二阶希腊字母。'
- en: First-order greeks
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一阶希腊字母
- en: 'In this section, we''ll present the first-order greeks using the following
    table:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将通过下表展示一阶希腊字母：
- en: '| Name | Symbol | Description |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 符号 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Delta | Δ | Rate of change of option value with respect to the change in
    the price of the underlying asset. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| Delta | Δ | 期权价值相对于基础资产价格变化的变化率。 |'
- en: '| Vega | ν | Rate of change of option value with respect to the change in the
    volatility of the underlying asset. It is referred to as the volatility sensitivity.
    |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| Vega | ν | 期权价值相对于基础资产波动性变化的变化率，称为波动率敏感度。 |'
- en: '| Theta | Θ | Rate of change of option value with respect to time. The sensitivity
    with respect to time will decay as time elapses, and this phenomenon is referred
    to as the time decay. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| Theta | Θ | 期权价值相对于时间的变化率。随着时间的流逝，对时间的敏感度会衰减，这种现象被称为时间衰减。 |'
- en: '| Rho | ρ | Rate of change of option value with respect to the interest rate.
    |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| Rho | ρ | 期权价值相对于利率变化的变化率。 |'
- en: Second-order greeks
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 二阶希腊字母
- en: 'In this section, we''ll present the second-order greeks using the following
    table:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将通过下表展示二阶希腊字母：
- en: '| Name | Symbol | Description |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 符号 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Gamma | Γ | Rate of change of delta with respect to a change in the price
    of the underlying asset. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| Gamma | Γ | Delta 相对于基础资产价格变化的变化率。 |'
- en: '| Veta | - | Rate of change in Vega with respect to time. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| Veta | - | Vega 关于时间的变化率。 |'
- en: '| Vera | - | Rate of change in Rho with respect to volatility. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| Vera | - | Rho 相对于波动性的变化率。 |'
- en: Tip
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Some of the second-order greeks are omitted for clarity; we'll not cover these
    in this book.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 为了清晰起见，省略了一些二阶希腊字母；本书中将不会涉及这些内容。
- en: Implementing the greeks in F#
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 F# 中实现希腊字母
- en: 'Let''s implement the greeks: Delta, Gamma, Vega, Theta, and Rho. First, we
    look at the formulas for each greek. In some of the cases, they vary for calls
    and puts respectively as shown in the following table:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来实现希腊字母：Delta、Gamma、Vega、Theta 和 Rho。首先，我们看一下每个希腊字母的公式。在某些情况下，期权的看涨和看跌分别有不同的公式，具体如下面的表格所示：
- en: '![Implementing the greeks in F#](img/4623OS_05_07.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![在 F# 中实现希腊字母](img/4623OS_05_07.jpg)'
- en: 'We need the derivative of the cumulative distribution function, which in fact
    is the normal distribution with a mean of 0 and standard deviation of 1:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要累积分布函数的导数，实际上它是一个均值为 0、标准差为 1 的正态分布：
- en: '[PRE10]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Delta
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Delta
- en: '**Delta** is the rate of change of the option price with respect to the change
    in the price of the underlying asset:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**Delta** 是期权价格相对于基础资产价格变化的变化率：'
- en: '[PRE11]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Gamma
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Gamma
- en: '**Gamma** is the rate of change of delta with respect to the change in the
    price of the underlying asset. This is the second derivative with respect to the
    price of the underlying asset. It measures the acceleration of the price of the
    option with respect to the underlying price:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gamma** 是德尔塔相对于标的资产价格变化的变化率。这是标的资产价格的二阶导数。它衡量期权价格相对于标的资产价格的加速度：'
- en: '[PRE12]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Vega
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Vega
- en: '**Vega** is the rate of change of the option value with respect to the change
    in the volatility of the underlying asset. It is referred to as the sensitivity
    of the volatility:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**Vega** 是期权价值相对于标的资产波动率变化的变化率。它被称为波动率的敏感性：'
- en: '[PRE13]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Theta
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Theta
- en: '**Theta** is the rate of change of the option value with respect to time. The
    sensitivity with respect to time will decay as time elapses, and this phenomenon
    is referred to as the time decay:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**Theta** 是期权价值相对于时间的变化率。随着时间的推移，时间敏感性会衰减，这种现象被称为时间衰减：'
- en: '[PRE14]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Rho
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Rho
- en: '**Rho** is the rate of change of the option value with respect to the interest
    rate:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**Rho** 是期权价值相对于利率的变化率：'
- en: '[PRE15]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Investigating the sensitivity of the greeks
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 研究希腊字母的敏感性
- en: Now that we have all the greeks implemented, we'll investigate the sensitivity
    of some of them and see how they vary when the underlying stock price changes.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经实现了所有的希腊字母，我们将研究其中一些的敏感性，看看它们在标的股票价格变化时如何变化。
- en: 'The following screenshot is a surface plot with four of the greeks where the
    time and the underlying price is changing. This figure is generated in MATLAB,
    and will not be generated in F#. We''ll use a 2D version of the graph to study
    the greeks as shown in the following screenshot:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图是一个包含四个希腊字母的表面图，其中时间和标的资产价格在变化。此图是在 MATLAB 中生成的，F# 中无法生成。我们将使用该图的二维版本来研究希腊字母，如下所示的截图：
- en: '![Investigating the sensitivity of the greeks](img/4623OS_05_08.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![研究希腊字母的敏感性](img/4623OS_05_08.jpg)'
- en: The surface plot of Delta, Gamma, Theta, and Rho of a call option
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 看涨期权的德尔塔、伽玛、θ和rho的表面图
- en: 'In this section, we''ll start by plotting the value of Delta for a `call` option
    where we vary the price of the underlying asset. This will result in the following
    2D plot as shown in the following screenshot:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将从绘制一个`call`期权的德尔塔值开始，其中我们改变标的资产的价格。这样将产生如下所示的二维图：
- en: .
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: '![Investigating the sensitivity of the greeks](img/4623OS_05_09.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![研究希腊字母的敏感性](img/4623OS_05_09.jpg)'
- en: A plot of call option delta versus the price of the underlying asset
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 看涨期权德尔塔与标的资产价格的图示
- en: 'The result in the plot shown in the preceding screenshot will be generated
    by the code presented next. We''ll reuse most of the code from the example where
    we looked at the option prices for calls and puts. A slightly modified version
    is presented in the following code, where the price of the underlying asset varies
    from $10.0 to $70.0:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 上述截图中显示的结果将通过接下来展示的代码生成。我们将重用大部分代码，之前我们查看了看涨期权和看跌期权的价格。稍微修改过的版本将在下面的代码中呈现，其中标的资产的价格从
    $10.0 变化到 $70.0：
- en: '[PRE16]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'We can extend the code to plot all four greeks, as shown in the screenshot
    with the 2D surface plots. The result will be a graph as shown in the following
    screenshot:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以扩展代码来绘制所有四个希腊字母，如截图中所示的二维表面图。结果将是如下截图所示的图形：
- en: '![Investigating the sensitivity of the greeks](img/4623OS_05_10.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![研究希腊字母的敏感性](img/4623OS_05_10.jpg)'
- en: A graph showing greeks for a call option with respect to a price change (x axis)
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 显示看涨期权的希腊字母与价格变化（x轴）关系的图形
- en: Code listing for visualizing the four greeks
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可视化四个希腊字母的代码列表
- en: 'The following is the code listing for the entire program used to create the
    preceding graph:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是用于生成前述图形的完整程序代码列表：
- en: '[PRE17]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We''ll create a series for each greek as follows:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为每个希腊字母创建一个系列，如下所示：
- en: '[PRE18]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Next, we''ll calculate the values to plot for each greek:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将计算每个希腊字母的绘图值：
- en: '[PRE19]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The Monte Carlo method
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 蒙特卡洛方法
- en: The Monte Carlo method is used to sample numerical integration using random
    numbers and to study the mean value of a large number of samples. The Monte Carlo
    method is especially useful when there is no closed form solution available.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 蒙特卡洛方法用于使用随机数进行数值积分，并研究大量样本的平均值。当没有封闭形式解时，蒙特卡洛方法特别有用。
- en: 'In this section, we''ll look at the simplest case, where we have path-dependent
    European options. We are going to sample numerical integration using a random
    drifting parameter. This will lead to various average values for the stochastic
    process, which makes up the movement of the underlying asset. We''ll do this using
    1,000 and 1,000,000 samples respectively and compare the results. Let''s dig into
    the following code:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将研究最简单的情况，其中我们有路径依赖的欧洲期权。我们将使用随机漂移参数来进行数值积分采样。这将导致随机过程的各种平均值，构成了基础资产的运动。我们将分别使用1,000和1,000,000个样本进行计算，并比较结果。让我们深入研究以下代码：
- en: '[PRE20]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Let''s test it with the same values used for the Black-Scholes formula for
    a `put` option:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用与`put`期权的Black-Scholes公式相同的数值来测试它：
- en: '[PRE21]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This is close to being spot on; we can increase the number of samples and see
    if we get another value:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这个结果接近准确；我们可以增加样本数，看看是否得到另一个值：
- en: '[PRE22]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The preceding code uses the following formula to accomplish the task of estimating
    the price. In a short summary, the Monte Carlo method here can be thought of as
    a random pick of the drifting parameter `σ*rnd*sqrt(t)`. The mean of all these
    samples generated will then represent the estimated value of the option at maturity.
    In reality, the Monte Carlo method is not used for European options, in contrast
    to what''s illustrated in this section. The choice of European options was mainly
    due to simplicity, to illustrate the concepts:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码使用以下公式来完成估算价格的任务。简而言之，这里的蒙特卡罗方法可以看作是随机选择漂移参数`σ*rnd*sqrt(t)`。所有这些生成的样本的平均值将代表期权到期时的估算值。实际上，蒙特卡罗方法并不用于欧洲期权，这与本节中所展示的情况相反。选择欧洲期权主要是出于简单性考虑，用以说明这些概念：
- en: '![The Monte Carlo method](img/4623OS_05_11.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![蒙特卡罗方法](img/4623OS_05_11.jpg)'
- en: The formula to estimate the sample value of a price at maturity for an asset
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 用于估算资产到期时价格样本值的公式
- en: Summary
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at option pricing in F# using the famous Black-Scholes
    formula together with the Monte Carlo method for European options. Once again,
    F# has proven itself powerful, and in numerical implementations, this is especially
    true. The code is almost identical to the mathematical functions, which makes
    it easy to implement without any extra ceremony needed. The lessons learned in
    this chapter will be used in the next chapter to dig deeper into options and volatility.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们使用著名的Black-Scholes公式结合蒙特卡罗方法研究了F#中的期权定价。F#再次证明了其强大的功能，特别是在数值实现方面。这段代码几乎与数学公式完全相同，因此很容易实现，无需额外的繁琐步骤。本章中学到的知识将在下一章中用于深入探讨期权和波动性。
