- en: Chapter 7. Multifactor Models and Performance Measures
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In [Chapter 6](ch06.html "Chapter 6. Capital Asset Pricing Model"), *Capital
    Asset Pricing Model*, we discussed the simplest one-factor linear model: CAPM.
    As mentioned, this one-factor linear model serve as a benchmark for more advanced
    and complex models. In this chapter, we will focus on the famous Fama-French three-factor
    model, Fama-French-Carhart four-factor model, and Fama-French five-factor model.
    After understanding those models, readers should be able to develop their own
    multifactor linear models, such as by adding **Gross Domestic Product** (**GDP**),
    **Consumer Price Index** (**CPI**), a business cycle indicator or other variables
    as an extra factor(s). In addition, we will discuss performance measures, such
    as the Sharpe ratio, Treynor ratio, and Jensen''s alpha. In particular, the following
    topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to the Fama-French three-factor model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fama-French-Carhart four-factor model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fama-French five-factor model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other multiplefactor models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharpe ratio and Treynor ratio
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lower partial standard deviation and Sortino ratio
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jensen's alpha
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to merge different datasets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to the Fama-French three-factor model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before discussing the Fama-French three-factor model and other models, let''s
    look at a general equation for a three-factor linear model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to the Fama-French three-factor model](img/B06175_07_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *y* is the dependent variable, *α* is the intercept, *x1*, *x2*, and
    *x3* are three independent variables, *β1*, *β2* and *β3* are three coefficients,
    and ε is a random factor. In other words, we try to use three independent variables
    to explain one dependent variable. The same as a one-factor linear model, the
    graphical presentation of this three-factor linear model is a straight line, in
    a four-dimensional space, and the power of each independent variable is a unit
    as well. Here, we will use two simple examples to show how to run multifactor
    linear regression. For the first example, we have the following code. The values
    have no specific meaning and readers could enter their own values as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'In the preceding program, the `pandas.stats.api.ols()` function is applied.
    **OLS** stands for **Ordinary Least Squares**. For more information about the
    OLS model, we could use the `help()` function; see the following two lines of
    code. For brevity, the output is not shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The pandas DataFrame is used to construct our dataset. Readers should pay attention
    to the structure of {`"y":y`, `"x1":x1`, `''x2'':x2`, `''x3'':x3`}. It has the
    data format of a dictionary. The result of running the regression is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to the Fama-French three-factor model](img/B06175_07_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'From the output, the three-factor model is listed first: `y` is against three
    independent or explainable variables of `x1`, `x2`, and `x3`. The number of observations
    is 5, while the degree of freedom is 4\. The value of R2 is 0.96 while the adjusted
    R2 is 0.84\. The R2 value reflects the percentage of variations in y could be
    explained by `x1`, `x2`, and `x3`. Since the adjusted R2 considers the impact
    of the number of independent variables, it is more meaningful. **RMSE** stands
    for **Mean Standard Square Error**. The smaller this value, the better our model.
    The F-stat and the p-value reflect the goodness of our linear model. The F-value
    reflects the quality of the whole model. The F-value should be compared with its
    critical F-value, which in turn depends on three input variables: confidence level,
    degree of freedom for the numerator, and degree of freedom for the denominator.
    The `scipy.stats.f.ppf()` function could be applied to find out the critical F-value;
    see the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The confidence level is equal to 1 minus alpha, that is, 95% in this case. The
    higher the confidence level, the more reliable the result, such as 99% instead
    of 95%. The most-used confidence levels are 90%, 95%, and 99%. `dfNumeratro` (`dfDenominator`)
    is the degree of freedom for the numerator (denominator), which depends on the
    simple sizes. From the preceding result of OLS regression, we know that those
    two values are 3 and 1.
  prefs: []
  type: TYPE_NORMAL
- en: From the preceding values, *F=8.1 < 215.7* (critical F-value), we should accept
    the null hypothesis that all coefficients are zero, that is, the quality of the
    model is not good. On the other hand, a P-value of 0.25 is way higher the critical
    value of 0.05\. It also means that we should accept the null hypothesis. This
    makes sense since we have entered those values without any meanings.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the second example, one CSV file related to IBM, downloaded from Yahoo!
    Finance, is used and the dataset can be downloaded at [http://canisius.edu/~yany/data/ibm.csv](http://canisius.edu/~yany/data/ibm.csv).
    Alternatively, readers can go to [http://finance.yahoo.com/](http://finance.yahoo.com/)
    to download IBM''s historical data. The first several lines are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to the Fama-French three-factor model](img/B06175_07_42.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '`Date` is the date variable, `Open` is the opening price, `High (Low)` is the
    highest (lowest) price achieved during the period, `Close` is the closing price,
    `Volume` is the trading volume and `Adj.Close` is the adjusted closing price,
    adjusted for stock split and dividend distributions. In the following Python program,
    we try to use three variables of `Open`, `High`, and `Volume` to explain `Adj.Close`;
    see the following equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to the Fama-French three-factor model](img/B06175_07_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Again, this OLS regression just serves as an illustration showing how to run
    a three-factor model. It might have no economic meaning at all. The beauty of
    such an example is that we could easily get data and test our Python program:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The first three commands import three Python modules. The command line of `x=sm.add_constant(x)`
    will add a column of 1s. If the line is missing, we would force a zero intercept.
    To enrich our experience of running a three-factor linear model, this time, a
    different OLS function is applied. The advantage of using the `statsmodels.apilsm.OLS()`
    function is that we could find more information about our results, such as **Akaike
    Information Criterion** (**AIC**), **Bayesian Information Criterion (BIC**), skew,
    and kurtosis. The discussion of their definitions will be postponed to the next
    chapter ([Chapter 8](ch08.html "Chapter 8. Time-Series Analysis"), *Time-Series
    Analysis*). The corresponding output after running the preceding Python program
    is given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Introduction to the Fama-French three-factor model](img/B06175_07_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Again, we will refrain from spending time interpreting the result since our
    objective at the moment is to show how to run a three-factor regression.
  prefs: []
  type: TYPE_NORMAL
- en: Fama-French three-factor model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Recall that the CAPM has the following form:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French three-factor model](img/B06175_07_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *E()* is the expectation, *E(Ri)* is the expected return for stock *i*,
    *Rf* is the risk-free rate, and *E(Rmkt)* is the expected market return. For instance,
    the S&P500 index could serve as a market index. The slope of the preceding equation
    (![Fama-French three-factor model](img/B06175_07_43.jpg)) is a measure of the
    stock''s market risk. To find out the value of ![Fama-French three-factor model](img/B06175_07_43.jpg),
    we run a linear regression. The Fama-French three-factor model could be viewed
    as a natural extension of CAPM, see here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French three-factor model](img/B06175_07_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The definitions of *Ri*, *Rf*, and *Rmkt* remain the same. *SMB* is the portfolio
    returns of small stocks minus the portfolio returns of big stocks; *HML* is the
    portfolio returns for high book-to-market value minus returns of low book-to-market
    value stocks. The Fama/French factors are constructed using the six value-weight
    portfolios formed on size and book-to-market. **Small Minus Big** (**SMB**) is
    the average return on the three small portfolios minus the average return on the
    three big portfolios. Based on the size, measured by the market capitalization
    (numbers of shares outstanding times the end of year price), they classify all
    stocks into two categories, **S** (small) and **H** (high). Similarly, based on
    the ratio of book value of equity to the market value of equity, all stocks are
    classified into three groups of **H** (high), **M** (Median), and **L** (Low).
    Eventually, we could have the following six groups:'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | Sorted by size into two groups |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Sorted bybook/market ratio into three groups |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| SH | BH |   |'
  prefs: []
  type: TYPE_TB
- en: '| SM | BM |   |'
  prefs: []
  type: TYPE_TB
- en: '| SL | BL |   |'
  prefs: []
  type: TYPE_TB
- en: 'The SMB is constructed by the following six portfolios:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French three-factor model](img/B06175_07_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When ratios of equity book value over market value are low (high), those stocks
    are called growth (value stocks) stocks. Thus, we could use another formula; see
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French three-factor model](img/B06175_07_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**High Minus Low** (**HML**) is the average return on the two value portfolios
    minus the average return on the two growth portfolios; see the following equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French three-factor model](img/B06175_07_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Rm-Rf, the excess return on the market, value-weight return of all CRSP firms
    incorporated in the US and listed on the NYSE, AMEX, or NASDAQ that have a CRSP
    share code of 10 or 11 at the beginning of month *t*, good shares and price data
    at the beginning of t, and good return data for t minus the 1-month Treasury bill
    rate (from Ibbotson Associates). The following program retrieves the Fama-French
    monthly factors and generates a dataset with the `.pickle` format. The dataset
    for the Fama-French monthly dataset in the pandas `.pickle` format can be downloaded
    from [http://www.canisius.edu/~yany/python/ffMonthly.pkl](http://www.canisius.edu/~yany/python/ffMonthly.pkl):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The corresponding output is show here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French three-factor model](img/B06175_07_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, we show how to run a Fama-French three-factor regression using 5-year
    monthly data. The added twist is that the historical price data is downloaded
    first. Then we calculate monthly returns and convert them to monthly ones before
    merging with the monthly Fama-French three-factor time series:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'In the preceding program, the start date is January 1, 2012, and the end date
    is December 31, 2016\. After retrieving the daily price data, we estimate the
    daily returns and then convert them to monthly ones. The Fama-French monthly three-factor
    time series with the pandas `.pickle` format is uploaded. In the preceding program,
    the usage of `np.array(date,dtype=int64)` is to make both indices have the same
    data types. The corresponding output is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French three-factor model](img/B06175_07_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: To save space, we will not discuss the result.
  prefs: []
  type: TYPE_NORMAL
- en: Fama-French-Carhart four-factor model and Fama-French five-factor model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Jegadeesh and Titman (1993) show a profitable momentum trading strategy: buy
    winners and sell losers. The basic assumption is that within a short time period,
    such as 6 months, a winner will remain as a winner, while a loser will remain
    as a loser. For example, we could classify winners from losers based on the last
    6-month cumulative total returns. Assume we are in January 1965\. The total returns
    over the last 6 months are estimated first. Then sort them into 10 portfolios
    according to their total returns from the highest to the lowest. The top (bottom)
    10% are labeled as winners (losers). We long winner portfolio and short loser
    portfolio with a 6-month holding period. The next month, February 1965, we repeat
    the same procedure. Over January 1965 to December 1989, Jegadeesh and Titman''s
    (1993) empirical results suggest that such a trading strategy would generate a
    return of 0.95% per month. Based on this result, Carhart (2000) adds the momentum
    as the 4th to the Fama-French three-factor model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French-Carhart four-factor model and Fama-French five-factor model](img/B06175_07_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *MOM* is the momentum factor. The following codes could upload `ffcMonthly.pkl`
    and print the first and last several lines. The Python dataset can be downloaded
    from the author''s website at [http://www.canisius.edu/~yany/python/ffcMonthly.pkl](http://www.canisius.edu/~yany/python/ffcMonthly.pkl):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French-Carhart four-factor model and Fama-French five-factor model](img/B06175_07_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In 2015, Fama and French developed a so-called five-factor model; see the following
    formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French-Carhart four-factor model and Fama-French five-factor model](img/B06175_07_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In the preceding equation, *RMW* is the difference between the returns on diversified
    portfolio of stocks with robust and weak profitability, *CMA* is the difference
    between the returns of diversified portfolios of the stocks of low and high investment
    firms, which Fama and French call conservative and aggressive. If the exposures
    to the five factors capture all variation in expected returns, the intercept for
    all securities and portfolio *i* should be zero. Again, we would not show how
    to run a Fama-French five-factor model since it is quite similar to running a
    Fama-French three-factor model. Instead, the following code shows the first and
    last several lines of a Python dataset called `ffMonthly5.pkl`. The Python dataset
    can be downloaded from the author''s website at [http://www.canisius.edu/~yany/python/ffMonthly5.pkl](http://www.canisius.edu/~yany/python/ffMonthly5.pkl):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The corresponding output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French-Carhart four-factor model and Fama-French five-factor model](img/B06175_07_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Along the same lines, for the daily frequency, we have several datasets called
    `ffDaily`, `ffcDaily`, and `ffDaily5`; see *Appendix A – list of related Python
    datasets* for more detail.
  prefs: []
  type: TYPE_NORMAL
- en: Implementation of Dimson (1979) adjustment for beta
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Dimson (1979) suggests the following method:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Implementation of Dimson (1979) adjustment for beta](img/B06175_07_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The most frequently used *k* value is *1*. Thus, we have the next equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Implementation of Dimson (1979) adjustment for beta](img/B06175_07_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Before we run the regression based on the preceding equation, two functions
    called `.diff()` and `.shift()` are explained. Here, we randomly choose five prices.
    Then we estimate their price difference returns and add lag and forward returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Implementation of Dimson (1979) adjustment for beta](img/B06175_07_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Obviously, the price time series is assumed from the oldest to the newest.
    The difference is defined as *p(i) – p(i-1)*. Thus, the first difference is `NaN`,
    that is, a missing value. Let''s look at period 4, that is, `index=3`. The difference
    is *1.8 (14-12.2)*, return is *(14-12.2)/12.2= 0.147541*. The lag ret will be
    the return before this period, that is, *0.109091*, while the lead return will
    be the next period return, that is, *-0.142857*. In the following Python program,
    we illustrate how to run the previous program for IBM stocks:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Implementation of Dimson (1979) adjustment for beta](img/B06175_07_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Performance measures
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To compare the performance of mutual functions or individual stocks, we need
    a performance measure. In finance, we know that investors should seek a trade-off
    between risk and returns. It might not be a good idea to say that portfolio A
    is better than portfolio B since the former offered us a 30% return last year
    while the latter offered just 8%. The obvious reason is that we should not ignore
    risk factors. Because of this, we often hear the phrase "risk-adjusted return".
    In this section, the Sharpe ratio, Treynor ratio, Sortino ratio, and Jensen''s
    alpha will be discussed. The Sharpe ratio is a widely used performance measure
    and it is defined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Performance measures](img/B06175_07_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, ![Performance measures](img/B06175_07_44.jpg) is the mean return for
    a portfolio or a stock, ![Performance measures](img/B06175_07_45.jpg) is the mean
    return for a risk-free security, σ is the variance of the excess portfolio (stock)
    return, and VaR is the variance of the excess portfolio (stock) return. The following
    code is used to estimate the Sharpe ratio with a hypothetical risk-free rate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'The Sharpe ratio is -0.00826559763423\. The following code will download daily
    data directly from Yahoo! Finance, then estimate the Sharpe ratio without considering
    the impact of the risk-free rate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is `0.00686555838073`. Based on the preceding code, a Python program
    is developed with more explanation plus two examples; see *Appendix C* for more
    detail. The Sharpe ratio looks at the total risk since the standard deviation
    is used as the denominator. This measure is appropriate when the portfolio in
    consideration is all the wealth for a company or individual owner. In [Chapter
    6](ch06.html "Chapter 6. Capital Asset Pricing Model"), *Capital Asset Pricing
    Model*, we argued that a rational investor should consider only the market risk
    instead of the total risk when he/she estimates the expected returns. Thus, when
    the portfolio under consideration is only part of the wealth, using total risk
    is not appropriate. Because of this, Treynor suggests using beta as the denominator:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Performance measures](img/B06175_07_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The only modification is that the sigma (total risk) is replaced by beta (market
    risk). Another argument against using standard deviation in the Sharpe ratio is
    that it considers the deviations in both directions, below and above the mean.
    However, we know that investors are worried more about the downside risk (deviation
    below mean return). The second issue for the Sharpe ratio is that for the numerator,
    we compare mean returns with a risk-free rate. Nevertheless, for the denominator,
    the deviations are from the mean return instead for the same risk-free rate. To
    overcome those two shortcomings, a so-called **Lower Partial Standard Deviation**
    (**LPSD**) is developed. Assume we have n returns and one **risk-free rate** (**Rf**).
    Assume further that there are m returns are less than this risk-free rate. LPSD
    is defined here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Performance measures](img/B06175_07_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Alternatively, we have the following equivalent formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Performance measures](img/B06175_07_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The Sortino ratio is defined here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Performance measures](img/B06175_07_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We could write a Python program to estimate the Sortino ratio; see the following
    code. To guarantee getting the same set of random numbers, the same seed should
    be used in the `sp.random.seed()` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The corresponding output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Performance measures](img/B06175_07_31.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'From the output, the standard deviation is `0.22` while the LPSD value is `0.045`.
    For mutual fund managers, getting a positive alpha is quite important. Thus, alpha
    or Jensen''s alpha is a performance measure. Jensen''s alpha is defined as the
    difference between the realized returns and the expected returns. It has the following
    form:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Performance measures](img/B06175_07_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How to merge different datasets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It is a common task to merge different datasets, such as merging index data
    with stock data and the like. Thus, it is quite important to understand the mechanism
    of merging different datasets. Here, the `pandas.merge()` function is discussed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'The sizes of both `x` and `y` are `4` by `3`, that is, four rows and three
    columns; see the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to merge different datasets](img/B06175_07_32.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '![How to merge different datasets](img/B06175_07_33.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Assume that we intend to merge them based on the variable called `key`, a common
    variable shared by both datasets. Since the common values of this variable are
    K0, K1 and K2\. The final result should have three rows and five columns since
    K3 and K6 are not the common values by the two datasets; see the result shown
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to merge different datasets](img/B06175_07_34.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Since `key` is shared by both datasets, we could simply ignore it; see the
    following code. In other words, `result` and `result2` are the same:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'The complete meaning of the `pandas.merge()` function is given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'For the first two input variables, `left` is for the first input dataset while
    `right` is the second input dataset. For the `how=` condition, we have the following
    four possible scenarios:'
  prefs: []
  type: TYPE_NORMAL
- en: '| `how=''inner''` | Meaning | Description |'
  prefs: []
  type: TYPE_TB
- en: '| Inner | INNER JOIN | Use intersection of keys from both frames |'
  prefs: []
  type: TYPE_TB
- en: '| Outer | FULL OUTER JOIN | Use union of keys from both frames |'
  prefs: []
  type: TYPE_TB
- en: '| Left | LEFT OUTER JOIN | Use keys from left frame only |'
  prefs: []
  type: TYPE_TB
- en: '| Right | RIGHT OUTER JOIN | Use keys from right frame only |'
  prefs: []
  type: TYPE_TB
- en: 'Table 7.1 Meanings of the four join conditions: inner, outer, left, and right'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The format of an inner join demands both datasets have the same items. An analogy
    is students from a family with both parents. The left join is based on the left
    dataset. In other words, our benchmark is the first dataset (`left`). An analogy
    is choosing students from families with a mum. The right is the opposite of the
    left, that is, the benchmark is the second dataset (`right`). The outer is the
    full dataset which contain both datasets, the same as students from all families:
    with both parents, with mum only, and with dad only.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following example, the first dataset has 4 years of data. Those values
    are entered with no specific meanings. Readers could use their own values. Our
    common variable is `YEAR`. For the first dataset, we have 4 years of data: `2010`,
    `2011`, `2012`, and `2013`. For the second dataset, we have `2011`, `2013`, `2014`,
    and `2015`. Obviously, only 2 years overlap. In total, we have 6 years of data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'The four outputs are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to merge different datasets](img/B06175_07_35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When the common variable has different names in those two datasets, we should
    specify their names by using `left_on=''left_name''` and `right_on=''another_name''`;
    see the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'If we intend to merge based on the index (row numbers), we specify that `left_index=''True''`,
    and `right_index=''True''`; see the following code. In a sense, since both datasets
    have four rows, we simply put them together, row by row. The true reason is that
    for those two datasets, there is no specific index. For a comparison, the `ffMonthly.pkl`
    data has the date as its index:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is shown here. Again, we simply illustrate the outcome without considering
    the economic meaning by merging different years'' data together:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to merge different datasets](img/B06175_07_36.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here is another example of merging on index where `date` is used as the index
    for both datasets:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Both datasets are available, for example, [http://canisius.edu/~yany/python/ffMonthly.pkl](http://canisius.edu/~yany/python/ffMonthly.pkl).
    The output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to merge different datasets](img/B06175_07_37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Sometimes, we need to merge two datasets based on two keys, such as stock `ID`
    and `date`; see the format here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s use the following hypothetical example by typing some values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'For the first dataset, we have shares outstanding data for two stocks over
    the years `2010` and `2011`. The second dataset has data for annual returns and
    ROA for three stocks over 2 years (`2010` and `2014`). Our objective is to merge
    those two datasets by stock `ID` and `date` (year). The output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to merge different datasets](img/B06175_07_38.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'After understanding how to run a multifactor regression and how to merge different
    datasets, readers will be able to add their own factor or factors. One issue is
    that some factors might have a different frequency, such as quarterly GDP instead
    of monthly ones. For those cases, we could use various ways to fill in those missing
    values; see the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How to merge different datasets](img/B06175_07_39.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Readers should compare those two GDP time series to the impact.
  prefs: []
  type: TYPE_NORMAL
- en: Appendix A – list of related Python datasets
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The prefix for these datasets is [http://canisius.edu/~yany/python](http://canisius.edu/~yany/python).
    For example, for `ffMonthly.pkl`, we would have [http://canisius.edu/~yany/python/ffMonthly.pkl](http://canisius.edu/~yany/python/ffMonthly.pkl):'
  prefs: []
  type: TYPE_NORMAL
- en: '| Filename | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `ibm3factor.pkl` | A simple dataset for the FF three-factor model for IBM
    |'
  prefs: []
  type: TYPE_TB
- en: '| `ffMonthly.pkl` | Fama-French monthly three factors |'
  prefs: []
  type: TYPE_TB
- en: '| `ffMomMonthly.pkl` | Monthly momentum factor |'
  prefs: []
  type: TYPE_TB
- en: '| `ffcMonthly.pkl` | Fama-French-Carhart monthly four factors |'
  prefs: []
  type: TYPE_TB
- en: '| `ffMonthly5.pkl` | Fama-French monthly five factors |'
  prefs: []
  type: TYPE_TB
- en: '| `yanMonthly.pkl` | A monthly dataset generated by the author |'
  prefs: []
  type: TYPE_TB
- en: '| `ffDaily.pkl` | Fama-French-Carhart daily four factors |'
  prefs: []
  type: TYPE_TB
- en: '| `ffcDaily.pkl` | Fama-French daily five factors |'
  prefs: []
  type: TYPE_TB
- en: '| `ffDaily5.pkl` | Fama-French monthly four factors |'
  prefs: []
  type: TYPE_TB
- en: '| `usGDPquarterly.pkl` | Quarterly US GDP data |'
  prefs: []
  type: TYPE_TB
- en: '| `usDebt.pkl` | US national debt level |'
  prefs: []
  type: TYPE_TB
- en: '| `usCPImonthly.pkl` | Consumer Price Index (CPI) data |'
  prefs: []
  type: TYPE_TB
- en: '| `tradingDaysMonthly.pkl` | Trading days for monthly data |'
  prefs: []
  type: TYPE_TB
- en: '| `tradingDaysDaily.pkl` | Trading days for daily data |'
  prefs: []
  type: TYPE_TB
- en: '| `businessCycleIndicator.pkl` | A business cycle indicator |'
  prefs: []
  type: TYPE_TB
- en: '| `businessCycleIndicator2.pkl` | Another business cycle indicator |'
  prefs: []
  type: TYPE_TB
- en: '| `uniqueWordsBible.pkl` | All unique words from the Bible |'
  prefs: []
  type: TYPE_TB
- en: 'One example of the code is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'The output is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix A – list of related Python datasets](img/B06175_07_40.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Appendix B – Python program to generate ffMonthly.pkl
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following program is used to generate the dataset called `ffMonthly.pkl`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'The first and last several lines are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix B – Python program to generate ffMonthly.pkl](img/B06175_07_41.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Appendix C – Python program for Sharpe ratio
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'Appendix D – data case #4 – which model is the best, CAPM, FF3, FFC4, or FF5,
    or others?'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Currently, we have many asset pricing models. Among them, the most important
    ones are CAPM, Fama-French three-factor model, Fama-French-Carhart four-factor
    model, or Fama-French five-factor model. The objectives of this data case include
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Becoming familiar with the method to download data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the T-value, F-values, and adjusted R2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Writing various Python programs to conduct the test
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Definitions of those four models CAPM:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix D – data case #4 – which model is the best, CAPM, FF3, FFC4, or
    FF5, or others?](img/B06175_07_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fama-French three-factor model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix D – data case #4 – which model is the best, CAPM, FF3, FFC4, or
    FF5, or others?](img/B06175_07_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fama-French-Carhart four-factor model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix D – data case #4 – which model is the best, CAPM, FF3, FFC4, or
    FF5, or others?](img/B06175_07_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fama-French five-factor model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Appendix D – data case #4 – which model is the best, CAPM, FF3, FFC4, or
    FF5, or others?](img/B06175_07_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In the preceding equation, RMV is the difference between the returns on diversified
    portfolio of stocks with robust and weak profitability, and CMA is the difference
    between the returns of diversified portfolios of the stocks of low and high investment
    firms, which Fama and French call conservative and aggressive. If the exposures
    to the five factors capture all variation in expected returns, the intercept for
    all securities and portfolio should be zero. The source of the data is as follow:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://canisius.edu/~yany/python/ffMonthly.pkl](http://canisius.edu/~yany/python/ffMonthly.pkl)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| `ffMonthly.pkl` | Fama-French monthly three factors |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `ffcMonthly.pkl` | Fama-French-Carhart monthly four factors |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `ffMonthly5.pkl` | Fama-French monthly five factors |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `yanMonthly.pkl` | Fama-French daily three factors |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `yanMonthly.pkl` | A monthly dataset generated by the author |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `usGDPannual.pkl` | US GDP annual |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `usCPImonthly.pkl` | Consumer Price Index (CPI) monthly |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'Several questions:'
  prefs: []
  type: TYPE_NORMAL
- en: Which criterion?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is the performance time-period independent?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In-sample estimation versus out-sample prediction
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please refer to the following articles:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Carhart, Mark M., 1997, On Persistence in Mutual Fund Performance, Journal
    of Finance 52, 57-82*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Fama, Eugene and Kenneth R. French, 2015, A five-factor asset pricing model,
    Journal of Financial Economics 116, 1, 1-22*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Fama, Eugene and Kenneth R. French, 1993, Common risk factors in the returns
    on stocks and bonds, Journal of Financial Economics 33, 3056*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Fama, Eugene and Kenneth R. French, 1992, The cross-section of expected stock
    returns, Journal of Finance 47, 427-465*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Jegadeesh, N., & Titman, S., 1993, Returns to buying winners and selling losers:
    Implications for stock market efficiency, Journal of Finance 48(1): 65–91*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Sharpe, W. F., 1966, Mutual Fund Performance, Journal of Business 39 (S1),
    119–138*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Sharpe, William F., 1994, The Sharpe Ratio, The Journal of Portfolio Management
    21 (1), 49–58*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Sortino, F.A., Price, L.N.,1994, Performance measurement in a downside risk
    framework, Journal of Investing 3, 50–8*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Treynor, Jack L., 1965, How to Rate Management of Investment Funds, Harvard
    Business Review 43, pp. 63–75*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What are the differences between the CAPM and Fama-French 3three-factor models?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the meanings of SMB and HML in the Fama-French three-factor model?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the meaning of MOM in the Fama-French-Carhart four-factor model?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the meanings of RMW and CMA in the Fama-French five-factor model?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the difference between R2 and adjusted R2 when running multifactor models?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How many OLS functions we could use? Please offer at least two functions from
    different Python modules.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which module contains the function called `rolling_kurt`? How can you use the
    function?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Based on daily data downloaded from Yahoo! Finance, find the results for IBM
    based on the last 5 years by running both the CAPM and Fama-French three-factor
    models. Which model is better?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the momentum factor? How do you run a Fama-French-Carhart four-factor
    model? Please use a few tickers as an illustration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the definition of the Fama-French 5 factor model? How do you run it
    for Citi Group? The ticker of the financial institution is C.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For the following stock tickers, IBM, DELL, WMT, ^GSPC, C, A, AA, and MOFT,
    run regression based on CAPM, FF3, FFC4, and FF5\. Which one is the best? Discuss
    your benchmark or criteria to compare.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Write a Python program to estimate rolling beta on a yearly basis based on the
    Fama-French three-factor model. Use it to show the annual beta for IBM from 1962
    to 2016.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Update the following Python datasets. The original datasets can be downloaded
    from the author''s web page. For example, in order to download the first dataset,
    called `ffMonthly.pkl`, go to [http://canisius.edu/~yany/python/ffMonthly.pkl](http://canisius.edu/~yany/python/ffMonthly.pkl):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| `ffMonthly.pkl` | Fama-French monthly three factors |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `ffcMonthly.pkl` | Fama-French-Carhart monthly four factors |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `ffMonthly5.pkl` | Fama-French monthly five factors |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'Data source: [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Update the following Python datasets:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| `usGDPannual.pkl` | US GDP annual |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `usCPImonthly.pkl` | CPI (Consumer price index) monthly |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: The Fama-French SMH could be viewed as a portfolio. Download both daily and
    monthly SMB. Then estimate the total returns over 10-, 20-, and 30-year periods.
    Compare the differences between each pair of total returns. For example, compare
    total returns from 1980 to 2000 based on both daily SML and monthly SML. Why they
    are different?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Do the same thing for the market return and compare with SML. Why is the difference
    for market much smaller than the difference for SML portfolio?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Do the same thing for HML and explain.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How many ways are there to merge two datasets?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If we have two datasets, sorted by ticker and date, how do you merge them?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Write a function to estimate the Treynor ratio. The format of the function is
    `treynorRatio` (`ticker`, `rf`, `begdate`, `enddate`), where ticker is a stock
    symbol, such as IBM, `rf` is the risk-free rate, `begdate` is the beginning date,
    and `enddate` is the end date.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Randomly choose 10 stocks, such as stocks with tickers of IBM, C, WMT, MSFT,
    and so on, and run CAPM to test whether their intercepts are zero or not.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Write a Python program to calculate the Sortino ratio. The format of the program
    will be `sortinoRatio(ticker,rf,begdate,enddate)`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How can you replicate the Jagadeesh and Tidman (1993) momentum strategy using
    Python and CRSP data? (Assume that your school has a CRSP subscription.)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When using the `statsodels.api.ols()` function to run a linear regression, what
    is the consequence when the following line is omitted?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Debug the following program used to estimate LPSD:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have discussed multiple-factor linear models. Those models
    could be viewed as a simple extension of the CAPM, a single one-factor linear
    model. These multifactor models include the Fama-French three-factor, Fama-French-Carhart
    four-factor, and Fama-French five-factor models.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will discuss various properties for time series. In
    finance and economics, a huge amount of our data is in the format of time series,
    such as stock price and **Gross Domestic Product** (**GDP**), or stocks' monthly
    or daily historical prices. For time series, there exist many issues, such as
    how to estimate returns from historical price data, how to merge datasets with
    the same or different frequencies, seasonality, and detection of auto-correlation.
    Understanding those properties is vitally important for our knowledge development.
  prefs: []
  type: TYPE_NORMAL
