- en: '8'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Multi-Factor Models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter is devoted to estimating various factor models. **Factors** are
    variables/attributes that in the past were correlated with (then future) stock
    returns and are expected to contain the same predictive signals in the future.
  prefs: []
  type: TYPE_NORMAL
- en: These risk factors can be considered a tool for understanding the cross-section
    of (expected) returns. That is why various **factor models** are used to explain
    the excess returns (over the risk-free rate) of a certain portfolio or asset using
    one or more factors. We can think of the factors as the sources of risk that are
    the drivers of those excess returns. Each factor carries a risk premium and the
    overall portfolio/asset return is the weighted average of those premiums.
  prefs: []
  type: TYPE_NORMAL
- en: 'Factor models play a crucial role in portfolio management, mainly because:'
  prefs: []
  type: TYPE_NORMAL
- en: They can be used to identify interesting assets that can be added to the investment
    portfolio, which—in turn—should lead to better-performing portfolios.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimating the exposure of a portfolio/asset to the factors allows for better
    risk management.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We can use the models to assess the potential incremental value of adding a
    new risk factor.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They make portfolio optimization easier, as summarizing the returns of many
    assets with a smaller number of factors reduces the amount of data required to
    estimate the covariance matrix.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They can be used to assess a portfolio manager’s performance—whether the performance
    (relative to the benchmark) is due to asset selection and timing of the trades,
    or if it comes from the exposure to known return drivers (factors).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this chapter, we will have constructed some of the most popular
    factor models. We will start with the simplest, yet very popular, one-factor model
    (which is the same as the **Capital Asset Pricing Model** when the considered
    factor is the market return) and then explain how to estimate more advanced three-,
    four-, and five-factor models. We will also cover the interpretation of what these
    factors represent and give a high-level overview of how they are constructed.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Estimating the CAPM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimating the Fama-French three-factor model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimating the rolling three-factor model on a portfolio of assets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimating the four- and five-factor models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimating cross-sectional factor models using the Fama-MacBeth regression
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimating the CAPM
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we learn how to estimate the famous **Capital Asset Pricing
    Model** (**CAPM**) and obtain the beta coefficient. This model represents the
    relationship between the expected return on a risky asset and the market risk
    (also known as systematic or undiversifiable risk). CAPM can be considered a one-factor
    model, on top of which more complex factor models were built.
  prefs: []
  type: TYPE_NORMAL
- en: 'CAPM is represented by the following equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_001.png)'
  prefs: []
  type: TYPE_IMG
- en: Here, *E*(*r*[i]) denotes the expected return on asset *i*, *r*[f] is the risk-free
    rate (such as a government bond), *E*(*r*[m]) is the expected return on the market,
    and ![](../Images/B18112_08_002.png) is the beta coefficient.
  prefs: []
  type: TYPE_NORMAL
- en: '**Beta** can be interpreted as the level of the asset return’s sensitivity,
    as compared to the market in general. Below we mention the possible interpretations
    of the coefficient:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_003.png) <= -1: The asset moves in the opposite direction
    to the benchmark and in a greater amount than the negative of the benchmark.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '-1 < ![](../Images/B18112_08_003.png) < 0: The asset moves in the opposite
    direction to the benchmark.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_003.png) = 0: There is no correlation between the asset’s
    price movement and the market benchmark.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '0 < ![](../Images/B18112_08_003.png) < 1: The asset moves in the same direction
    as the market, but the amount is smaller. An example might be the stock of a company
    that is not very susceptible to day-to-day fluctuations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_007.png) = 1: The asset and the market are moving in
    the same direction by the same amount.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_007.png) > 1: The asset moves in the same direction
    as the market, but the amount is greater. An example might be the stock of a company
    that is very susceptible to day-to-day market news.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'CAPM can also be represented as:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_009.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In this specification, the left-hand side of the equation can be interpreted
    as the risk premium, while the right-hand side contains the market premium. The
    same equation can be further reshaped into:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_010.png)'
  prefs: []
  type: TYPE_IMG
- en: Here, ![](../Images/B18112_08_011.png) and ![](../Images/B18112_08_012.png).
  prefs: []
  type: TYPE_NORMAL
- en: In this example, we consider the case of Amazon and assume that the S&P 500
    index represents the market. We use 5 years (2016 to 2020) of monthly data to
    estimate the beta. In current times, the risk-free rate is so low that, for simplicity’s
    sake, we assume it is equal to zero.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Execute the following steps to implement the CAPM in Python:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import the libraries:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Specify the risky asset, the benchmark, and the time horizon:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download the necessary data from Yahoo Finance:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Resample to monthly data and calculate the simple returns:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate beta using the covariance approach:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The result of the code is `beta = 1.2035`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Prepare the input and estimate the CAPM as a linear regression:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '*Figure 8.1* shows the results of estimating the CAPM model:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_01.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.1: The summary of the CAPM estimated using OLS'
  prefs: []
  type: TYPE_NORMAL
- en: These results indicate that the beta (denoted as the market here) is equal to
    1.2, which means that Amazon’s returns are 20% more volatile than the market (proxied
    by S&P 500). Or in other words, Amazon’s (excess) return is expected to move 1.2
    times the market (excess) return. The value of the intercept is relatively small
    and statistically insignificant at the 5% significance level.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, we specified the assets we wanted to use (Amazon and S&P 500) and the
    time frame. In *Step 3*, we downloaded the data from Yahoo Finance. Then, we only
    kept the last available price per month and calculated the monthly returns as
    the percentage change between the subsequent observations.
  prefs: []
  type: TYPE_NORMAL
- en: In *Step 5*, we calculated the beta as the ratio of the covariance between the
    risky asset and the benchmark to the benchmark’s variance.
  prefs: []
  type: TYPE_NORMAL
- en: In *Step 6*, we separated the target (Amazon’s stock returns) and the features
    (S&P 500 returns) using the `pop` method of a `pandas` DataFrame. Afterward, we
    added the constant to the features (effectively adding a column of ones to the
    DataFrame) with the `add_constant` function.
  prefs: []
  type: TYPE_NORMAL
- en: 'The idea behind adding the intercept to this regression is to investigate whether—after
    estimating the model—the intercept (in the case of the CAPM, also known as **Jensen’s
    alpha**) is zero. If it is positive and significant, it means that— assuming the
    CAPM model is true—the asset or portfolio generates abnormally high risk-adjusted
    returns. There are two possible implications: either the market is inefficient
    or there are some other undiscovered risk factors that should be included in the
    model. This issue is known as the **joint hypothesis problem**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also use the formula notation, which adds the constant automatically.
    To do so, we must import `statsmodels.formula.api` as `smf` and then run the slightly
    modified line: `capm_model = smf.ols(formula="asset ~ market", data=X).fit()`.
    The results of both approaches are the same. You can find the complete code in
    the accompanying Jupyter notebook.'
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, we ran the OLS regression and printed the summary. Here, we could see
    that the coefficient by the market variable (that is, the CAPM beta) is equal
    to the beta that was calculated using the covariance between the asset and the
    market in *Step 5*.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the example above, we assumed there was no risk-free rate, which is a reasonable
    assumption to make nowadays. However, there might be cases when we would like
    to account for a non-zero risk-free rate. To do so, we could use one of the following
    approaches.
  prefs: []
  type: TYPE_NORMAL
- en: Using data from Prof. Kenneth French’s website
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The market premium (*r*[m] - *r*[f] ) and the risk-free rate (approximated by
    the one-month Treasury Bill) can be downloaded from Professor Kenneth French’s
    website (please refer to the *See also* section of this recipe for the link).
  prefs: []
  type: TYPE_NORMAL
- en: Please bear in mind that the definition of the market benchmark used by Prof.
    French is different from the S&P 500 index—a detailed description is available
    on his website. For a description of how to easily download the data, please refer
    to the *Implementing the Fama-French three-factor model* recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Using the 13-Week T-bill
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The second option is to approximate the risk-free rate with, for example, the
    13-Week (3-month) Treasury Bill (Yahoo Finance ticker: `^IRX`).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to learn how to download the data and convert it into the
    appropriate risk-free rate:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Define the length of the period in days:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download the data from Yahoo Finance:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Resample the data to monthly frequency (by taking the last value for each month):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the risk-free return (expressed as daily values) and convert the
    values to monthly:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Plot the calculated risk-free rate:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '*Figure 8.2* shows the visualization of the risk-free rate over time:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.2: The risk-free rate calculated using the 13-Week Treasury Bill'
  prefs: []
  type: TYPE_NORMAL
- en: Using the 3-Month T-bill from the FRED database
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The last approach is to approximate the risk-free rate using the 3-Month Treasury
    Bill (Secondary Market Rate), which can be downloaded from the **Federal Reserve
    Economic Data** (**FRED**) database.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to learn how to download the data and convert it to a monthly
    risk-free rate:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import the library:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download the data from the FRED database:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Convert the obtained risk-free rate to monthly values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Plot the calculated risk-free rate:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'We can compare the results of the two methods by comparing the plots of the
    risk-free rates:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.3: The risk-free rate calculated using the 3-Month Treasury Bill'
  prefs: []
  type: TYPE_NORMAL
- en: The above lets us conclude that the plots look very similar.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Additional resources are available here:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Sharpe, W. F., “Capital asset prices: A theory of market equilibrium under
    conditions of risk,” *The Journal of Finance*, 19, 3 (1964): 425–442.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Risk-free rate data on Prof. Kenneth French’s website: [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/ftp/F-F_Research_Data_Factors_CSV.zip](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/ftp/F-F_Research_Data_Factors_CSV.zip).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimating the Fama-French three-factor model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In their famous paper, Fama and French expanded the CAPM model by adding two
    additional factors explaining the excess returns of an asset or portfolio. The
    factors they considered are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The market factor** (MKT): It measures the excess return of the market, analogical
    to the one in the CAPM.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The size factor** (SMB; Small Minus Big): It measures the excess return of
    stocks with a small market cap over those with a large market cap.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The value factor** (HML; High Minus Low): It measures the excess return of
    value stocks over growth stocks. Value stocks have a high book-to-market ratio,
    while growth stocks are characterized by a low ratio.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Please see the *See also* section for a reference to how the factors are calculated.
  prefs: []
  type: TYPE_NORMAL
- en: 'The model can be represented as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_013.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Or in its simpler form:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_014.png)'
  prefs: []
  type: TYPE_IMG
- en: Here, E(r[i] ) denotes the expected return on asset *i*, r[f] is the risk-free
    rate (such as a government bond), and ![](../Images/B18112_08_020.png) is the
    intercept. The reason for including the intercept is to make sure its value is
    equal to 0\. This confirms that the three-factor model correctly evaluates the
    relationship between the excess returns and the factors.
  prefs: []
  type: TYPE_NORMAL
- en: In the case of a statistically significant, non-zero intercept, the model might
    not evaluate the asset/portfolio return correctly. However, the authors stated
    that the three-factor model is “fairly correct,” even when it is unable to pass
    the statistical test.
  prefs: []
  type: TYPE_NORMAL
- en: Due to the popularity of this approach, these factors became collectively known
    as the **Fama-French Factors** or the **Three-Factor Model**. They have been widely
    accepted in both academia and the industry as stock market benchmarks and they
    are often used to evaluate investment performance.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we estimate the three-factor model using 5 years (2016 to 2020)
    of monthly returns on Apple’s stock.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to implement the three-factor model in Python:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import the libraries:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Define the parameters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download the dataset containing the risk factors:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The downloaded dictionary contains three elements: the monthly factors from
    the requested time frame (indexed as `0`), the corresponding annual factors (indexed
    as `1`), and a short description of the dataset (indexed as `DESCR`).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Select the appropriate dataset and divide the values by 100:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The resulting data should look as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_04.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 8.4: Preview of the downloaded factors'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Download the prices of the risky asset:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the monthly returns on the risky asset:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Merge the datasets and calculate the excess returns:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Estimate the three-factor model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The results of the three-factor model are presented below:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_05.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.5: The summary of the estimated three-factor model'
  prefs: []
  type: TYPE_NORMAL
- en: 'When interpreting the results of the three-factor model, we should pay attention
    to two issues:'
  prefs: []
  type: TYPE_NORMAL
- en: Whether the intercept is positive and statistically significant
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which factors are statistically significant and if their direction matches past
    results (for example, based on a literature study) or our assumptions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In our case, the intercept is positive, but not statistically significant at
    the 5% significance level. Of the risk factors, only the SMB factor is not significant.
    However, a thorough literature study is required to formulate a hypothesis about
    the factors and their direction of influence.
  prefs: []
  type: TYPE_NORMAL
- en: We can also look at the F-statistic that was presented in the regression summary,
    which tests the joint significance of the regression. The null hypothesis states
    that coefficients of all features (factors, in this case), except for the intercept,
    have values equal to 0\. We can see that the corresponding *p*-value is much lower
    than 0.05, which gives us reason to reject the null hypothesis at the 5% significance
    level.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the first two steps, we imported the required libraries and defined the parameters
    – the risky asset (Apple’s stock) and the considered time frame.
  prefs: []
  type: TYPE_NORMAL
- en: In *Step 3,* we downloaded the data using the functionality of the `pandas_datareader`
    library. We had to specify which dataset (see the *There’s more...* section for
    information on inspecting the available datasets) and reader (`famafrench`) we
    wanted to use, as well as the start/end dates (by default, `web.DataReader` downloads
    the last 5 years’ worth of data).
  prefs: []
  type: TYPE_NORMAL
- en: In *Step 4*, we selected only the dataset containing monthly values (indexed
    as `0` in the downloaded dictionary), renamed the column containing the MKT factor,
    and divided all the values by 100\. We did it to arrive at the correct encoding
    of percentages; for example, a value of 3.45 in the dataset represents 3.45%.
  prefs: []
  type: TYPE_NORMAL
- en: In *Steps 5* and *6*, we downloaded and wrangled the prices of Apple’s stock.
    We obtained the monthly returns by calculating the percentage change of the end-of-month
    prices. In *Step 6*, we also changed the formatting of the index to `%Y-%m` (for
    example, `2000-12`) since the Fama-French factors contain dates in such a format.
    Then, we joined the two datasets in *Step 7*.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, in *Step 8*, we ran the regression using the formula notation—we do
    not need to manually add an intercept when doing so. One thing worth mentioning
    is that the coefficient by the MKT variable will not be equal to the CAPM’s beta,
    as there are also other factors in the model, and the factors’ influence on the
    excess returns is distributed differently.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can use the following snippet to see what datasets from the Fama-French
    category are available for download using `pandas_datareader`. For brevity, we
    only display 5 of the approximately 300 available datasets:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Running the snippet returns the following list:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: In the previous edition of the book, we also showed how to directly download
    the CSV files from Prof. French’s website using simple Bash commands from within
    a Jupyter notebook. You can find the code explaining how to do that in the accompanying
    notebook.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Additional resources:'
  prefs: []
  type: TYPE_NORMAL
- en: For details on how all the factors were calculated, please refer to Prof. French’s
    website at [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/Data_Library/f-f_factors.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/Data_Library/f-f_factors.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fama, E. F., and French, K. R., “*Common risk factors in the returns on stocks
    and bonds*,” Journal of Financial Economics, 33, 1 (1993): 3-56'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimating the rolling three-factor model on a portfolio of assets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we learn how to estimate the three-factor model in a rolling
    fashion. What we mean by rolling is that we always consider an estimation window
    of a constant size (60 months, in this case) and roll it through the entire dataset,
    one period at a time. A potential reason for doing such an experiment is to test
    the stability of the results. Alternatively, we could also use an expanding window
    for this exercise.
  prefs: []
  type: TYPE_NORMAL
- en: 'In contrast to the previous recipes, this time, we use portfolio returns instead
    of a single asset. To keep things simple, we assume that our allocation strategy
    is to have an equal share of the total portfolio’s value in each of the following
    stocks: Amazon, Google, Apple, and Microsoft. For this experiment, we use stock
    prices from the years 2010 to 2020.'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to implement the rolling three-factor model in Python:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import the libraries:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Define the parameters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download the factor-related data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download the prices of risky assets from Yahoo Finance:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the monthly returns on the risky assets:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the portfolio returns:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Merge the datasets:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Define a function for the rolling *n*-factor model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: For a version with a docstring explaining the input/output, please refer to
    this book’s GitHub repository.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Estimate the rolling three-factor model and plot the results:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Executing the code results in the following plot:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.6: The coefficients of the rolling three-factor model'
  prefs: []
  type: TYPE_NORMAL
- en: 'By inspecting the preceding plot, we can see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: The intercept is almost constant and very close to 0.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is some variability in the factors, but no sudden reversals or unexpected
    jumps.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In *Steps 3* and *4*, we downloaded data using `pandas_datareader` and `yfinance`.
    This is very similar to what we did in the *Estimating the Fama-French three-factor
    model* recipe, so at this point we will not go into too much detail about this.
  prefs: []
  type: TYPE_NORMAL
- en: In *Step 6*, we calculated the portfolio returns as a weighted average of the
    returns of the portfolio constituents (calculated in *Step 5*). This is possible
    as we are working with simple returns—for more details, please refer to the *Converting
    prices to returns* recipe in *Chapter 2*, *Data Preprocessing*. Bear in mind that
    this simple approach assumes that, at the end of each month, we have exactly the
    same asset allocation (as indicated by the weights). This can be achieved with
    **portfolio rebalancing**, that is, adjusting the allocation after a specified
    period of time to always match the intended weights’ distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Afterward, we merged the two datasets in *Step 7*. In *Step 8*, we defined a
    function for estimating the *n*-factor model using a rolling window. The main
    idea is to loop over the DataFrame we prepared in previous steps and for each
    month, estimate the Fama-French model using the last 5 years’ worth of data (60
    months). By appropriately slicing the input DataFrame, we made sure that we only
    estimate the model from the 60th month onward, to make sure we always have a full
    window of observations.
  prefs: []
  type: TYPE_NORMAL
- en: Proper software engineering best practices would suggest writing some assertions
    to make sure the types of the inputs are as we intended them to be, or that the
    input DataFrame contains the necessary columns. However, we have not done this
    here for brevity.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we applied the defined function to the prepared DataFrame and plotted
    the results.
  prefs: []
  type: TYPE_NORMAL
- en: Estimating the four- and five-factor models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we implement two extensions of the Fama-French three-factor
    model.
  prefs: []
  type: TYPE_NORMAL
- en: First, **Carhart’s four-factor model:** The underlying assumption of this extension
    is that, within a short period of time, a winner stock will remain a winner, while
    a loser will remain a loser. An example of a criterion for classifying winners
    and losers could be the last 12-month cumulative total returns. After identifying
    the two groups, we long the winners and short the losers within a certain holding
    period.
  prefs: []
  type: TYPE_NORMAL
- en: '**The momentum factor** (WML; Winners Minus Losers) measures the excess returns
    of the winner stocks over the loser stocks in the past 12 months (please refer
    to the *See also* section of this recipe for references on the calculations of
    the momentum factor).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The four-factor model can be expressed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_015.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The second extension is **Fama-French’s five-factor model**.Fama and French
    expanded their three-factor model by adding two factors:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The profitability factor** (RMW; Robust Minus Weak) measures the excess returns
    of companies with high profit margins (robust profitability) over those with lower
    profits (weak profitability).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The investment factor** (CMA; Conservative Minus Aggressive) measures the
    excess returns of firms with low investment policies (conservative) over those
    investing more (aggressive).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The five-factor model can be expressed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_016.png)'
  prefs: []
  type: TYPE_IMG
- en: Like in all factor models, if the exposure to the risk factors captures all
    possible variations in expected returns, the intercept (![](../Images/B18112_08_017.png))
    for all the assets/portfolios should be equal to zero.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we explain monthly returns on Amazon from 2016 to 2020 with
    the four- and five-factor models.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to implement the four- and five-factor models in Python:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import the libraries:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Specify the risky asset and the time horizon:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download the risk factors from Prof. French’s website:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download the data of the risky asset from Yahoo Finance:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Calculate the monthly returns:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Merge the datasets for the four-factor model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Merge the datasets for the five-factor model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Estimate the four-factor model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '*Figure 8.7* shows the results:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_07.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 8.7: The summary of the estimated four-factor model'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Estimate the five-factor model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '*Figure 8.8* shows the results:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.8: The summary of the estimated five-factor model'
  prefs: []
  type: TYPE_NORMAL
- en: 'According to the five-factor model, Amazon’s excess returns are negatively
    exposed to most of the factors (all but the market factor). Here, we present an
    example of the interpretation of the coefficients: an increase by 1 percentage
    point in the market factor results in an increase of 0.015 p.p. In other words,
    for a 1% return by the market factor, we can expect our portfolio (Amazon’s stock)
    to return 1.5117 * 1% in excess of the risk-free rate.'
  prefs: []
  type: TYPE_NORMAL
- en: Similar to the three-factor model, if the five-factor model fully explains the
    excess stock returns, the estimated intercept should be statistically indistinguishable
    from zero (which is the case for the considered problem).
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In *Step 2*, we defined the parameters—the ticker of the considered stock and
    timeframes.
  prefs: []
  type: TYPE_NORMAL
- en: In *Step 3*, we downloaded the necessary datasets using `pandas_datareader`,
    which provides us with a convenient way of downloading the risk factor-related
    data without manually downloading the CSV files. For more information on this
    process, please refer to the *Estimating the Fama-French three-factor model* recipe.
  prefs: []
  type: TYPE_NORMAL
- en: In *Steps 4* and *5*, we downloaded Amazon’s stock prices and calculated the
    monthly returns using the previously explained methodology.
  prefs: []
  type: TYPE_NORMAL
- en: In *Steps 6* and *7*, we joined all the datasets, renamed the columns, and calculated
    the excess returns. When using the `join` method without specifying what we want
    to join on (the `on` argument), the default is the index of the DataFrames.
  prefs: []
  type: TYPE_NORMAL
- en: This way, we prepared all the necessary inputs for the four- and five-factor
    models. We also had to divide all the data we downloaded from Prof. French’s website
    by 100 to arrive at the correct scale.
  prefs: []
  type: TYPE_NORMAL
- en: SMB factor in the five-factor dataset is calculated differently compared to
    how it is in the three-factor dataset. For more details, please refer to the link
    in the *See also* section of this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: In *Step 8* and *Step 9*, we estimated the models using the functional form
    of OLS regression from the `statsmodels` library. The functional form automatically
    adds the intercept to the regression equation.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For details on the calculation of the factors, please refer to the following
    links:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Momentum factor: [https://mba.tuck.dartmouth.edu/pages/faculty/ken.french/Data_Library/det_mom_factor.html](https://mba.tuck.dartmouth.edu/pages/faculty/ken.french/Data_Library/det_mom_factor.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Five-factor model: [https://mba.tuck.dartmouth.edu/pages/faculty/ken.french/Data_Library/f-f_5_factors_2x3.html](https://mba.tuck.dartmouth.edu/pages/faculty/ken.french/Data_Library/f-f_5_factors_2x3.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For papers introducing the four- and five-factor models, please refer to the
    following links:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Carhart, M. M. (1997), “*On Persistence in Mutual Fund Performance*,” The Journal
    of Finance, 52, 1 (1997): 57-82'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fama, E. F. and French, K. R. 2015\. “A five-factor asset pricing model,” Journal
    of Financial Economics, 116(1): 1-22: [https://doi.org/10.1016/j.jfineco.2014.10.010](https://doi.org/10.1016/j.jfineco.2014.10.010)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimating cross-sectional factor models using the Fama-MacBeth regression
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous recipes, we have covered estimating different factor models
    using a single asset or portfolio as the dependent variable. However, we can estimate
    the factor models for multiple assets at once, using cross-section (panel) data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Following this approach, we can:'
  prefs: []
  type: TYPE_NORMAL
- en: Estimate the portfolios’ exposure to the risk factors and learn how much those
    factors drive the portfolios’ returns
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understand how much taking a given risk is worth by knowing the premium that
    the market pays for the exposure to a certain factor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Knowing the risk premiums, we can then estimate the returns for any portfolio
    provided we can approximate that portfolio’s exposure to the risk factors.
  prefs: []
  type: TYPE_NORMAL
- en: 'While estimating cross-sectional regression, we can encounter multiple problems
    due to the fact that some assumptions of linear regression might not hold. We
    might encounter the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Heteroskedasticity and serial correlation, leading to the covariation of residuals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multicollinearity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Measurement errors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To solve those issues, we can use a technique called the **Fama-MacBeth regression**,
    which is a two-step procedure specifically designed to estimate the premiums rewarded
    by the market for the exposure to certain risk factors.
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Obtain the factor loadings by estimating *N* (the number of portfolios/assets)
    time-series regressions of excess returns on the factors:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_018.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Obtain the risk premiums by estimating *T* (the number of periods) cross-sectional
    regressions, one for each period:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_019.png)'
  prefs: []
  type: TYPE_IMG
- en: In this recipe, we estimate the Fama-MacBeth regression using five risk factors
    and the returns of 12 industry portfolios, also available on Prof. French’s website.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Execute the following steps to estimate the Fama-MacBeth regression:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import the libraries:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Specify the time horizon:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download and adjust the risk factors from Prof. French’s website:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download and adjust the returns of 12 Industry Portfolios from Prof. French’s
    website:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Drop the risk-free rate from the factor dataset:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Estimate the Fama-MacBeth regression and print the summary:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Running the snippet generates the following summary:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.9: The results of the Fama-MacBeth regression'
  prefs: []
  type: TYPE_NORMAL
- en: The results in the table are average risk premiums from the *T* cross-sectional
    regressions.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also print the full summary (containing the risk premiums and each portfolio’s
    factor loadings). To do so, we need to run the following line of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the first two steps, we imported the required libraries and defined the start
    and end date of our exercise. In total, we will be using 11 years of monthly data,
    resulting in 132 observations of the variables (denoted as *T* ). For the end
    date, we had to specify `2020-12`. Using `2020` alone would result in the downloaded
    datasets ending with January 2020.
  prefs: []
  type: TYPE_NORMAL
- en: In *Step 3*, we downloaded the five-factor data set using `pandas_datareader`.
    We adjusted the values to express percentages by dividing them by 100\.
  prefs: []
  type: TYPE_NORMAL
- en: In *Step 4*, we downloaded the returns on 12 Industry Portfolios from Prof.
    French’s website (please see the link in the *See also* section for more details
    on the dataset). We have also adjusted the values by dividing them by 100 and
    calculated the excess returns by subtracting the risk-free rate (available at
    the factor dataset) from each column of the portfolio dataset. We could do that
    easily using the `sub` method as the time periods are an exact match.
  prefs: []
  type: TYPE_NORMAL
- en: In *Step 5*, we dropped the risk-free rate, as we will not be using it anymore
    and it will be easier to estimate the Fama-MacBeth regression model with no redundant
    columns in the DataFrames.
  prefs: []
  type: TYPE_NORMAL
- en: In the last step, we instantiated an object of the `LinearFactorModel` class
    and provided both datasets as arguments. Then, we used the `fit` method to estimate
    the model. Lastly, we printed the summary.
  prefs: []
  type: TYPE_NORMAL
- en: You might notice a small difference between `linearmodels` and `scikit-learn`.
    In the latter, we provide the data while calling the `fit` method. With `linearmodels`,
    we had to provide the data while creating an instance of the `LinearFactorModel`
    class.
  prefs: []
  type: TYPE_NORMAL
- en: 'In `linearmodels`, you can also use the formula notation (as we have done when
    estimating the factor models using `statsmodels`). To do so, we need to use the
    `from_formula` method. An example could look as follows: `LinearFactorModel.from_formula(formula,
    data)`, where `formula` is the string containing the formula and `data` is an
    object containing both the portfolios/assets and the factors.'
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have already estimated the Fama-MacBeth regression using the `linearmodels`
    library. However, it might strengthen our understanding of the procedure to carry
    out the two steps manually.
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following steps to carry out the two steps of the Fama-MacBeth
    procedure separately:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Import the libraries:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'For the first step of the Fama-MacBeth regression, estimate the factor loadings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Store the factor loadings in a DataFrame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Running the code generates the following table containing the factor loadings:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_10.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 8.10: First step of the Fama-MacBeth regression—the estimated factor
    loadings'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: We can compare those numbers to the output of the full summary from the `linearmodels`
    library.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'For the second step of the Fama-MacBeth regression, estimate the risk premiums:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Store the risk premiums in a DataFrame:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Running the code generates the following table containing the risk premiums
    over time:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](../Images/B18112_08_11.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 8.11: Second step of the Fama-MacBeth regression—the estimated risk
    premiums over time'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Calculate the average risk premiums:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Running the snippet returns:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The risk premiums calculated above match the ones obtained from the `linearmodels`
    library.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Documentation of the `linearmodels` library can be a good resource for learning
    about panel regression models (and not only that—it also contains utilities for
    instrumental variables models and so on) and their implementation in Python: [https://bashtage.github.io/linearmodels/index.html](https://bashtage.github.io/linearmodels/index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Description of the 12 Industry Portfolios dataset: [https://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library/det_12_ind_port.html](https://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library/det_12_ind_port.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Further reading about the Fama-MacBeth procedure:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Fama, E. F., and MacBeth, J. D., “*Risk, return, and equilibrium: Empirical
    tests*,” Journal of Political Economy, 81, 3 (1973): 607-636'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fama, E. F., “*Market efficiency, long-term returns, and behavioral finance*,”
    Journal of Financial Economics, 49, 3 (1998): 283-306'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have constructed some of the most popular factor models.
    We have started with the simplest one-factor model (the CAPM) and then explained
    how to approach more advanced three-, four-, and five-factor models. We have also
    described how we can use the Fama-MacBeth regression to estimate the factor models
    for multiple assets with appropriate cross-section (panel) data.
  prefs: []
  type: TYPE_NORMAL
