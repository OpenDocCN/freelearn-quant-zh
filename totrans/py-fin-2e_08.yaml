- en: Chapter 8. Time-Series Analysis
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章 时间序列分析
- en: In finance and economics, a huge amount of our data is in the format of time-series,
    such as stock prices and **Gross Domestic Products** (**GDP**). From [Chapter
    4](ch04.html "Chapter 4. Sources of Data"), *Sources of Data*, it is shown that
    from Yahoo!Finance, we could download daily, weekly, and monthly historical price
    time-series. From **Federal Reserve Bank's Economics Data Library** (**FRED**),
    we could retrieve many historical time-series such as GDP. For time-series, there
    exist many issues, such as how to estimate returns from historical price data,
    how to merge datasets with the same or different frequencies, seasonality, and
    detect auto-correlation. Understanding those properties is vitally important for
    our knowledge development.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融学和经济学中，我们的大量数据都是时间序列格式，例如股票价格和**国内生产总值**（**GDP**）。从[第4章](ch04.html "第4章 数据来源")，*数据来源*中可以看出，我们可以从Yahoo!Finance下载日、周和月的历史价格时间序列。从**美联储经济数据图书馆**（**FRED**），我们可以提取许多历史时间序列数据，如GDP。对于时间序列数据，存在许多问题，例如如何从历史价格数据估算回报，如何合并具有相同或不同频率的数据集，季节性，以及检测自相关。理解这些属性对于我们的知识发展至关重要。
- en: 'In this chapter, the following topics will be covered:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Introduction to time-series analysis
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析简介
- en: Design a good date variable, and merging different datasets by date
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计一个好的日期变量，并按日期合并不同的数据集
- en: Normal distribution and normality test
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正态分布和正态性检验
- en: Term structure of interest rates, 52-week high, and low trading strategy
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利率期限结构、52周最高和最低交易策略
- en: Return estimation and converting daily returns to monthly or annual returns
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回报估算和将日回报转换为月回报或年回报
- en: T-test, F-test, and Durbin-Watson test for autocorrelation
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: T检验、F检验和自相关的Durbin-Watson检验
- en: Fama-MacBeth regression
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fama-MacBeth回归
- en: Roll (1984) spread, Amihud's (2002) illiquidity, and Pastor and Stambaugh's
    (2003) liquidity measure
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Roll（1984）扩展，Amihud（2002）流动性不足指标，以及Pastor和Stambaugh（2003）流动性度量
- en: January effect and weekday effect
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一月效应和星期几效应
- en: Retrieving high-frequency data from Google Finance and Prof. Hasbrouck's TORQ
    database (Trade, Order, Report, and Quotation)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Google Finance和哈斯布鲁克教授的TORQ数据库（交易、订单、报告和报价）中提取高频数据
- en: Introduction to CRSP (Center for Research in Security Prices) database
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍CRSP（证券价格研究中心）数据库
- en: Introduction to time-series analysis
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列分析简介
- en: 'Most finance data is in the format of time-series, see the following several
    examples. The first one shows how to download historical, daily stock price data
    from Yahoo!Finance for a given ticker''s beginning and ending dates:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数金融数据都是时间序列格式，以下是几个示例。第一个示例展示了如何从Yahoo!Finance下载给定股票代码的历史每日股票价格数据，包括起始和结束日期：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The output is shown here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![Introduction to time-series analysis](img/B06175_08_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列分析简介](img/B06175_08_01.jpg)'
- en: 'The type of the data is `numpy.recarray` as the `type(x)` would show. The second
    example prints the first several observations from two datasets called `ffMonthly.pkl`
    and `usGDPquarterly.pkl`, and both are available from the author''s website, such
    as [http://canisius.edu/~yany/python/ffMonthly.pkl](http://canisius.edu/~yany/python/ffMonthly.pkl):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型是`numpy.recarray`，如`type(x)`所示。第二个示例打印了两个名为`ffMonthly.pkl`和`usGDPquarterly.pkl`的数据集中的前几个观察值，两个数据集都可以从作者网站获取，例如[http://canisius.edu/~yany/python/ffMonthly.pkl](http://canisius.edu/~yany/python/ffMonthly.pkl)：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The related output is shown here:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 相关输出如下所示：
- en: '![Introduction to time-series analysis](img/B06175_08_02.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列分析简介](img/B06175_08_02.jpg)'
- en: 'There is one end of chapter problem which is designed to *merge* discrete data
    with the daily data. The following program retrieves the daily price data from
    Google finance:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个章节末的问题，旨在将*离散数据*与日常数据合并。以下程序从Google Finance提取每日价格数据：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The corresponding output is shown here:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对应的输出如下所示：
- en: '![Introduction to time-series analysis](img/B06175_08_03.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列分析简介](img/B06175_08_03.jpg)'
- en: 'To get the current stock quote, we have the following program. Note that the
    output is for January 21, 2017:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获取当前的股票报价，我们有以下程序。请注意，输出结果为2017年1月21日的数据：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Introduction to time-series analysis](img/B06175_08_04.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列分析简介](img/B06175_08_04.jpg)'
- en: 'By using the next Python program, the **Gross Domestic Product** (**GDP**)
    data from January 1947 to June 2016 would be retrieved:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用下列Python程序，可以提取1947年1月到2016年6月的**国内生产总值**（**GDP**）数据：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The output is shown here:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![Introduction to time-series analysis](img/B06175_08_05.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![时间序列分析简介](img/B06175_08_05.jpg)'
- en: Merging datasets based on a date variable
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于日期变量合并数据集
- en: To make our time-series more manageable, it is a great idea to generate a `date`
    variable. When talking about such a variable, readers could think about year (YYYY),
    year and month (YYYYMM) or year, month, and day (YYYYMMDD). For just the year,
    month, and day combination, we could have many forms. Using January 20, 2017 as
    an example, we could have 2017-1-20, 1/20/2017, 20Jan2017, 20-1-2017, and the
    like. In a sense, a true date variable, in our mind, could be easily manipulated.
    Usually, the true `date` variable takes a form of *year-month-day* or other forms
    of its variants. Assume the date variable has a value of 2000-12-31\. After adding
    one day to its value, the result should be 2001-1-1.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地管理我们的时间序列，生成一个`date`变量是一个很好的主意。谈到这样的变量时，读者可以考虑年份（YYYY）、年份和月份（YYYYMM）或年份、月份和日期（YYYYMMDD）。对于仅包含年份、月份和日期的组合，我们可以有多种形式。以2017年1月20日为例，我们可以有2017-1-20、1/20/2017、20Jan2017、20-1-2017等。从某种意义上讲，真正的日期变量在我们看来应该是易于操作的。通常，真正的`date`变量采取*年-月-日*或其变种的其他形式。假设日期变量的值为2000-12-31，在其值上加一天后，结果应为2001-1-1。
- en: Using pandas.date_range() to generate one dimensional time-series
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 pandas.date_range() 生成一维时间序列
- en: 'We could easily use the `pandas.date_range()` function to generate our time-series;
    refer to the following example:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以轻松使用`pandas.date_range()`函数生成我们的时间序列；请参见以下示例：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the preceding program, since the `sp.random.seed()` function is applied,
    readers should get the same output if he/she uses the same seed. The output is
    shown here:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的程序中，由于使用了`sp.random.seed()`函数，如果读者使用相同的种子，则应获得相同的输出。输出如下所示：
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To better facilitate working with time-series data, in the following program,
    the `pandas.read_csv()` function is used, see the following code:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更方便地处理时间序列数据，在以下程序中使用了`pandas.read_csv()`函数，参见以下代码：
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The output is shown here:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![Using pandas.date_range() to generate one dimensional time-series](img/B06175_08_06.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![使用 pandas.date_range() 生成一维时间序列](img/B06175_08_06.jpg)'
- en: 'To see the format of date, we have the following code:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看日期格式，我们有以下代码：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Using pandas.date_range() to generate one dimensional time-series](img/B06175_08_07.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![使用 pandas.date_range() 生成一维时间序列](img/B06175_08_07.jpg)'
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Using pandas.date_range() to generate one dimensional time-series](img/B06175_08_08.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![使用 pandas.date_range() 生成一维时间序列](img/B06175_08_08.jpg)'
- en: 'In the following program, the `matplotlib.finance.quotes_historical_yahoo_ochl()`
    function is applied:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下程序中，应用了`matplotlib.finance.quotes_historical_yahoo_ochl()`函数：
- en: '[PRE10]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The output is shown here:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '![Using pandas.date_range() to generate one dimensional time-series](img/B06175_08_09.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![使用 pandas.date_range() 生成一维时间序列](img/B06175_08_09.jpg)'
- en: 'Note that the index is in a form of date format, see the following code. For
    the meaning of `.strftime("%Y")`, see *Table 8.2*:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，索引是日期格式，参见以下代码。有关`.strftime("%Y")`的含义，请参见*表8.2*：
- en: '[PRE11]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Here are several ways to define a `date` variable:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几种定义`date`变量的方法：
- en: '| Function | Description | Examples |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 描述 | 示例 |'
- en: '| --- | --- | --- |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `pandas.date_range` | 1\. For a range of dates | `pd.date_range(''1/1/2017'',
    periods=252)` |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `pandas.date_range` | 1\. 生成一系列日期 | `pd.date_range(''1/1/2017'', periods=252)`
    |'
- en: '| `datetime.date` | 2\. One day | `>>>from datetime import datetime``>>>datetime.date(2017,1,20)`
    |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `datetime.date` | 2\. 一天 | `>>>from datetime import datetime``>>>datetime.date(2017,1,20)`
    |'
- en: '| `datetime.date.today()` | 3\. Get today''s value | `>>>datetime.date.today()``datetime.date(2017,
    1, 26)` |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `datetime.date.today()` | 3\. 获取今天的日期 | `>>>datetime.date.today()``datetime.date(2017,
    1, 26)` |'
- en: '| `datetime.now()` | 4\. Get the current time | `>>>from datetime import datetime``>>>datetime.now()``datetime.datetime(2017,
    1, 26, 8, 58, 6, 420000)` |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `datetime.now()` | 4\. 获取当前时间 | `>>>from datetime import datetime``>>>datetime.now()``datetime.datetime(2017,
    1, 26, 8, 58, 6, 420000)` |'
- en: '| `relativedelta()` | 5\. Add certain numbers of days, months, or years to
    a date variable | `>>>from datetime import datetime``>>>today=datetime.today().date()``>>>print(today)``2017-01-26``>>>print(today+relativedelta(days=31))``2017-02-26`
    |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `relativedelta()` | 5\. 向日期变量添加一定数量的天、月或年 | `>>>from datetime import datetime``>>>today=datetime.today().date()``>>>print(today)``2017-01-26``>>>print(today+relativedelta(days=31))``2017-02-26`
    |'
- en: 'Retrieving the year, month, and day from a `date` variable is used quite frequently
    when dealing with time-series—see the following Python program by using the `strftime()`
    function. The corresponding output is in the following right panel. The format
    of those results of year, month, and day, is string:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 从`date`变量中提取年份、月份和日期在处理时间序列时非常常见——请参见以下使用`strftime()`函数的Python程序。相应的输出显示在右侧面板中。年份、月份和日期的结果格式是字符串：
- en: '[PRE12]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The following table summarizes its usages. For more details, see the link at:
    [http://strftime.org/](http://strftime.org/):'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格总结了它的用法。欲了解更多详细信息，请查看链接：[http://strftime.org/](http://strftime.org/)：
- en: '| Function | Description | Examples |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 描述 | 示例 |'
- en: '| --- | --- | --- |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `.strftime("%Y")` | 1\. 4-digit year string | `a=datetime.date(2017,1,2)``a.strftime("%Y")`
    |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `.strftime("%Y")` | 1\. 四位数字的年份字符串 | `a=datetime.date(2017,1,2)``a.strftime("%Y")`
    |'
- en: '| `.strftime("%y")` | 2\. 2-digit year string | `a.strftime("%y")` |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `.strftime("%y")` | 2\. 两位数字的年份字符串 | `a.strftime("%y")` |'
- en: '| `.strftime("%m")` | 3\. Month string | `a.strftime("%m")` |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `.strftime("%m")` | 3\. 月份字符串 | `a.strftime("%m")` |'
- en: '| `.strftime("%d")` | 4\. Day string | `a.strftime("%d")` |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `.strftime("%d")` | 4\. 日期字符串 | `a.strftime("%d")` |'
- en: Return estimation
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回报估算
- en: 'With price data, we could calculate returns. In addition, sometimes we have
    to convert daily returns to weekly or monthly, or convert monthly returns to quarterly
    or annual ones. Thus, understanding how to estimate returns and their conversion
    is vital. Assume that we have the following four prices:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 有了价格数据，我们可以计算回报。此外，有时我们需要将日回报转换为周回报或月回报，或者将月回报转换为季回报或年回报。因此，理解如何估算回报及其转换是至关重要的。假设我们有以下四个价格：
- en: '[PRE13]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'It is important to know how these prices are sorted. If the first price happened
    before the second price, then the first return should be *(1.1-1)/1=10%*. Next,
    we learn how to retrieve the first *n-1* and the last *n-1* records from an *n*
    record array. To list the first *n-1* price, we use `p[:-1]`, while for the last
    three prices we use `p[1:]` as shown in the following code:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 了解这些价格是如何排序的非常重要。如果第一个价格发生在第二个价格之前，那么第一个回报应该是*(1.1-1)/1=10%*。接下来，我们学习如何从一个*n*条记录的数组中提取前*n-1*条和后*n-1*条记录。要列出前*n-1*个价格，我们使用`p[:-1]`，而对于最后三个价格，我们使用`p[1:]`，如以下代码所示：
- en: '[PRE14]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To estimate returns, we could use the following code:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要估算回报，我们可以使用以下代码：
- en: '[PRE15]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'When given two prices of *x1* and *x2* and assume that *x2* is behind *x1*,
    we could use *ret=(x2-x1)/x1*. Alternatively, we could use *ret=x2/x1-1*. Thus,
    for the preceding example, we could use `ret=p[1:]/p[:-1]-1`. Obviously, this
    second method would avoid certain typing errors. On the other hand, if the prices
    are arranged in the reverse order, for example, the first one is the latest price
    and the last one is the oldest price, then we have to estimate returns in the
    following way:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当给定两个价格 *x1* 和 *x2*，并假设 *x2* 在 *x1* 之后，我们可以使用 *ret=(x2-x1)/x1*。或者，我们可以使用 *ret=x2/x1-1*。因此，对于前面的例子，我们可以使用
    `ret=p[1:]/p[:-1]-1`。显然，这种第二种方法可以避免某些输入错误。另一方面，如果价格顺序颠倒了，例如，第一个是最新价格，最后一个是最旧价格，那么我们必须以以下方式估算回报：
- en: '[PRE16]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'As it is mentioned in [Chapter 7](ch07.html "Chapter 7. Multifactor Models
    and Performance Measures"), *Multifactor Models and Performance Measures* we could
    use `.diff()` and `.shift()` functions to estimate returns. See the following
    code:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在[第7章](ch07.html "第7章. 多因子模型与绩效评估")中提到的，*多因子模型与绩效评估*，我们可以使用`.diff()`和`.shift()`函数来估算回报。请参见以下代码：
- en: '[PRE17]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The output is shown here:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '[PRE18]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following code shows how to download daily price data from Yahoo!Finance
    and estimate daily returns:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码演示了如何从Yahoo!Finance下载日价格数据并估算日回报：
- en: '[PRE19]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The first line uploads a function from `matplotlib.finance`. We define the
    beginning and ending dates using a `tuple` data type. The downloaded historical
    daily price data is assigned to `x`. To verify that our returns are correctly
    estimated, we can print a few prices to our screen. Then, we could manually verify
    one or two return values as shown in the following code:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行从`matplotlib.finance`上传一个函数。我们使用`tuple`数据类型定义开始和结束日期。下载的历史日价格数据被赋值给`x`。为了验证我们的回报是否正确估算，我们可以打印几个价格到屏幕上。然后，我们可以手动验证一个或两个回报值，如以下代码所示：
- en: '[PRE20]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Yes, the last result confirms that our first return is correctly estimated.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，最后的结果确认我们的第一个回报是正确估算的。
- en: Converting daily returns to monthly ones
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将日回报转换为月回报
- en: 'Sometimes, we need to convert daily returns to monthly or annual ones. Here
    is our procedure. First, we estimate the daily log returns. We then take a summation
    of all daily log returns within each month to find out the corresponding monthly
    log returns. The final step is to convert a log monthly return to a monthly percentage
    return. Assume that we have the price data of *p0, p1, p2, …., p20*, where *p0*
    is the last trading price of the last month, *p1* is the first price of this month,
    and *p20* is the last price of this month. Thus, this month''s percentage return
    is given as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们需要将日收益率转换为月度或年度收益率。以下是我们的操作步骤。首先，我们估算每日对数收益率。然后，我们对每个月内的所有日对数收益率进行求和，以计算出相应的月度对数收益率。最后一步是将月度对数收益率转换为月度百分比收益率。假设我们有
    *p0, p1, p2, …., p20* 的价格数据，其中 *p0* 是上个月最后一个交易日的价格，*p1* 是本月第一个交易日的价格，*p20* 是本月最后一个交易日的价格。那么，本月的百分比收益率可以表示为：
- en: '![Converting daily returns to monthly ones](img/B06175_08_18.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![将日收益率转换为月收益率](img/B06175_08_18.jpg)'
- en: 'The monthly log return is defined as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 月度对数收益率的定义如下：
- en: '![Converting daily returns to monthly ones](img/B06175_08_19.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![将日收益率转换为月收益率](img/B06175_08_19.jpg)'
- en: 'The relationship between a monthly percentage and a log monthly return is given
    as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 月度百分比收益率与月度对数收益率之间的关系如下所示：
- en: '![Converting daily returns to monthly ones](img/B06175_08_20.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![将日收益率转换为月收益率](img/B06175_08_20.jpg)'
- en: 'The daily log return is defined similarly, as follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 每日对数收益率的定义类似如下：
- en: '![Converting daily returns to monthly ones](img/B06175_08_21.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![将日收益率转换为月收益率](img/B06175_08_21.jpg)'
- en: 'Let''s look at the following summation of log returns:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来看一下以下对数收益率的求和：
- en: '![Converting daily returns to monthly ones](img/B06175_08_22.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![将日收益率转换为月收益率](img/B06175_08_22.jpg)'
- en: 'Based on the previous procedure, the following Python program converts daily
    returns into monthly returns:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 根据之前的步骤，以下 Python 程序将日收益率转换为月收益率：
- en: '[PRE21]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The output is shown here:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Converting daily returns to monthly ones](img/B06175_08_10.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![将日收益率转换为月收益率](img/B06175_08_10.jpg)'
- en: Merging datasets by date
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按日期合并数据集
- en: 'The following program merges the daily adjusted closing price of IBM with the
    daily Fama-French 3-factor time-series. The `ffMonthly.pkl` is available at: [http://canisius.edu/~yany/python/ffDaily.pkl](http://canisius.edu/~yany/python/ffDaily.pkl):'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序将 IBM 的每日调整收盘价与每日 Fama-French 3 因子时间序列进行合并。`ffMonthly.pkl` 文件可在以下网址获取：[http://canisius.edu/~yany/python/ffDaily.pkl](http://canisius.edu/~yany/python/ffDaily.pkl)：
- en: '[PRE22]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The output is given as follows:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE23]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Understanding the interpolation technique
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解插值技术
- en: 'Interpolation is a technique used quite frequently in finance. In the following
    example, we have to replace two missing values, `NaN`, between 2 and 6\. The `pandas.interpolate()`
    function, for a linear interpolation, is used to fill in the two missing values:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 插值是一种在金融领域中非常常用的技术。在以下示例中，我们需要替换 2 和 6 之间的两个缺失值 `NaN`。我们使用 `pandas.interpolate()`
    函数进行线性插值，来填补这两个缺失值：
- en: '[PRE24]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The output is shown here:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '[PRE25]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The preceding method is a linear interpolation. Actually, we could estimate
    a Δ and calculate those missing values manually:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 上述方法是一种线性插值。实际上，我们可以估算一个Δ，并手动计算这些缺失值：
- en: '![Understanding the interpolation technique](img/B06175_08_23.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![理解插值技术](img/B06175_08_23.jpg)'
- en: 'Here, *v2*(*v1*) is the second (first) value and *n* is the number of intervals
    between those two values. For the preceding case, Δ is *(6-2)/3=1.33333*. Thus,
    the next value will be *v1+Δ=2+1.33333=3.33333*. This way, we could continually
    estimate all missing values. Note that if we have several periods with missing
    values, then the delta for each period has to be calculated manually to verify
    the methodology. From the Yahoo!Finance bond page at [http://finance.yahoo.com/bonds](http://finance.yahoo.com/bonds),
    we could get the following information:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*v2*(*v1*) 是第二个（第一个）值，*n* 是这两个值之间的间隔数。对于前面的例子，Δ 为 *(6-2)/3=1.33333*。因此，下一个值将是
    *v1+Δ=2+1.33333=3.33333*。通过这种方式，我们可以不断估算所有缺失的值。注意，如果有多个时期的值缺失，那么每个时期的Δ必须手动计算，以验证方法的正确性。从
    Yahoo!Finance 的债券页面 [http://finance.yahoo.com/bonds](http://finance.yahoo.com/bonds)，我们可以获得以下信息：
- en: '| Maturity | Yield | Yesterday | Last week | Last month |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| 到期日 | 收益率 | 昨日 | 上周 | 上月 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| 3 Month | 0.05 | 0.05 | 0.04 | 0.03 |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| 3个月 | 0.05 | 0.05 | 0.04 | 0.03 |'
- en: '| 6 Month | 0.08 | 0.07 | 0.07 | 0.06 |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| 6个月 | 0.08 | 0.07 | 0.07 | 0.06 |'
- en: '| 2 Year | 0.29 | 0.29 | 0.31 | 0.33 |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| 2年 | 0.29 | 0.29 | 0.31 | 0.33 |'
- en: '| 3 Year | 0.57 | 0.54 | 0.59 | 0.61 |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| 3年 | 0.57 | 0.54 | 0.59 | 0.61 |'
- en: '| 5 Year | 1.34 | 1.32 | 1.41 | 1.39 |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| 5年 | 1.34 | 1.32 | 1.41 | 1.39 |'
- en: '| 10 Year | 2.7 | 2.66 | 2.75 | 2.66 |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| 10年 | 2.7 | 2.66 | 2.75 | 2.66 |'
- en: '| 30 Year | 3.8 | 3.78 | 3.85 | 3.72 |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| 30年 | 3.8 | 3.78 | 3.85 | 3.72 |'
- en: Table 8.3 Term structure interest rate
  id: totrans-128
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表8.3 期限结构利率
- en: 'Based on the tabular data, we have the following code:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 基于表格数据，我们有如下代码：
- en: '[PRE26]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Merging data with different frequencies
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并不同频率的数据
- en: 'The following Python program merges two datasets: US **Gross Domestic Product**
    (**GDP**) data with a quarterly frequency and `ffMonthly`, [http://canisius.edu/~yany/python/ffMonthly.pkl](http://canisius.edu/~yany/python/ffMonthly.pkl)
    with a monthly frequency.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 Python 程序合并了两个数据集：美国**国内生产总值**（**GDP**）数据（按季度频率）和`ffMonthly`，[http://canisius.edu/~yany/python/ffMonthly.pkl](http://canisius.edu/~yany/python/ffMonthly.pkl)（按月度频率）。
- en: 'The interpolation methodology discussed previously is applied to the missing
    months in terms of GDP data. The `ffMonthly` dataset is assumed to be saved in
    the `c:/temp/` directory:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 前述的插值方法应用于GDP数据中缺失的月份。假设`ffMonthly`数据集已保存在`c:/temp/`目录中：
- en: '[PRE27]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The outputs are shown here. Since there is no data for GDP before 1947 and
    the `ffMonthly` time-series starts from July 1926, the last several observations
    of the merged data are more informative:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示。由于1947年之前没有GDP数据，且`ffMonthly`时间序列从1926年7月开始，因此合并数据后的最后几项观测结果提供了更多的信息：
- en: '[PRE28]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'For the second example, we merge a business cycle indicator, called `businessCycle.pkl`,
    available at [http://canisius.edu/~yany/python/businessCycle.pkl](http://canisius.edu/~yany/python/businessCycle.pkl),
    with a monthly frequency and GDP (quarterly frequency). See the following code:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第二个例子，我们合并了一个商业周期指标，名为`businessCycle.pkl`，其可在[http://canisius.edu/~yany/python/businessCycle.pkl](http://canisius.edu/~yany/python/businessCycle.pkl)下载，该数据集按月度频率提供，且与GDP（按季度频率）合并。请参见以下代码：
- en: '[PRE29]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'We could print a few lines to see the results:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以打印几行来查看结果：
- en: '[PRE30]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Tests of normality
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正态性检验
- en: 'In finance, knowledge about normal distribution is very important for two reasons.
    First, stock returns are assumed to follow a normal distribution. Second, the
    error terms from a good econometric model should follow a normal distribution
    with a zero mean. However, in the real world, this might not be true for stocks.
    On the other hand, whether stocks or portfolios follow a normal distribution could
    be tested by various so-called normality tests. The Shapiro-Wilk test is one of
    them. For the first example, random numbers are drawn from a normal distribution.
    As a consequence, the test should confirm that those observations follow a normal
    distribution:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融学中，关于正态分布的知识非常重要，原因有二。首先，股票回报被假设为遵循正态分布。其次，良好的计量经济模型中的误差项应遵循零均值的正态分布。然而，在现实世界中，这可能不适用于股票。另一方面，股票或投资组合是否遵循正态分布，可以通过各种所谓的正态性检验来验证。Shapiro-Wilk检验就是其中之一。对于第一个例子，随机数是从正态分布中抽取的。因此，检验应确认这些观测值遵循正态分布：
- en: '[PRE31]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Assume that our confidence level is 95%, that is, alpha=0.05\. The first value
    of the result is the test statistic, and the second one is its corresponding P-value.
    Since the P-value is so big, much bigger than 0.05, we accept the null hypothesis
    that the returns follow a normal distribution. For the second example, random
    numbers are drawn from a uniform distribution:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们的置信度为95%，即alpha=0.05。结果的第一个值是检验统计量，第二个值是其对应的P值。由于P值非常大，远大于0.05，我们接受零假设，即回报符合正态分布。对于第二个例子，随机数是从均匀分布中抽取的：
- en: '[PRE32]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Since the P-value is close to zero, we reject the null hypothesis. In other
    words, those observations do not follow a normal distribution. The third example
    verifies whether IBM''s returns follow a normal distribution. The last five year''s
    daily data from Yahoo! Finance is used for the test. The null hypothesis is that
    IBM''s daily returns are drawn from a normal distribution:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 由于P值接近零，我们拒绝零假设。换句话说，这些观测值不符合正态分布。第三个例子验证了IBM的回报是否符合正态分布。使用了Yahoo! Finance的过去五年的每日数据进行检验。零假设是IBM的每日回报来自于正态分布：
- en: '[PRE33]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Since this P-value is so close to zero, we reject the null hypothesis. In other
    words, we conclude that IBM''s daily returns do not follow a normal distribution.
    For a normality test, we could also apply the Anderson-Darling test, which is
    a modification of the Kolmogorov-Smirnov test, to verify whether the observations
    follow a particular distribution. See the following code:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 由于此P值接近零，我们拒绝原假设。换句话说，我们得出结论：IBM的日收益不服从正态分布。对于正态性检验，我们还可以应用安德森-达林检验，这是科尔莫哥洛夫-斯米尔诺夫检验的改进版，用于验证观测值是否服从特定分布。请参见以下代码：
- en: '[PRE34]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Here, we have three sets of values: the Anderson-Darling test statistic, a
    set of critical values, and a set of corresponding confidence levels, such as
    15 percent, 10 percent, 5 percent, 2.5 percent, and 1 percent, as shown in the
    previous output. If we choose a 1 percent confidence level—the last value of the
    third set—the critical value is 1.089, the last value of the second set. Since
    our testing statistic is 12.61, which is much higher than the critical value of
    1.089, we reject the null hypothesis. Thus, our Anderson-Darling test leads to
    the same conclusion as our Shapiro-Wilk test. One of the beauties of the `scipy.stats.anderson()`
    test is that we can test for other distributions. After applying the `help()`
    function, we would get the following list. The default distribution is for the
    normality test:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有三组值：安德森-达林检验统计量、一组临界值和一组相应的置信水平，例如15%、10%、5%、2.5%和1%，如前面的输出所示。如果选择1%的置信水平——第三组的最后一个值——临界值为1.089，即第二组的最后一个值。由于我们的检验统计量是12.61，远高于临界值1.089，我们拒绝原假设。因此，我们的安德森-达林检验得出的结论与Shapiro-Wilk检验的结论相同。`scipy.stats.anderson()`检验的一个优点是，我们可以检验其他分布类型。应用`help()`函数后，我们将得到以下列表。默认的分布是用于正态性检验：
- en: '[PRE35]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Estimating fat tails
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 估算胖尾
- en: 'One of the important properties of a normal distribution is that we could use
    mean and standard deviation, the first two moments, to fully define the whole
    distribution. For *n* returns of a security, its first four moments are defined
    in equation (1). The mean or average is defined as follows:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 正态分布的一个重要性质是，我们可以使用均值和标准差这两个参数，即前两个矩，来完全定义整个分布。对于某个证券的*n*个收益，其前四个矩如公式（1）所示。均值或平均值定义如下：
- en: '![Estimating fat tails](img/B06175_08_24.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![估算胖尾](img/B06175_08_24.jpg)'
- en: 'Its (sample) variance is defined by the following equation. The standard deviation,
    that is, σ, is the square root of the variance:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 它的（样本）方差由以下公式定义。标准差，即σ，是方差的平方根：
- en: '![Estimating fat tails](img/B06175_08_25.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![估算胖尾](img/B06175_08_25.jpg)'
- en: 'The skewness defined by the following formula indicates whether the distribution
    is skewed to the left or to the right. For a symmetric distribution, its skewness
    is zero:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 偏度由以下公式定义，表示分布是偏向左侧还是右侧。对于对称分布，偏度为零：
- en: '![Estimating fat tails](img/B06175_08_26.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![估算胖尾](img/B06175_08_26.jpg)'
- en: 'The kurtosis reflects the impact of extreme values because of its power of
    four. There are two types of definitions with and without minus three; refer to
    the following two equations. The reason behind the deduction of three in equation
    (10B), is that for a normal distribution, its kurtosis based on equation (10A)
    is three:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 峰度反映了极端值的影响，因为它的幂次为四。它有两种定义方法，分别有和没有减去三；参见以下两个公式。公式（10B）中减去三的原因是，对于正态分布，根据公式（10A）计算的峰度为三：
- en: '![Estimating fat tails](img/B06175_08_27.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![估算胖尾](img/B06175_08_27.jpg)'
- en: 'Some books distinguish these two equations by calling equation (10B) excess
    kurtosis. However, many functions based on equation (10B) are still named kurtosis.
    We know that a standard normal distribution has a zero mean, unit standard deviation,
    zero skewness, and zero kurtosis (based on equation 10B). The following output
    confirms these facts:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 一些书籍通过称公式（10B）为超额峰度来区分这两个公式。然而，基于公式（10B）的许多函数仍被称为峰度。我们知道，标准正态分布具有零均值、单位标准差、零偏度和零峰度（基于公式10B）。以下输出验证了这些事实：
- en: '[PRE36]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The related output is shown here. Note that since the `scipy.random.seed()`
    function is applied, readers should get the same results if the same seed of 12345
    is used:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 相关输出如下所示。请注意，由于应用了`scipy.random.seed()`函数，读者在使用相同的种子12345时应该得到相同的结果：
- en: '![Estimating fat tails](img/B06175_08_11.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![估算胖尾](img/B06175_08_11.jpg)'
- en: 'The mean, skewness, and kurtosis are all close to zero, while the standard
    deviation is close to one. Next, we estimate the four moments for S&P500 based
    on its daily returns as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 均值、偏度和峰度都接近零，而标准差接近一。接下来，我们基于 S&P500 的每日回报估算其四个矩：
- en: '[PRE37]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The output for those five values, including the number of observations, is
    given here:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这五个值的输出，包括观测数量，结果如下：
- en: '![Estimating fat tails](img/B06175_08_12.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![估算厚尾](img/B06175_08_12.jpg)'
- en: This result is very close to the result in the paper titled *Study of Fat Tail
    Risk* by Cook Pine Capital (2008). Using the same argument, we conclude that the
    SP500 daily returns are skewed to the left, that is, a negative skewness, and
    have fat tails (kurtosis is 20.81 instead of zero).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这一结果与 Cook Pine Capital（2008）撰写的《厚尾风险研究》论文中的结果非常接近。基于相同的论点，我们得出结论，SP500 的每日回报是左偏的，也就是说，存在负偏度，并且具有厚尾（峰度为
    20.81，而非零）。
- en: T-test and F-test
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: T 检验和 F 检验
- en: 'In finance, a T-test could be viewed as one of the most widely used statistical
    hypothesis tests in which the test statistic follows a student''s t distribution
    if the null hypothesis is supported. We know that the mean for a standard normal
    distribution is zero. In the following program, we generate 1,000 random numbers
    from a standard normal distribution. Then, we conduct two tests: test whether
    the mean is 0.5, and test whether the mean is zero:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融学中，T 检验可以被视为最广泛使用的统计假设检验之一，若原假设成立，检验统计量将服从学生 t 分布。我们知道标准正态分布的均值为零。在以下程序中，我们从标准正态分布中生成
    1,000 个随机数。然后，我们进行两个检验：检验均值是否为 0.5，以及检验均值是否为零：
- en: '[PRE38]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'For the first test, in which we test whether the time-series has a mean of
    *0.5*, we reject the null hypothesis since the T-value is *49.76* and the P-value
    is 0\. For the second test, we accept the null hypothesis since the T-value is
    close to -0.26 and the P-value is 0.79\. In the following program, we test whether
    the mean of the daily returns from IBM in 2013 is zero:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第一个检验，我们测试时间序列的均值是否为 *0.5*，由于 T 值为 *49.76* 且 P 值为 0，故我们拒绝原假设。对于第二个检验，由于 T
    值接近 -0.26 且 P 值为 0.79，我们接受原假设。在下面的程序中，我们测试 IBM 2013 年每日回报的均值是否为零：
- en: '[PRE39]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: From the previous results, we know that the average daily returns for IBM is
    0.00004 percent. The T-value is -0.049 while the P-value is 0.96\. Thus, we accept
    the null hypothesis, that is, the daily mean return is statistically the same
    as zero.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的结果来看，我们知道 IBM 的平均每日回报率是 0.00004%。T 值为 -0.049，P 值为 0.96。因此，我们接受原假设，即每日平均回报在统计上与零相同。
- en: Tests of equal variances
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 方差齐性检验
- en: 'Next, we test whether two variances for IBM and DELL are the same or not over
    a five-year period from 2012 to 2016\. The function called `sp.stats.bartlet()`
    performs Bartlett''s test for equal variances with a null hypothesis that all
    input samples are from populations with equal variances. The outputs are the T-value
    and P-value:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们测试 2012 到 2016 年期间，IBM 和 DELL 的两个方差是否相同。名为 `sp.stats.bartlet()` 的函数执行
    Bartlett 方差齐性检验，原假设为所有输入样本来自方差相等的总体。输出结果为 T 值和 P 值：
- en: '[PRE40]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: With a T-value of 108 and a P-value of 0, we conclude that these two stocks
    will have different variances for their daily stock returns from 2012 to 2016
    for any significance level.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: T 值为 108，P 值为 0，我们得出结论，这两只股票在 2012 到 2016 年期间的每日股票回报具有不同的方差，并且无论显著性水平如何，都会有显著差异。
- en: Testing the January effect
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试一月效应
- en: 'In this section, we use IBM''s data to test the existence of the so-called
    **January** effect, which states that stock returns in January are statistically
    different from those in other months. First, we collect the daily price for IBM
    from Yahoo! Finance. Then, we convert daily returns to monthly ones. After that,
    we classify all monthly returns into two groups: returns in January versus returns
    in other months.'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们使用 IBM 的数据来测试所谓的 **一月效应**，即一月的股票回报在统计上不同于其他月份的回报。首先，我们从 Yahoo! Finance
    收集 IBM 的每日价格数据。然后，我们将每日回报转化为月度回报。之后，我们将所有的月度回报分为两组：一月的回报与其他月份的回报。
- en: 'Finally, we test the equality of group means as shown in the following code:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们测试组均值是否相等，代码如下所示：
- en: '[PRE41]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Since the T-value is 1.89 and P-value is 0.058, we conclude that there is no
    January effect if we use IBM as an example and choose a 5 percent significance
    level. A word of caution: we should not generalize this result since it is based
    on just one stock. In terms of the weekday effect, we could apply the same procedure
    to test its existence. One end of chapter problems is designed to test the weekday
    effect based on the same logic.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 由于T值为1.89，P值为0.058，若以IBM为例并选择5%的显著性水平，我们得出结论：没有1月效应。需要注意的是：我们不应该以此结果进行普遍推论，因为它仅基于一只股票。关于星期效应，我们可以应用相同的程序来测试其存在。章节末尾的一个问题旨在基于相同的逻辑测试星期效应。
- en: 52-week high and low trading strategy
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 52周最高和最低交易策略
- en: 'Some investors/researchers argue that we could adopt a 52-week high and low
    trading strategy by taking a long position if today''s price is close to the maximum
    price achieved in the past 52 weeks and taking an opposite position if today''s
    price is close to its 52-week low. Let''s randomly choose a day of 12/31/2016\.
    The following Python program presents this 52-week''s range and today''s position:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 一些投资者/研究人员认为，我们可以通过采用52周最高和最低交易策略来建立一个多头仓位，如果今天的价格接近过去52周的最高价，建立一个反向仓位，如果今天的价格接近其52周最低价。让我们随机选择一个日期：2016年12月31日。以下Python程序展示了这个52周的范围和今天的仓位：
- en: '[PRE42]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The corresponding output is shown as follows:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的输出如下所示：
- en: '![52-week high and low trading strategy](img/B06175_08_13.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![52周最高和最低交易策略](img/B06175_08_13.jpg)'
- en: According to the 52-week high and low trading strategy, we have more incentive
    to buy IBM's stock today. This example is just an illustration on how to make
    a decision. There is nothing done to test whether this is a profitable trading
    strategy. If a reader is interested in testing this 52-week high and low trading
    strategy, he/she should use all stocks to form two portfolios. For more details,
    see George and Huang (2004).
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 根据52周最高和最低交易策略，我们今天有更多的动机购买IBM的股票。这个例子仅仅是展示如何做出决策。并没有进行任何测试来验证这是否是一个有利可图的交易策略。如果读者有兴趣测试这个52周最高和最低交易策略，应该使用所有股票组成两个投资组合。更多细节请参见George和Huang（2004）。
- en: Estimating Roll's spread
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 估算Roll的价差
- en: 'Liquidity is defined as how quickly we can dispose of our asset without losing
    its intrinsic value. Usually, we use spread to represent liquidity. However, we
    need high-frequency data to estimate spread. Later in the chapter, we show how
    to estimate spread directly by using high-frequency data. To measure spread indirectly
    based on daily observations, Roll (1984) shows that we can estimate it based on
    the serial covariance in price changes, as follows:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 流动性被定义为我们可以多快地处置我们的资产而不失去其内在价值。通常，我们使用价差来表示流动性。然而，我们需要高频数据来估算价差。稍后在本章中，我们将展示如何直接利用高频数据来估算价差。为了基于每日观察间接衡量价差，Roll（1984）显示我们可以通过以下方式基于价格变动的序列协方差来估算价差：
- en: '![Estimating Roll''s spread](img/B06175_08_28.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![估算Roll的价差](img/B06175_08_28.jpg)'
- en: Here, *S* is the Roll spread, *Pt* is the closing price of a stock on day,
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*S*是Roll价差，*Pt*是股票在某一天的收盘价，
- en: '![Estimating Roll''s spread](img/B06175_08_39.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![估算Roll的价差](img/B06175_08_39.jpg)'
- en: is Pt-Pt-1, and
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 是Pt-Pt-1，且
- en: '![Estimating Roll''s spread](img/B06175_08_40.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![估算Roll的价差](img/B06175_08_40.jpg)'
- en: ', *t* is the average share price in the estimation period. The following Python
    code estimates Roll''s spread for IBM, using one year''s daily price data from
    Yahoo! Finance:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: ', *t*是估算期内的平均股价。以下Python代码使用来自Yahoo! Finance的一年期每日价格数据来估算IBM的Roll价差：'
- en: '[PRE43]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The corresponding output is shown as follows:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的输出如下所示：
- en: '![Estimating Roll''s spread](img/B06175_08_14.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![估算Roll的价差](img/B06175_08_14.jpg)'
- en: Thus, during that period, Roll's spread for IBM is $1.136\. See the following
    for the major assumption for Roll's model,
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在那段时间里，IBM的Roll价差为$1.136。请看下面Roll模型的主要假设，
- en: '![Estimating Roll''s spread](img/B06175_08_39.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![估算Roll的价差](img/B06175_08_39.jpg)'
- en: and
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 和
- en: '![Estimating Roll''s spread](img/B06175_08_38.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![估算Roll的价差](img/B06175_08_38.jpg)'
- en: .
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: 'The covariance between them is negative. When its value is positive, Roll''s
    model would fail. In a real world, it could occur for many cases. Usually, practitioners
    adopt two approaches: when the spread is negative, we just ignore those cases
    or use other methods to estimate spread. The second approach is to add a negative
    sign in front of a positive covariance.'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 它们之间的协方差为负值。当协方差值为正时，Roll模型将失效。在现实中，这种情况可能会发生在许多案例中。通常，实践者采用两种方法：当价差为负时，我们直接忽略这些情况，或者使用其他方法来估算价差。第二种方法是将正协方差前加上负号。
- en: Estimating Amihud's illiquidity
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 估算 Amihud 的非流动性
- en: 'According to Amihud (2002), liquidity reflects the impact of order flow on
    price. His illiquidity measure is defined as follows:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 Amihud (2002) 的观点，流动性反映了订单流对价格的影响。他的非流动性度量定义如下：
- en: '![Estimating Amihud''s illiquidity](img/B06175_08_29.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![估算 Amihud 的非流动性](img/B06175_08_29.jpg)'
- en: 'Here, *illiq(t)* is the Amihud''s illiquidity measure for month *t*, *Ri* is
    the daily return at day *i*, *Pi* is the closing price at *i*, and *Vi* is the
    daily dollar trading volume at *i*. Since the illiquidity is the reciprocal of
    liquidity, the lower the illiquidity value, the higher the liquidity of the underlying
    security. First, let''s look at an item-by-item division:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，*illiq(t)* 是月份 *t* 的 Amihud 非流动性度量，*Ri* 是第 *i* 天的日收益，*Pi* 是第 *i* 天的收盘价，*Vi*
    是第 *i* 天的日交易量。由于非流动性是流动性的倒数，非流动性值越低，基础证券的流动性越高。首先，我们来看一下逐项分解：
- en: '[PRE44]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'In the following code, we estimate Amihud''s illiquidity for IBM based on trading
    data in October 2013\. The value is *1.21*10-11*. It seems that this value is
    quite small. Actually, the absolute value is not important; the relative value
    matters. If we estimate the illiquidity for WMT over the same period, we would
    find a value of *1.52*10-11*. Since 1.21 is less than 1.52, we conclude that IBM
    is more liquid than WMT. This correlation is represented in the following code:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我们根据 2013 年 10 月的交易数据估算了 IBM 的 Amihud 非流动性。结果是 *1.21*10^-11*。这个值看起来非常小，实际上绝对值并不重要，重要的是相对值。如果我们在同一时期内估算
    WMT 的非流动性，我们会得到 *1.52*10^-11* 的值。由于 1.21 小于 1.52，我们得出结论，IBM 比 WMT 更具流动性。这一相关性在下面的代码中得以表示：
- en: '[PRE45]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Estimating Pastor and Stambaugh (2003) liquidity measure
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 估算 Pastor 和 Stambaugh (2003) 的流动性度量
- en: 'Based on the methodology and empirical evidence in Campbell, Grossman, and
    Wang (1993), Pastor and Stambaugh (2003) designed the following model to measure
    individual stock''s liquidity and the market liquidity:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 Campbell、Grossman 和 Wang (1993) 的方法论和实证证据，Pastor 和 Stambaugh (2003) 设计了以下模型来衡量个股的流动性和市场流动性：
- en: '![Estimating Pastor and Stambaugh (2003) liquidity measure](img/B06175_08_30.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![估算 Pastor 和 Stambaugh (2003) 的流动性度量](img/B06175_08_30.jpg)'
- en: 'Here, *yt* is the excess stock return, *Rt-Rf* , *t*, on day *t*, *Rt* is the
    return for the stock, *Rf,t* is the risk-free rate, *x1*,*t* is the market return,
    and *x2*,*t* is the signed dollar trading volume:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*yt* 是超额股票收益，*Rt-Rf*，*t* 是第 *t* 天，*Rt* 是股票的回报，*Rf,t* 是无风险利率，*x1,t* 是市场回报，*x2,t*
    是签名美元交易量：
- en: '![Estimating Pastor and Stambaugh (2003) liquidity measure](img/B06175_08_44.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![估算 Pastor 和 Stambaugh (2003) 的流动性度量](img/B06175_08_44.jpg)'
- en: '*pt* is the stock price, and volume, *t* is the trading volume. The regression
    is run based on daily data for each month. In other words, for each month, we
    get one *β2* that is defined as the liquidity measure for individual stock. The
    following code estimates the liquidity for IBM. First, we download the IBM and
    S&P500 daily price data, estimate their daily returns, and merge them as follows:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '*pt* 是股价，*t* 是交易量。回归基于每月的每日数据进行。换句话说，对于每个月，我们会得到一个 *β2*，它被定义为个股的流动性度量。以下代码估算了
    IBM 的流动性。首先，我们下载了 IBM 和 S&P500 的每日价格数据，估算它们的日收益，并进行合并：'
- en: '[PRE46]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'In the previous program, *y* is IBM''s excess return at time *t+1*, *x1* is
    the market excess return at time *t*, and *x2* is the signed dollar trading volume
    at time *t*. The coefficient before *x2* is Pastor and Stambaugh''s liquidity
    measure. The corresponding output is given as follows:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的程序中，*y* 是 IBM 在 *t+1* 时刻的超额收益，*x1* 是 *t* 时刻的市场超额收益，*x2* 是 *t* 时刻的签名美元交易量。*x2*
    前的系数就是 Pastor 和 Stambaugh 的流动性度量。相应的输出如下所示：
- en: '[PRE47]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Fama-MacBeth regression
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Fama-MacBeth 回归
- en: 'First, let''s look at the OLS regression by using the `pandas.ols` function
    as follows:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们通过使用 `pandas.ols` 函数来看 OLS 回归，如下所示：
- en: '[PRE48]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'For the Fama-MacBeth regression, we have the following code:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Fama-MacBeth 回归，我们有以下代码：
- en: '[PRE49]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Durbin-Watson
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Durbin-Watson
- en: 'Durbin-Watson statistic is related auto-correlation. After we run a regression,
    the error term should have no correlation, with a mean zero. Durbin-Watson statistic
    is defined as:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: Durbin-Watson 统计量与自相关有关。在我们运行回归后，误差项应当没有相关性，且均值为零。Durbin-Watson 统计量定义如下：
- en: '![Durbin-Watson](img/B06175_08_31.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![Durbin-Watson](img/B06175_08_31.jpg)'
- en: 'Here, *et* is the error term at time *t*, *T* is the total number of error
    term. The Durbin-Watson statistic tests the null hypothesis that the residuals
    from an ordinary least-squares regression are not auto-correlated against the
    alternative that the residuals follow an AR1 process. The Durbin-Watson statistic
    ranges in value from 0 to 4\. A value near 2 indicates non-autocorrelation; a
    value toward 0 indicates positive autocorrelation; a value toward 4 indicates
    negative autocorrelation, see the following table:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，*et* 是时间 *t* 的误差项，*T* 是误差项的总数。Durbin-Watson 统计量用于检验普通最小二乘回归的残差是否没有自相关，零假设是残差没有自相关，备择假设是残差遵循
    AR1 过程。Durbin-Watson 统计量的值范围是 0 到 4。接近 2 的值表示没有自相关；接近 0 的值表示正自相关；接近 4 的值表示负自相关，见下表：
- en: '| Durbin-Watson Test | Description |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| Durbin-Watson 测试 | 描述 |'
- en: '| --- | --- |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| ![Durbin-Watson](img/B06175_08_41.jpg) | No autocorrelation |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| ![Durbin-Watson](img/B06175_08_41.jpg) | 无自相关 |'
- en: '| Towards 0 | Positive auto-correlation |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| 向 0 靠近 | 正自相关 |'
- en: '| Towards 4 | Negative auto-correlation |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| 向 4 靠近 | 负自相关 |'
- en: Table 8.3 Durbin-Watson Test
  id: totrans-238
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表 8.3 Durbin-Watson 测试
- en: 'The following Python program runs a CAPM first by using daily data for IBM.
    The S&P500 is used as the index. The time period is from 1/1/2012 to 12/31/2016,
    a 5-year window. The risk-free rate is ignored in this case. For the residual
    from the regression, a Durbin-Watson test is run to test its autocorrelation:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 Python 程序通过使用 IBM 的日数据首先运行 CAPM。S&P500 被用作指数，时间段为 2012 年 1 月 1 日至 2016 年
    12 月 31 日，为期 5 年的窗口。此处忽略无风险利率。对于回归的残差，运行 Durbin-Watson 测试以检查其自相关性：
- en: '[PRE50]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'The output is shown here:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Durbin-Watson](img/B06175_08_15.jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![Durbin-Watson](img/B06175_08_15.jpg)'
- en: 'A positive of 1.82 close to 2 indicates the autocorrelation might be zero for
    the residuals from the CAPM for IBM. We would have a more definitive answer. Alternatively,
    we simply type the command of `print(result.summary())`, see the following screenshot:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 1.82 接近 2 的正值表示 IBM 的 CAPM 残差的自相关可能为零。我们可以得到更明确的答案。或者，我们只需输入命令 `print(result.summary())`，见下图：
- en: '![Durbin-Watson](img/B06175_08_16.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![Durbin-Watson](img/B06175_08_16.jpg)'
- en: 'The preceding result shows the number of observations is 1,257 and Durbin-Watson
    test is 1.82\. Based on lower (upper) bounds (dL and dU) at: [https://web.stanford.edu/~clint/bench/dwcrit.htm](https://web.stanford.edu/~clint/bench/dwcrit.htm),
    we conclude that 1.82 is not close enough to 2\. Thus, the residuals are still
    positively correlated. The **Akaike Information Criterion** (**AIC**) is a measure
    of the relative quality of statistical models for a given set of data. It has
    the following formula:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 上述结果显示，观测值数量为 1,257，Durbin-Watson 测试值为 1.82。根据以下的上下界限（dL 和 dU）：[https://web.stanford.edu/~clint/bench/dwcrit.htm](https://web.stanford.edu/~clint/bench/dwcrit.htm)，我们可以得出结论，1.82
    距离 2 仍然不够接近。因此，残差仍然存在正自相关。**赤池信息量准则** (**AIC**) 是一个用于衡量给定数据集的统计模型相对质量的指标。其公式如下：
- en: '![Durbin-Watson](img/B06175_08_32.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![Durbin-Watson](img/B06175_08_32.jpg)'
- en: 'Here, *k* is the number of coefficients to be estimated in the model and *L*
    is the value of the log-likelihood. In the preceding example, *k=1* and *L=4089.0*.
    Thus, AIC will be *2*1-2*4089.9=8177.8*. AIC would test whether this is a good
    model in an absolute term. However, given several candidate models, the preferred
    model is the one with the minimum AIC value. AIC rewards goodness of fit (as assessed
    by the likelihood function), but it also includes a penalty that is an increasing
    function of the number of estimated parameters (*k*). BIC stands for Bayesian
    Information Criterion and it is defined here:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，*k* 是模型中需要估计的系数数量，*L* 是对数似然值。在前面的示例中，*k=1* 且 *L=4089.0*。因此，AIC 将是 *2*1-2*4089.9=8177.8*。AIC
    会测试这个模型是否在绝对意义上是好的。然而，给定几个候选模型时，首选模型是具有最小 AIC 值的模型。AIC 奖励拟合优度（通过似然函数评估），但它还包括一个惩罚项，该惩罚项是被估计参数数量（*k*）的递增函数。BIC
    代表贝叶斯信息准则，其定义如下：
- en: '![Durbin-Watson](img/B06175_08_33.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![Durbin-Watson](img/B06175_08_33.jpg)'
- en: 'Here, *n* is the number of observations and *k* is the number of parameters
    to be estimated including the intercept. The Jarque–Bera test is a goodness-of-fit
    test of whether our data has the skewness and kurtosis matching a normal distribution:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*n* 是观测值的数量，*k* 是需要估计的参数数量，包括截距项。Jarque–Bera 检验是一个拟合优度检验，用于检验我们的数据是否具有与正态分布匹配的偏度和峰度：
- en: '![Durbin-Watson](img/B06175_08_34.jpg)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![Durbin-Watson](img/B06175_08_34.jpg)'
- en: Here, *S* is the skewness and *C* is the kurtosis. The null hypothesis is a
    joint hypothesis of the skewness being zero and the excess kurtosis being zero.
    From the preceding result, since Prob. (*JB*) is zero, we reject the null hypothesis.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，*S* 是偏度，*C* 是峰度。原假设是偏度为零和超额峰度为零的联合假设。根据前述结果，由于概率（*JB*）为零，我们拒绝原假设。
- en: Python for high-frequency data
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高频数据的 Python 应用
- en: 'High-frequency data is referred to as second-by-second or millisecond-by-millisecond
    transaction and quotation data. The New York Stock Exchange''s **Trade and Quotation**
    (**TAQ**) database is a typical example ([http://www.nyxdata.com/data-products/daily-taq](http://www.nyxdata.com/data-products/daily-taq)).
    The following program can be used to retrieve high-frequency data from Google
    Finance:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 高频数据是指逐秒或逐毫秒的交易和报价数据。纽约证券交易所的**交易和报价**（**TAQ**）数据库是一个典型的例子（[http://www.nyxdata.com/data-products/daily-taq](http://www.nyxdata.com/data-products/daily-taq)）。以下程序可用于从
    Google Finance 获取高频数据：
- en: '[PRE51]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'In the preceding program, we have two input variables: `ticker` and `path`.
    After we choose `path` with an embedded variable called `ttt`, we replace it with
    our `ticker` using the `string.replace()` function. The first and last five lines
    are shown as follows using the `.head()` and `.tail()` functions:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的程序中，我们有两个输入变量：`ticker` 和 `path`。在选择带有嵌入变量 `ttt` 的 `path` 后，我们使用 `string.replace()`
    函数将其替换为我们的 `ticker`。使用 `.head()` 和 `.tail()` 函数查看前五行和后五行，代码如下所示：
- en: '![Python for high-frequency data](img/B06175_08_17.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![高频数据的 Python 应用](img/B06175_08_17.jpg)'
- en: 'The related web page for the intra-day high-frequency data from Google is located
    at [https://www.google.com/finance/getprices?q=AAPL&i=300&p=10d&f=d,o,%20h,l,c,v](https://www.google.com/finance/getprices?q=AAPL&i=300&p=10d&f=d,o,%20h,l,c,v)
    and its header (first 10) lines are given as follows:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google 的当天高频数据的相关网页位于 [https://www.google.com/finance/getprices?q=AAPL&i=300&p=10d&f=d,o,%20h,l,c,v](https://www.google.com/finance/getprices?q=AAPL&i=300&p=10d&f=d,o,%20h,l,c,v)，其标题（前
    10 行）如下所示：
- en: '[PRE52]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'The objective of the following program is to add a timestamp:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序的目标是添加时间戳：
- en: '[PRE53]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'After running the program, we can observe the following output:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 运行程序后，我们可以观察到以下输出：
- en: '[PRE54]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'To view the first and last several lines, we could use the `.head()` and `.tail()`
    functions as follows:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看前几行和后几行，我们可以使用 `.head()` 和 `.tail()` 函数，方法如下：
- en: '[PRE55]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Since the TAQ database is quite expensive, potentially, most readers might not
    be able to access the data. Fortunately, we have a database called **Trade, Order,
    Report, and Quotation** (**TORQ**). Thanks to Prof. Hasbrouck, the database can
    be downloaded from [http://people.stern.nyu.edu/jhasbrou/Research/](http://people.stern.nyu.edu/jhasbrou/Research/).
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 TAQ 数据库价格昂贵，可能大多数读者无法访问该数据。幸运的是，我们有一个名为**交易、订单、报告和报价**（**TORQ**）的数据库。感谢 Hasbrouck
    教授，数据库可以从 [http://people.stern.nyu.edu/jhasbrou/Research/](http://people.stern.nyu.edu/jhasbrou/Research/)
    下载。
- en: 'From the same web page, we could download the TORQ manual as well. Based on
    Prof. Hasbrouck''s binary datasets, we generate a few corresponding datasets in
    the pickle format of pandas. The **Consolidated Trade** (**CT**) dataset can be
    downloaded from [http://canisius.edu/~yany/python/TORQct.pkl](http://canisius.edu/~yany/python/TORQct.pkl).
    After saving this dataset in `C:\temp`, we can issue the following two lines of
    Python code to retrieve it:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一网页上，我们还可以下载 TORQ 手册。基于 Hasbrouck 教授的二进制数据集，我们生成了几个对应的 pandas pickle 格式数据集。**合并交易**（**CT**）数据集可以从
    [http://canisius.edu/~yany/python/TORQct.pkl](http://canisius.edu/~yany/python/TORQct.pkl)
    下载。将此数据集保存到 `C:\temp` 后，我们可以发出以下两行 Python 代码来获取它：
- en: '[PRE56]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'To view the first and last couple of lines, we use the `.head()` and `.tail()`
    functions as follows:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看前几行和后几行，我们可以使用 `.head()` 和 `.tail()` 函数，方法如下：
- en: '[PRE57]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Since the `ticker` is used as an index, we could list all unique index values
    to find out the names of stocks contained in the dataset as follows:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 `ticker` 被用作索引，我们可以列出所有唯一的索引值，从而找出数据集中包含的股票名称，方法如下：
- en: '[PRE58]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The output is shown here:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示：
- en: '[PRE59]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Spread estimated based on high-frequency data
  id: totrans-274
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于高频数据估算的价差
- en: 'Based on the **Consolidated Quote** (**CQ**) dataset supplied by Prof. Hasbrouck,
    we generate a dataset with the pickle format of pandas, that can be downloaded
    from [http://canisius.edu/~yany/python/TORQcq.pkl](http://canisius.edu/~yany/python/TORQcq.pkl).
    Assume that the following data is located under `C:\temp`:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 基于**合并报价**（**CQ**）数据集，由Hasbrouck教授提供，我们生成一个以pandas pickle格式保存的数据集，可以从[http://canisius.edu/~yany/python/TORQcq.pkl](http://canisius.edu/~yany/python/TORQcq.pkl)下载。假设以下数据位于`C:\temp`目录下：
- en: '[PRE60]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'The output is shown here:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下所示：
- en: '[PRE61]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Again, we could use the `unique()` function to find out all tickers. Assume
    that we are interested in a stock with an `MO` ticker as shown in the following
    code:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以使用`unique()`函数找出所有的股票代码。假设我们对以下代码中显示的`MO`股票代码感兴趣：
- en: '[PRE62]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'It is a good idea to check a few observations. From the first line of the following
    output, we know that spread should be 0.125 (47.125-47.000):'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 检查一些观测值是个好主意。从以下输出的第一行可以看出，价差应为0.125（47.125-47.000）：
- en: '[PRE63]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'To find the mean spread and the mean relative spread, we have the following
    code. The complete program is given as follows:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到平均价差和平均相对价差，我们可以使用以下代码。完整程序如下所示：
- en: '[PRE64]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: In the preceding example, we didn't process or clean the data. Usually, we have
    to process data by adding various filters, such as delete quotes with negative
    spread, `bidsiz` is zero, or `ofrsiz` is zero, before we estimate spread and do
    other estimates.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们没有处理或清理数据。通常，我们需要通过添加各种过滤器来处理数据，例如删除负价差的报价、`bidsiz`为零或`ofrsiz`为零的数据，才能估算价差并进行其他估计。
- en: Introduction to CRSP
  id: totrans-286
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CRSP简介
- en: For this book, our focus is free public data. Thus, we only discuss a few financial
    databases since some readers might from schools with valid subscription. CRSP
    is the one. In this chapter, we mention just three Python datasets.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的重点是免费的公共数据。因此，我们只讨论一些金融数据库，因为部分读者可能来自具有有效订阅的学校。CRSP就是其中之一。在本章中，我们仅提到三个Python数据集。
- en: '**Center for Research in Security Prices** (**CRSP**). It contains all trading
    data, such as closing price, trading volume, and shares outstanding for all listed
    stocks in the US from 1926 onward. Because of its quality and long history, it
    has been used intensively by academic researchers and practitioners. The first
    dataset is called `crspInfo.pkl`, see the following code:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '**证券价格研究中心**（**CRSP**）。它包含了自1926年起所有在美国上市的股票的所有交易数据，如收盘价、交易量和流通股数。由于其数据质量高且历史悠久，学术研究人员和实务工作者广泛使用它。第一组数据称为`crspInfo.pkl`，请参见以下代码：'
- en: '[PRE65]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'The related output is shown here:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 相关输出如下所示：
- en: '[PRE66]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'The `PERMNO` is the stock `ID`, `PERMCO` is the company `ID`, `CUSIP` is security
    `ID`, `FIRMNAME` is the company header name, that is, today''s name, `EXCHANGE`
    is the exchange code, `BEGDATE (ENDDATE)` is when the data is available. The second
    dataset is for market indices, see the following code:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '`PERMNO`是股票`ID`，`PERMCO`是公司`ID`，`CUSIP`是证券`ID`，`FIRMNAME`是公司名称，即今天的名称，`EXCHANGE`是交易所代码，`BEGDATE
    (ENDDATE)`是数据的起始日期（结束日期）。第二组数据是市场指数，参见以下代码：'
- en: '[PRE67]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: The last dataset is for monthly stocks.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一组数据是关于月度股票的。
- en: References
  id: totrans-295
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Please refer to the following articles:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下文章：
- en: '*Amihud and Yakov, 2002*, *Illiquidity and stock returns: cross-section and
    time-series effects*, *Journal of Financial Markets, 5, 31–56*, [http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.145.9505&rep=rep1&type=pdf](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.145.9505&rep=rep1&type=pdf)'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Amihud 和 Yakov, 2002年*, *流动性不足与股票收益：横截面与时间序列效应*, *《金融市场杂志》，5，31–56*，[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.145.9505&rep=rep1&type=pdf](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.145.9505&rep=rep1&type=pdf)'
- en: '*Bali, T. G., Cakici, N., and Whitelaw, R. F., 2011*, *Maxing out: Stocks as
    lotteries and the cross-section of expected returns*, *Journal of Financial Economics,
    99(2), 427–446* [http://www.sciencedirect.com/science/article/pii/S0304405X1000190X](http://www.sciencedirect.com/science/article/pii/S0304405X1000190X)'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Bali, T. G., Cakici, N., 和 Whitelaw, R. F., 2011年*, *最大化：股票作为彩票及预期收益的横截面分析*,
    *《金融经济学杂志》，99(2)，427–446* [http://www.sciencedirect.com/science/article/pii/S0304405X1000190X](http://www.sciencedirect.com/science/article/pii/S0304405X1000190X)'
- en: '*Cook Pine Capital LLC, November 26, 2008, Study of Fat-tail Risk*, [http://www.cookpinecapital.com/pdf/Study%20of%20Fat-tail%20Risk.pdf](http://www.cookpinecapital.com/pdf/Study%20of%20Fat-tail%20Risk.pdf)'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Cook Pine Capital LLC, 2008年11月26日，胖尾风险研究*, [http://www.cookpinecapital.com/pdf/Study%20of%20Fat-tail%20Risk.pdf](http://www.cookpinecapital.com/pdf/Study%20of%20Fat-tail%20Risk.pdf)'
- en: CRSP web site, [http://crsp.com/](http://crsp.com/)
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRSP 网站，[http://crsp.com/](http://crsp.com/)
- en: CRSP user manual, [http://www.crsp.com/documentation](http://www.crsp.com/documentation)
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRSP 用户手册， [http://www.crsp.com/documentation](http://www.crsp.com/documentation)
- en: '*George, T.J., and Hwang, C., 2004*, *The 52-Week High and Momentum Investing,
    Journal of Finance 54(5), 2145–2176*, [http://www.bauer.uh.edu/tgeorge/papers/gh4-paper.pdf](http://www.bauer.uh.edu/tgeorge/papers/gh4-paper.pdf)'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*George, T.J., 和 Hwang, C., 2004,* *52周高点和动量投资，金融学杂志 54(5)，2145–2176，* [http://www.bauer.uh.edu/tgeorge/papers/gh4-paper.pdf](http://www.bauer.uh.edu/tgeorge/papers/gh4-paper.pdf)'
- en: '*Hasbrouck, Joel, 1992*, *Using the TORQ database, New York University*, [http://people.stern.nyu.edu/jhasbrou/Research/Working%20Papers/TORQDOC3.PDF](http://people.stern.nyu.edu/jhasbrou/Research/Working%20Papers/TORQDOC3.PDF)'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Hasbrouck, Joel, 1992,* *使用TORQ数据库，纽约大学，* [http://people.stern.nyu.edu/jhasbrou/Research/Working%20Papers/TORQDOC3.PDF](http://people.stern.nyu.edu/jhasbrou/Research/Working%20Papers/TORQDOC3.PDF)'
- en: '*Jegadeesh, N., and Titman, S., 1993, Returns to Buying Winners and Selling
    Losers: Implications for Stock Market Efficiency, Journal of Finance 48(1), 65–91*,
    [http://www.e-m-h.org/JeTi93.pdf](http://www.e-m-h.org/JeTi93.pdf)'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Jegadeesh, N., 和 Titman, S., 1993, 买入赢家卖出输家的回报：对股市效率的影响，金融学杂志 48(1)，65–91，*
    [http://www.e-m-h.org/JeTi93.pdf](http://www.e-m-h.org/JeTi93.pdf)'
- en: '*Moskowitz, T., and Grinblatt, M., 1999, Do industries explain momentum? Journal
    of Finance 54(4), 2017–2069,* [http://faculty.som.yale.edu/Tobiasmoskowitz/documents/DoIndustriesExplainMomentum.pdf](http://faculty.som.yale.edu/Tobiasmoskowitz/documents/DoIndustriesExplainMomentum.pdf)'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Moskowitz, T., 和 Grinblatt, M., 1999, 行业是否解释了动量？金融学杂志 54(4)，2017–2069，* [http://faculty.som.yale.edu/Tobiasmoskowitz/documents/DoIndustriesExplainMomentum.pdf](http://faculty.som.yale.edu/Tobiasmoskowitz/documents/DoIndustriesExplainMomentum.pdf)'
- en: '*Pastor and Stambaugh, 2003, Liqudity measure and expected stock returns, Journal
    of Political Economy, 642-685,* [http://people.stern.nyu.edu/lpederse/courses/LAP/papers/TransactionCosts/PastorStam.pdf](http://people.stern.nyu.edu/lpederse/courses/LAP/papers/TransactionCosts/PastorStam.pdf)'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Pastor 和 Stambaugh, 2003, 流动性度量与预期股票回报，政治经济学杂志，642-685，* [http://people.stern.nyu.edu/lpederse/courses/LAP/papers/TransactionCosts/PastorStam.pdf](http://people.stern.nyu.edu/lpederse/courses/LAP/papers/TransactionCosts/PastorStam.pdf)'
- en: '*Roll. R., 1984, A Simple Measure of the Effective Bid-Ask Spread in an Efficient
    Market, Journal of Finance, 39, 1127-1139,* [http://onlinelibrary.wiley.com/doi/10.1111/j.1540-6261.1984.tb03897.x/pdf](http://onlinelibrary.wiley.com/doi/10.1111/j.1540-6261.1984.tb03897.x/pdf)'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Roll. R., 1984, 在有效市场中有效的买卖差价简单度量，金融学杂志，39，1127-1139，* [http://onlinelibrary.wiley.com/doi/10.1111/j.1540-6261.1984.tb03897.x/pdf](http://onlinelibrary.wiley.com/doi/10.1111/j.1540-6261.1984.tb03897.x/pdf)'
- en: Appendix A – Python program to generate GDP dataset usGDPquarterly2.pkl
  id: totrans-308
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录A – 生成GDP数据集usGDPquarterly2.pkl的Python程序
- en: 'The first program generates a Python dataset with a `.pkl` extension:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个程序生成一个扩展名为 `.pkl` 的 Python 数据集：
- en: '[PRE68]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'To retrieve the dataset, we use the `pandas.read_pickle()` function. See the
    following code:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检索数据集，我们使用 `pandas.read_pickle()` 函数。请参见以下代码：
- en: '[PRE69]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Appendix B – critical values of F for the 0.05 significance level
  id: totrans-313
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录B – 0.05显著性水平的F临界值
- en: 'The first row is for the degree of freedom for the denominator while the first
    column is for the degree of freedom for the numerator:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行是分母的自由度，第一列是分子的自由度：
- en: '![Appendix B – critical values of F for the 0.05 significance level](img/B06175_08_42.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![附录B – 0.05显著性水平的F临界值](img/B06175_08_42.jpg)'
- en: 'The key part of the program used to generate the preceding table is given here:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 用于生成上表的程序关键部分如下：
- en: '[PRE70]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Appendix C – data case #4 - which political party manages the economy better?'
  id: totrans-318
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录C – 数据案例#4 - 哪个政党更好地管理经济？
- en: 'In the US, people have been seeing many presidential debates among potential
    presidential nominees for the Republican and Democratic parties. One question
    a potential voter likes to ask is, which party could manage the economy better?
    With this term project, we try to ask this question: which party could manage
    the economy better in terms of the performance of the stock market? According
    to the web page of [http://www.enchantedlearning.com/history/us/pres/list.shtml](http://www.enchantedlearning.com/history/us/pres/list.shtml),
    we could find which party a US president belongs to:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 在美国，人们已经看到了许多共和党和民主党潜在总统候选人之间的总统辩论。一个潜在选民常问的问题是，哪个党能够更好地管理经济？在这项期末项目中，我们试图提出这个问题：哪个党能够从股市表现角度更好地管理经济？根据[http://www.enchantedlearning.com/history/us/pres/list.shtml](http://www.enchantedlearning.com/history/us/pres/list.shtml)网页，我们可以找到美国总统所属的政党：
- en: '| President which party time period |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| 总统 所属党派 时间段 |'
- en: '| ![Appendix C – data case #4 - which political party manages the economy better?](img/B06175_08_43.jpg)
    |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| ![附录C – 数据案例#4 - 哪个政党更擅长管理经济？](img/B06175_08_43.jpg) |'
- en: 'Thus, we could generate the following table. The PARTY and RANGE variables
    are from the web page. YEAR2 is the second number of RANGE minus 1, except for
    the last row:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以生成以下表格。PARTY和RANGE变量来自网页，YEAR2是RANGE中第二个数字减去1，除了最后一行：
- en: '| PARTY | RANGE | YEAR1 | YEAR2 |'
  id: totrans-323
  prefs: []
  type: TYPE_TB
  zh: '| 政党 | 范围 | 年份1 | 年份2 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-324
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| Republican | 1923-1929 | 1923 | 1928 |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '| 共和党 | 1923-1929 | 1923 | 1928 |'
- en: '| Republican | 1929-1933 | 1929 | 1932 |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '| 共和党 | 1929-1933 | 1929 | 1932 |'
- en: '| Democrat | 1933-1945 | 1933 | 1944 |'
  id: totrans-327
  prefs: []
  type: TYPE_TB
  zh: '| 民主党 | 1933-1945 | 1933 | 1944 |'
- en: '| Democrat | 1945-1953 | 1945 | 1952 |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '| 民主党 | 1945-1953 | 1945 | 1952 |'
- en: '| Republican | 1953-1961 | 1953 | 1960 |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| 共和党 | 1953-1961 | 1953 | 1960 |'
- en: '| Democrat | 1961-1963 | 1961 | 1962 |'
  id: totrans-330
  prefs: []
  type: TYPE_TB
  zh: '| 民主党 | 1961-1963 | 1961 | 1962 |'
- en: '| Democrat | 1963-1969 | 1963 | 1968 |'
  id: totrans-331
  prefs: []
  type: TYPE_TB
  zh: '| 民主党 | 1963-1969 | 1963 | 1968 |'
- en: '| Republican | 1969-1974 | 1969 | 1973 |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| 共和党 | 1969-1974 | 1969 | 1973 |'
- en: '| Republican | 1974-1977 | 1974 | 1976 |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| 共和党 | 1974-1977 | 1974 | 1976 |'
- en: '| Democrat | 1977-1981 | 1977 | 1980 |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| 民主党 | 1977-1981 | 1977 | 1980 |'
- en: '| Republican | 1981-1989 | 1981 | 1988 |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| 共和党 | 1981-1989 | 1981 | 1988 |'
- en: '| Republican | 1989-1993 | 1989 | 1992 |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| 共和党 | 1989-1993 | 1989 | 1992 |'
- en: '| Democrat | 1993-2001 | 1993 | 2000 |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| 民主党 | 1993-2001 | 1993 | 2000 |'
- en: '| Republican | 2001-2009 | 2001 | 2008 |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| 共和党 | 2001-2009 | 2001 | 2008 |'
- en: '| Democrat | 2009-2017 | 2009 | 2016 |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| 民主党 | 2009-2017 | 2009 | 2016 |'
- en: 'Table 1: Parties and Presidents since 1923'
  id: totrans-340
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表1：自1923年以来的政党与总统
- en: Retrieve monthly stock data.
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取每月股票数据。
- en: 'Classify returns into two groups according to YEAR1 and YEAR2: under Republican
    and under Democratic.'
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据YEAR1和YEAR2将回报分类为两组：共和党下和民主党下。
- en: 'Test the null hypothesis: two group means are equal:![Appendix C – data case
    #4 - which political party manages the economy better?](img/B06175_08_35.jpg)'
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试零假设：两个组的均值相等：![附录C – 数据案例#4 - 哪个政党更擅长管理经济？](img/B06175_08_35.jpg)
- en: 'Discuss your results and answer the following question: are the monthly mean
    returns under both parties equal? Based on the preceding table, readers could
    sort all monthly mean returns into two categories: under Democratic Party and
    under the Republican Party.'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 讨论你的结果并回答以下问题：两党下的月均回报是否相等？根据前面的表格，读者可以将所有月均回报排序为两类：民主党下和共和党下。
- en: Note
  id: totrans-345
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For readers from schools without CRSP subscription, they could download the
    S&P500 market index from Yahoo! Finance. On the other hand, for readers from schools
    with CRSP subscriptions, they could use both **value-weighted market returns**
    (**VWRETD**) and **equal-weighted market index** (**EWRETD**).
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于没有CRSP订阅的学校读者，他们可以从Yahoo! Finance下载S&P500市场指数。另一方面，对于有CRSP订阅的学校读者，他们可以使用**市值加权市场回报**（**VWRETD**）和**等权重市场指数**（**EWRETD**）。
- en: Exercises
  id: totrans-347
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: Which module contains the function called rolling_kurt? How can you use the
    function?
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个模块包含名为rolling_kurt的函数？你如何使用这个函数？
- en: Based on daily data downloaded from Yahoo! Finance, find whether Wal-Mart's
    daily returns follow a normal distribution.
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于从Yahoo! Finance下载的每日数据，检查沃尔玛的日回报是否符合正态分布。
- en: Based on daily returns in 2016, are the mean returns for IBM and DELL the same?
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于2016年的每日回报，IBM和DELL的均值回报是否相同？
- en: Tip
  id: totrans-351
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can use Yahoo! Finance as your source of data
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以使用Yahoo! Finance作为数据来源
- en: How many dividends distributed or stock splits happened over the past 10 years
    for IBM and DELL based on the historical data?
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据历史数据，过去10年IBM和DELL分别分配了多少股息或发生了多少次股票拆分？
- en: Write a Python program to estimate rolling beta on a 3-year window for a few
    stocks such as IBM, WMT, C and MSFT.
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个Python程序，用3年的滚动窗口估算一些股票（如IBM、WMT、C和MSFT）的滚动beta。
- en: 'Assume that we just downloaded the prime rate from the Federal Banks'' data
    library from: [http://www.federalreserve.gov/releases/h15/data.htm](http://www.federalreserve.gov/releases/h15/data.htm).
    We downloaded the time-series for Financial 1-month business day. Write a Python
    program to merge them using:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设我们刚刚从联邦银行的数据库下载了主要利率，网址为：[http://www.federalreserve.gov/releases/h15/data.htm](http://www.federalreserve.gov/releases/h15/data.htm)。我们下载了金融1个月工作日的时间序列数据。编写一个Python程序来合并这些数据，使用：
- en: 'Go to the web page: [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html).'
  id: totrans-356
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问网页：[http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html)。
- en: Click on Fama-French Factor, and download their monthly factors named `F-F_Research_Data_Factors.zip`.
    Unzip the `.zip` file and estimate market monthly returns.
  id: totrans-357
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击 Fama-French 因子，下载名为 `F-F_Research_Data_Factors.zip` 的月度因子文件。解压 `.zip` 文件并估算市场的月度回报。
- en: For example, for July 1926, *market return = 2.65/100+0.22/100*. This file was
    created by `CMPT_ME_BEME_RETS` using the 201212 CRSP database.
  id: totrans-358
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，对于 1926 年 7 月，*市场回报 = 2.65/100 + 0.22/100*。该文件由 `CMPT_ME_BEME_RETS` 使用 201212
    CRSP 数据库创建。
- en: 'Download the monthly and daily Fama-French factors from Prof. French''s data
    library at: [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html).
    Assume that you are holding an SMB portfolio. Answer the following three questions:'
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Prof. French 的数据库下载月度和日度的 Fama-French 因子，网址为：[http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html)。假设你持有一个
    SMB 投资组合。回答以下三个问题：
- en: What is the total return from January 1, 1989 to December 31, 2016 using daily
    data?
  id: totrans-360
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 1989 年 1 月 1 日到 2016 年 12 月 31 日，使用日数据的总回报是多少？
- en: What is the total return from January 1, 1989, to December 31, 2016, using monthly
    data?
  id: totrans-361
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 1989 年 1 月 1 日到 2016 年 12 月 31 日，使用月数据的总回报是多少？
- en: Are they the same? If they are different, explain some reasons that lead to
    their differences.
  id: totrans-362
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们相同吗？如果不同，解释导致它们差异的一些原因。
- en: How to replicate Jagadeech and Tidman (1993) momentum strategy by using Python
    and CRSP data? [Assume that your school has CRSP subscription].
  id: totrans-363
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何通过使用 Python 和 CRSP 数据来复制 Jagadeech 和 Tidman（1993）动量策略？[假设你的学校有 CRSP 订阅]。
- en: 'Write a Python program to estimate returns. The format of your function could
    be `dailyRet(data,sorted=0)`. Then sorted is for how the price is sorted. For
    example, the default value could be from the oldest to the newest, while `sorted=1`
    for the opposite. One related Python program is given here:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个 Python 程序来估算回报。函数的格式可以是 `dailyRet(data,sorted=0)`。其中 `sorted` 参数表示价格的排序方式。例如，默认值可以是从最旧到最新，而
    `sorted=1` 则表示相反的排序。下面给出一个相关的 Python 程序：
- en: '[PRE71]'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Note
  id: totrans-366
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Note that there are two sorting: p1 is before p2 or p1 is after p2.'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，有两种排序方式：p1 在 p2 之前，或者 p1 在 p2 之后。
- en: 'Replicate the table for the critical values of F for the `0.05` significant
    level in Appendix B. The following Python program is offered:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制附录 B 中的 F 临界值表，对于 `0.05` 显著性水平，提供以下 Python 程序：
- en: '[PRE72]'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: In addition, generate the similar tables for 0.01 and 0.10 significant levels.
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，为 0.01 和 0.10 的显著性水平生成类似的表格。
- en: Based on the program to test the January effect, write a Python program to test
    week-day effect.
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于程序测试 1 月效应，编写一个 Python 程序来测试星期几效应。
- en: 'Generate a business cycle indicator. The business cycle data is from the National
    Bureau of Economic Research center. The original starting date is June 1854, [http://www.nber.org/cycles/cyclesmain.html](http://www.nber.org/cycles/cyclesmain.html).
    Since stock data starts from 1926, we could remove data before 1923\. For a peak,
    we assign a positive 1, while for a trough, we assign a negative 1\. Any months
    between those peaks and troughs, we linearly interpolate, see the following Panel
    B. *P* for peak and *T* for trough. *T(t-1)* is for the previous trough and *P(t-1)*
    is for the previous peak:'
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成一个商业周期指标。商业周期数据来自国家经济研究局（National Bureau of Economic Research）。原始起始日期为 1854
    年 6 月，[http://www.nber.org/cycles/cyclesmain.html](http://www.nber.org/cycles/cyclesmain.html)。由于股市数据从
    1926 年开始，我们可以删除 1923 年之前的数据。对于峰值，赋值为正 1，对于谷值，赋值为负 1。任何位于这些峰值和谷值之间的月份，我们进行线性插值，参见下面的
    B 面板。*P* 代表峰值，*T* 代表谷值。*T(t-1)* 代表前一个谷值，*P(t-1)* 代表前一个峰值：
- en: '|   |   | Contraction | Expansion | Cycle |'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '|   |   | 收缩 | 扩张 | 周期 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| Peak (P) | Trough (T) | P to T | T(t-1) to P | T(-1) to T | P(t-1) to P |'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 峰值 (P) | 谷值 (T) | 从 P 到 T | 从 T(t-1) 到 P | 从 T(-1) 到 T | 从 P(t-1) 到 P |'
- en: '| May 1923(II) | July 1924 (III) | 14 | 22 | 36 | 40 |'
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1923年5月（II） | 1924年7月（III） | 14 | 22 | 36 | 40 |'
- en: '| October 1926(III) | November 1927 (IV) | 13 | 27 | 40 | 41 |'
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1926年10月（III） | 1927年11月（IV） | 13 | 27 | 40 | 41 |'
- en: '| August 1929(III) | March 1933 (I) | 43 | 21 | 64 | 34 |'
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1929年8月（III） | 1933年3月（I） | 43 | 21 | 64 | 34 |'
- en: '| May 1937(II) | June 1938 (II) | 13 | 50 | 63 | 93 |'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1937年5月（II） | 1938年6月（II） | 13 | 50 | 63 | 93 |'
- en: '| February 1945(I) | October 1945 (IV) | 8 | 80 | 88 | 93 |'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1945年2月（I） | 1945年10月（IV） | 8 | 80 | 88 | 93 |'
- en: '| November 1948(IV) | October 1949 (IV) | 11 | 37 | 48 | 45 |'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1948年11月（IV） | 1949年10月（IV） | 11 | 37 | 48 | 45 |'
- en: '| July 1953(II) | May 1954 (II) | 10 | 45 | 55 | 56 |'
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1953年7月（II） | 1954年5月（II） | 10 | 45 | 55 | 56 |'
- en: '| August 1957(III) | April 1958 (II) | 8 | 39 | 47 | 49 |'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1957年8月（III） | 1958年4月（II） | 8 | 39 | 47 | 49 |'
- en: '| April 1960(II) | February 1961 (I) | 10 | 24 | 34 | 32 |'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1960年4月（第二季度） | 1961年2月（第一季度） | 10 | 24 | 34 | 32 |'
- en: '| December 1969(IV) | November 1970 (IV) | 11 | 106 | 117 | 116 |'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1969年12月（第四季度） | 1970年11月（第四季度） | 11 | 106 | 117 | 116 |'
- en: '| November 1973(IV) | March 1975 (I) | 16 | 36 | 52 | 47 |'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1973年11月（第四季度） | 1975年3月（第一季度） | 16 | 36 | 52 | 47 |'
- en: '| January 1980(I) | July 1980 (III) | 6 | 58 | 64 | 74 |'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1980年1月（第一季度） | 1980年7月（第三季度） | 6 | 58 | 64 | 74 |'
- en: '| July 1981(III) | November 1982 (IV) | 16 | 12 | 28 | 18 |'
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1981年7月（第三季度） | 1982年11月（第四季度） | 16 | 12 | 28 | 18 |'
- en: '| July 1990(III) | March 1991(I) | 8 | 92 | 100 | 108 |'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1990年7月（第三季度） | 1991年3月（第一季度） | 8 | 92 | 100 | 108 |'
- en: '| March 2001(I) | November 2001 (IV) | 8 | 120 | 128 | 128 |'
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 2001年3月（第一季度） | 2001年11月（第四季度） | 8 | 120 | 128 | 128 |'
- en: '| December 2007 (IV) | June 2009 (II) | 18 | 73 | 91 | 81 |'
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 2007年12月（第四季度） | 2009年6月（第二季度） | 18 | 73 | 91 | 81 |'
- en: 'Write a Python program to download daily price and estimate daily returns.
    Then convert daily returns into monthly ones. The date variable for the monthly
    returns should be the last trading days of the month. A Python dataset at: [http://canisius.edu/~yany/python/tradingDaysMonthly.pkl](http://canisius.edu/~yany/python/tradingDaysMonthly.pkl),
    could be used, see the following code:'
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个 Python 程序，下载日价格并估算日收益。然后将日收益转换为月收益。月收益的日期变量应为月末的最后一个交易日。可以使用以下 Python 数据集：[http://canisius.edu/~yany/python/tradingDaysMonthly.pkl](http://canisius.edu/~yany/python/tradingDaysMonthly.pkl)，参见以下代码：
- en: '[PRE73]'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Write a Python program to generate quarterly returns from historical daily price
    or historical monthly price data.
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个 Python 程序，从历史日价格或历史月价格数据中生成季度收益。
- en: Summary
  id: totrans-395
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, many concepts and issues associated with time-series are discussed
    in detail. Topics include how to design a true date variable, how to merge datasets
    with different frequencies, how to download historical prices from Yahoo! Finance;
    also, different ways to estimate returns, estimate the Roll (1984) spread, Amihud's
    (2002) illiquidity, Pastor and Stambaugh's (2003) liquidity, and how to retrieve
    high-frequency data from Prof. Hasbrouck's TORQ database (Trade, Oder, Report
    and Quotation). In addition, two datasets from CRSP are shown. Since this book
    is focusing on open and publicly available finance, economics, and accounting
    data, we could mention a few financial databases superficially.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 本章详细讨论了与时间序列相关的许多概念和问题。话题包括如何设计一个真实的日期变量，如何合并具有不同频率的数据集，如何从雅虎财经下载历史价格；此外，还讨论了不同的收益估算方法，如何估算
    Roll（1984）价差，Amihud（2002）的流动性，Pastor 和 Stambaugh（2003）的流动性，如何从 Hasbrouck 教授的 TORQ
    数据库（交易、订单、报告和报价）中检索高频数据。此外，还展示了来自 CRSP 的两个数据集。由于本书专注于公开的金融、经济和会计数据，我们可能会简单提到一些金融数据库。
- en: In the next chapter, we discuss many concepts and theories related to portfolio
    theory such as how to measure portfolio risk, how to estimate the risk of 2-stock
    and n-stock portfolio, the trade-off between risk and return by using various
    measures of Sharpe ratio, Treynor ratio, and Sortino ratio, how to minimize portfolio
    risk based on those measures (ratios), how to set up an objective function, how
    to choose an efficient portfolio for a given set of stocks, and how to construct
    an efficient frontier.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们讨论与投资组合理论相关的许多概念和理论，例如如何衡量投资组合风险，如何估算2只股票和n只股票的投资组合风险，如何使用夏普比率、特雷诺比率和索提诺比率等各种指标衡量风险与收益之间的权衡，如何根据这些指标（比率）最小化投资组合风险，如何设置目标函数，如何为一组给定的股票选择高效的投资组合，以及如何构建有效前沿。
