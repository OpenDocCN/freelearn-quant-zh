["```py\npacf(Sampledata$Volume) \n\n```", "```py\nccf(Sampledata$Volume,Sampledata$High, main = \"ccf plot\") \n\n```", "```py\n> xbar= 9.9           \n> mu0 = 10            \n> sig = 1.1            \n> n = 30                  \n> z = (xbar-mu0)/(sig/sqrt(n))  \n> z  \n\n```", "```py\n[1] -0.4979296 \n\n```", "```py\n> alpha = .05  \n> z.alpha = qnorm(1-alpha)  \n> -z.alpha   \n\n```", "```py\n[1] -1.644854 \n\n```", "```py\n> pnorm(z) \n\n```", "```py\n[1] 0.3092668 \n\n```", "```py\n> xbar= 5.1           \n> mu0 = 5            \n> sig = .25            \n> n = 30                  \n> z = (xbar-mu0)/(sig/sqrt(n))  \n> z \n\n```", "```py\n> alpha = .05  \n> z.alpha = qnorm(1-alpha)  \n> z.alpha \n\n```", "```py\n>pnorm(z, lower.tail=FALSE) \n\n```", "```py\n> xbar= 1.5          \n> mu0 = 2           \n> sig = .1           \n> n = 30                  \n> z = (xbar-mu0)/(sig/sqrt(n))  \n> z  \n\n```", "```py\n>alpha = .05  \n>z.half.alpha = qnorm(1-alpha/2)  \n>c(-z.half.alpha, z.half.alpha) \n\n```", "```py\n>2*pnorm(z) \n\n```", "```py\n> xbar= .9          \n> mu0 = 1          \n> sig = .1           \n> n = 30                  \n> t = (xbar-mu0)/(sig/sqrt(n))  \n> t  \n\n```", "```py\n> alpha = .05  \n> t.alpha = qt(1-alpha, df=n-1)  \n> -t.alpha \n\n```", "```py\n>pt(t, df=n-1) \n\n```", "```py\n> xbar= 3.1          \n> mu0 = 3         \n> sig = .2           \n> n = 30                  \n> t = (xbar-mu0)/(sig/sqrt(n))  \n> t   \n\n```", "```py\n> alpha = .05  \n> t.alpha = qt(1-alpha, df=n-1)  \n> t.alpha \n\n```", "```py\n>pt(t, df=n-1, lower.tail=FALSE) \n\n```", "```py\n> xbar= 1.9         \n> mu0 = 2         \n> sig = .1           \n> n = 30                  \n> t = (xbar-mu0)/(sig/sqrt(n))  \n> t  \n\n```", "```py\n> alpha = .05  \n> t.half.alpha = qt(1-alpha/2, df=n-1)  \n> c(-t.half.alpha, t.half.alpha) \n\n```", "```py\n> set.seed(100) \n> NO_values <- 100 \n> Y <- rnorm(NO_values, mean = 5, sd = 1) \n> mean(Y) \n\n```", "```py\n> sd(Y) \n\n```", "```py\nLogL <- function(mu, sigma) { \n+      A = dnorm(Y, mu, sigma) \n+      -sum(log(A)) \n+  } \n\n```", "```py\n  > library(stats4) \n> mle(LogL, start = list(mu = 2, sigma=2)) \n\n```", "```py\n> mle(LogL, start = list(mu = 2, sigma=2), method = \"L-BFGS-B\", \n+  lower = c(-Inf, 0), \n+       upper = c(Inf, Inf)) \n\n```", "```py\n> Y<-Sampledata$Adj.Close \n> X<-Sampledata$Volume \n> fit <- lm(Y ~ X) \n> summary(fit) \n\n```", "```py\n> boxplot(Sampledata$Volume, main=\"Volume\", boxwex=0.1) \n\n```", "```py\n> library(DMwR) \n> Sampledata1<- Sampledata[,2:4] \n> outlier.scores <- lofactor(Sampledata1, k=4) \n> plot(density(outlier.scores)) \n\n```", "```py\n> order(outlier.scores, decreasing=T)[1:5] \n\n```", "```py\n[1] 50 34 40 33 22 \n\n```", "```py\n>scale(Sampledata$Volume, center=TRUE, scale=FALSE) \n\n```", "```py\n>scale(Sampledata$Volume, center=TRUE, scale=TRUE) \n\n```", "```py\n> normalized = (Sampledata$Volume-+min(Sampledata$Volume))/(max(Sampledata$Volume)-+min(Sampledata$Volume)) \n> normalized \n\n```"]