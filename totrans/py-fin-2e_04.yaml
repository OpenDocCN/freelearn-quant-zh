- en: Chapter 4. Sources of Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章 数据来源
- en: 'Since our society entered a so-called information era, we have been engulfed
    by a huge amount of information or data. For this very reason, there is an increasing
    demand for persons armed with data handling skills, such as data scientists or
    graduates from business analytics programs. Kane (2006) proposed an open source
    finance concept which consists of three components:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 自从我们的社会进入所谓的信息时代以来，我们就被大量的信息或数据所包围。正因如此，数据处理技能的人才需求日益增长，例如数据科学家或商业分析专业的毕业生。Kane（2006）提出了一个开源金融概念，包含三个组成部分：
- en: The use of open source software in testing hypotheses and implementing investment
    strategies
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开源软件在测试假设和实施投资策略中的应用
- en: Cheap access to financial data
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低成本获取财务数据
- en: Replication to confirm published research results
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制以确认已发布的研究结果
- en: 'In this book, these three components are simply called: open software, open
    data, and open codes. Python is one of the best-known pieces of open source software.
    At the moment, usage of public data is quite inconsistent with the current environment.
    In this book, we use a huge amount of data, especially public data. In this chapter,
    the following topics will be covered:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中，这三个组成部分简单地称为：开源软件、开源数据和开源代码。Python 是最著名的开源软件之一。目前，公共数据的使用与当前环境不完全一致。在本书中，我们使用了大量数据，特别是公共数据。本章将涵盖以下主题：
- en: Open source finance
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开源金融
- en: Source of macro-economic data
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宏观经济数据来源
- en: Source of accounting data
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 会计数据来源
- en: Source of finance data
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 财务数据来源
- en: Other data sources
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他数据来源
- en: Diving into deeper concepts
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入探讨更深层次的概念
- en: 'The focus of this chapter will be on how to retrieve economic, finance, and
    accounting related data, especially public data. For example, Yahoo Finance offers
    rich data, such as historical trading price, current price, option data, annual
    and quarterly financial statements, and bond data. Such publicly available data
    could be used to estimate β (market risk), volatility (total risk), Sharpe ratio,
    Jensen''s alpha, Treynor ratio, liquidity, transaction costs, and conduct financial
    statement analysis (ratio analysis) and performance evaluation. In future chapters,
    the topics mentioned would be discussed in more detail. For the public data related
    to economics, finance, and accounting, many wonderful sources are available, see
    the following table:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的重点将是如何检索与经济、金融和会计相关的数据，尤其是公共数据。例如，雅虎财经提供了丰富的数据，如历史交易价格、当前价格、期权数据、年度和季度财务报表以及债券数据。此类公开可用的数据可用于估算
    β（市场风险）、波动性（总风险）、夏普比率、詹森的α、特雷诺比率、流动性、交易成本，并进行财务报表分析（比率分析）和绩效评估。在未来的章节中，将更详细地讨论这些主题。关于经济学、金融和会计的公共数据，有许多优秀的来源，见下表：
- en: '| Name | Data types |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 数据类型 |'
- en: '| --- | --- |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Yahoo Finance | Historical price, annual and quarterly financial statements,
    and so on |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 雅虎财经 | 历史价格、年度和季度财务报表等 |'
- en: '| Google Finance | Current, historical trading prices |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 谷歌财经 | 当前和历史交易价格 |'
- en: '| Federal Reserve Economic Data | Interest rates, rates for AAA, AA rated bonds
    |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 美联储经济数据 | 利率、AAA、AA评级债券的利率 |'
- en: '| Prof. French''s Data Library | Fama-French factor time series, market index
    returns, risk-free rate, industry classification |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 法国教授数据图书馆 | 法马-法国因子时间序列、市场指数收益、无风险利率、行业分类 |'
- en: '| Census Bureau | Census data |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 人口普查局 | 人口普查数据 |'
- en: '| US. Department of Treasury | US. Treasure yield |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 美国财政部 | 美国财政收益 |'
- en: '| Bureau of Labor Statistics | Inflation, employment, unemployment, pay and
    benefits |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 劳工统计局 | 通货膨胀、就业、失业、薪酬和福利 |'
- en: '| Bureau of Economic Analysis | Gross Domestic Product (GDP) and so on |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 美国经济分析局 | 国内生产总值（GDP）等 |'
- en: '| National Bureau of Economic Research | Business cycles, vital statistics,
    report of presidents |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 国家经济研究局 | 经济周期、重要统计数据、总统报告 |'
- en: 'Table 4.1: A list of open data sources'
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表 4.1：开放数据源列表
- en: 'Usually, there are two ways to retrieve data:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，有两种方式来检索数据：
- en: Manually download data from a specific location and then write a Python program
    to retrieve and process it
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动从特定位置下载数据，然后编写 Python 程序以检索和处理数据
- en: Use the functions contained in various Python modules, such as the function
    called `quotes_historical_yahoo_ohlc()` in the `matplotlib.finance` submodule
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用各种 Python 模块中包含的功能，例如 `matplotlib.finance` 子模块中的 `quotes_historical_yahoo_ohlc()`
    函数
- en: For both methods, there are some advantages and disadvantages. The main advantage
    of the first method is that we know where to get our data. In addition, since
    we write our own programs to download and process data, the logic of those programs
    is clearer. The advantage of the second method is that it is quick and convenient
    to retrieve data. In a sense, users don't even have to know from where to retrievethe
    data and the structure of the original datasets. The disadvantage is that the
    functions used might change. This might cause certain problems. For example, the
    old version of `quotes_historical_yahoo_ohlc()` is `quotes_historical_yahoo()`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这两种方法，各有优缺点。第一种方法的主要优点是我们知道数据的来源。此外，由于我们编写自己的程序来下载和处理数据，这些程序的逻辑更加清晰。第二种方法的优点是获取数据快捷方便。从某种意义上说，用户甚至不需要知道数据的来源以及原始数据集的结构。缺点是使用的函数可能会发生变化，这可能导致某些问题。例如，`quotes_historical_yahoo_ohlc()`的旧版本是`quotes_historical_yahoo()`。
- en: 'In order to retrieve useful information from the preceding sources, two submodules
    could be used: `pandas_datareader.data` and `matplotlib.financial`. To find out
    functions included in `pandas_datareader.data`, the `dir()` function is applied:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从前述数据源中提取有用的信息，可以使用两个子模块：`pandas_datareader.data`和`matplotlib.financial`。要查看`pandas_datareader.data`中包含的函数，可以使用`dir()`函数：
- en: '![Diving into deeper concepts](img/B06175_04_01.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![深入探索更深层的概念](img/B06175_04_01.jpg)'
- en: From the preceding output, it seems that we have eight functions related to
    YahooFinance, such as `YahooDailyReader()`, `YahooActionReader()`, `YahooOptions()`,
    `YahooQuotesReader()`, `get_components_yahoo()`, `get_data_yahoo()`, `get_data_yahoo_actions()`,
    and `get_quote_yahoo()`. Actually, we could use `theDataReader()` function as
    well.Similarly, a few functions are available for retrieving data from Google,
    FRED, and from Prof. French's Data Library.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出结果来看，似乎我们有八个与YahooFinance相关的函数，比如`YahooDailyReader()`、`YahooActionReader()`、`YahooOptions()`、`YahooQuotesReader()`、`get_components_yahoo()`、`get_data_yahoo()`、`get_data_yahoo_actions()`和`get_quote_yahoo()`。实际上，我们也可以使用`theDataReader()`函数。类似地，还有一些函数可以用于从Google、FRED以及弗朗西斯教授的数据库中提取数据。
- en: 'To find the usage of individual functions, the `help()` function could be applied.
    In the following, the first function called `DataReader()` from the preceding
    output, is used as an example:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看各个函数的用法，可以使用`help()`函数。下面以前述输出中的第一个函数`DataReader()`为例：
- en: '![Diving into deeper concepts](img/B06175_04_02.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![深入探索更深层的概念](img/B06175_04_02.jpg)'
- en: 'From the output, it can be seen that the function could be used to retrieve
    data from YahooFinance, Google Finance, St. Louis FED (FRED), and Prof. French''s
    data library. To find out all the functions contained in the `matplotlib.finance`
    submodules, see the following codes:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出结果中可以看到，该函数可以用来从YahooFinance、Google Finance、圣路易斯联邦储备（FRED）以及弗朗西斯教授的数据库中提取数据。要查看`matplotlib.finance`子模块中包含的所有函数，请参考以下代码：
- en: '![Diving into deeper concepts](img/B06175_04_03.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![深入探索更深层的概念](img/B06175_04_03.jpg)'
- en: A careful reader would find some inconsistency for the definitions of those
    names; see the last four letters of some functions, that is, `ochl`, `ohlc`, and
    `oclh`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 细心的读者会发现这些名称的定义存在一些不一致之处；请注意某些函数名称的最后四个字母，即`ochl`、`ohlc`和`oclh`。
- en: Retrieving data from Yahoo!Finance
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Yahoo!Finance提取数据
- en: 'Yahoo!Finance offers historical market data, recent, several years'' financial
    statements, current quotes, analyst recommendations, options data, and more. The
    historical trading data include daily, weekly, monthly, and dividends. The historical
    data has several variables: open price, high price achieved, lowest price achieved,
    trading volume, close price, and adjusted-close price (which is adjusted for splits
    and dividends). Historical quotes typically do not go back further than 1960.Here,
    we show how to manually retrieve the monthly data for IBM:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Yahoo!Finance提供历史市场数据、近期的财务报表、几年的财务报告、当前报价、分析师建议、期权数据等。历史交易数据包括每日、每周、每月数据以及股息数据。历史数据包括多个变量：开盘价、最高价、最低价、交易量、收盘价和调整后的收盘价（已对拆股和股息进行了调整）。历史报价通常不会追溯到1960年以前。这里我们展示如何手动获取IBM的月度数据：
- en: Go to [http://finance.yahoo.com/](http://finance.yahoo.com/).
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[http://finance.yahoo.com/](http://finance.yahoo.com/)。
- en: Enter `IBM` in the search box.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入`IBM`。
- en: Click on **Historical Price** in the middle.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击中间的**历史价格**。
- en: Choose the monthly data, then click **Apply**.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择月度数据，然后点击**应用**。
- en: Click **Download data** under **Apply**.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**应用**下点击**下载数据**。
- en: 'A few lines at the beginning and at the end are shown here:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示了开头和结尾的几行：
- en: '![Retrieving data from Yahoo!Finance](img/B06175_04_04.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![从Yahoo!Finance获取数据](img/B06175_04_04.jpg)'
- en: 'Assume that the above downloaded data is saved under `c:/temp`, the following
    codes could be used to retrieve it:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 假设上述下载的数据保存在`c:/temp`下，可以使用以下代码来检索它：
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To view the first and the last few observations, the `.head()` and `.tail()`
    functions could be used. The default values of those two functions are 5\. In
    the following, the command of `x.head()` will output the first five lines, while
    `x.tail(2)`will output the last two lines:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 若要查看前几行和后几行观察值，可以使用`.head()`和`.tail()`函数。默认情况下，这两个函数的值为5。在下面，`x.head()`命令会输出前五行，而`x.tail(2)`则会输出最后两行：
- en: '![Retrieving data from Yahoo!Finance](img/B06175_04_05.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![从Yahoo!Finance获取数据](img/B06175_04_05.jpg)'
- en: 'A better way is to use certain functions contained in various modules or submodules.
    Here is one of the simplest examples, just two lines to get IBM''s trading data,
    see the following code:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 更好的方法是使用包含在各种模块或子模块中的特定函数。这里是一个最简单的例子，只有两行代码即可获取IBM的交易数据，见以下代码：
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Again, the `.head()` and `.tail()` functions could be used to show the part
    of the result, see the following code:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，`.head()`和`.tail()`函数可以用来展示结果的一部分，见以下代码：
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If a longer time period is desired, the start and ending input variables should
    be specified, see the following code:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要更长的时间周期，应该指定起始和结束输入变量，见以下代码：
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the preceding code, the function called `datetime.datetime()` defines a
    true date variable. Later in the chapter, it is shown how to retrieve year and
    month from such a variable. The first two observations are given here:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，名为`datetime.datetime()`的函数定义了一个真实的日期变量。在本章后续部分，将展示如何从这样的变量中提取年份和月份。前两条观察结果在这里给出：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'A careful reader should find that the order of data is different. When downloading
    data manually, the order is from the latest (such as yesterday) going back in
    history. However, when retrieving data via a function, we would have the oldest
    date first. Most financial databases adopt the same sorting order: from the oldest
    to the latest.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细的读者应该会发现数据的顺序是不同的。当手动下载数据时，数据的顺序是从最新的（如昨天）向历史回溯。然而，当通过函数提取数据时，最旧的日期会排在最前面。大多数金融数据库采用相同的排序顺序：从最旧到最新。
- en: 'The following program uses another function called `quotes_historical_yahoo_ochl`.
    The program is the simplest one with just two lines:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序使用了另一个名为`quotes_historical_yahoo_ochl`的函数。这个程序是最简单的，仅有两行：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the preceding program, the first line imports a function called `quotes_historical_yahoo_ochl()`
    contained in the `matplotlib.finance`. In addition, to make our typing easier,
    the long function name is renamed `getData`. Users could use other more convenient
    names. The second line retrieves data from the Yahoo!Finance web page with a specific
    ticker symbol over a fixed period defined by beginning and ending dates. To show
    the first several lines, we type `p[0:4]`:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的程序中，第一行导入了一个名为`quotes_historical_yahoo_ochl()`的函数，它包含在`matplotlib.finance`中。此外，为了方便输入，长函数名被重命名为`getData`。用户也可以使用其他更方便的名称。第二行通过指定的股票代码从Yahoo!Finance网页上获取数据，数据的时间范围由起始和结束日期定义。为了展示前几行，我们输入`p[0:4]`：
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The last several lines indicate the structure of the dataset. For example, `O`
    is for Python objects, `i2` is for integer, and `f8` is for floating. At the moment,
    it is not that critical to fully understand the meanings of those data types.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 最后几行展示了数据集的结构。例如，`O`表示Python对象，`i2`表示整数，`f8`表示浮点数。此时，完全理解这些数据类型的含义并不是那么关键。
- en: 'To understand how to estimate returns from a price array, let''s look at a
    simple illustration. Assume that we have five prices and their time line is `t`,
    `t+1`, `t+2`, `t+3` and `t+4`:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解如何从价格数组中估算回报率，我们来看一个简单的例子。假设我们有五个价格，它们的时间线是`t`、`t+1`、`t+2`、`t+3`和`t+4`：
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'For a NumPy array, defined by `np.array()`, such as price defined previously,
    we use `price[1:]` for the second item to the last one, that is, all the data
    items except the first one. Recall that the subscript of a NumPy array starts
    from `0`. For `price[:-1]`, it represents all data items except the last one.
    We could manually verify those return numbers; see the following code for the
    first two returns:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个由 `np.array()` 定义的 NumPy 数组，例如之前定义的价格，我们使用 `price[1:]` 来表示从第二项到最后一项，即所有数据项除了第一项。请记住，NumPy
    数组的下标是从 `0` 开始的。对于 `price[:-1]`，它表示所有数据项，除了最后一项。我们可以手动验证这些回报值；请参见以下代码，查看前两个回报：
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here is another example:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个例子：
- en: '[PRE9]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Note that if the price array is sorted the other way around: from the newest
    to the oldest, then the return estimation should be `price[:-1]/price[1:]-1`.
    With the preceding logic, the following program calculates returns:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果价格数组的排序方式相反：从最新到最旧，那么回报估算应该是 `price[:-1]/price[1:]-1`。根据之前的逻辑，以下程序计算了回报：
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To make our programs more general, in the preceding program, three new variables
    called `begdate`, `enddate,` and `ticker`are added. Please pay attention to the
    last line of commands. For a given pair of two prices, `p1` and `p2`, assume that
    `p2` is after `p1`. We could use two ways to estimate a return: `(p2-p1)/p1` or
    `p2/p1-1`. The former is conceptually clearer while the latter makes our program
    less prone to error. Again, we could verify a few returns manually:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使我们的程序更具通用性，在之前的程序中，添加了三个新变量，分别为 `begdate`、`enddate` 和 `ticker`。请注意命令的最后一行。对于给定的两种价格，`p1`
    和 `p2`，假设 `p2` 在 `p1` 之后。我们可以通过两种方式来估算回报：`(p2-p1)/p1` 或 `p2/p1-1`。前者在概念上更清晰，而后者使我们的程序更不容易出错。同样，我们可以手动验证几个回报值：
- en: '[PRE11]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'For the following example, daily price data for IBM from January 1, 2011 to
    December 31, 2015 is downloaded first. Then, daily returns are calculated. The
    mean daily return is 0.011%:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下示例，首先下载了从 2011 年 1 月 1 日到 2015 年 12 月 31 日的 IBM 每日价格数据。然后，计算每日回报。平均日回报为
    0.011%：
- en: '[PRE12]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'To answer the question whether this mean daily return of `0.00011` is statistically
    different from zero, the function called `ttest_1samp()` contained in the stats
    module could be applied:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答这个问题，即 `0.00011` 的平均日回报是否与零在统计学上有显著差异，可以使用 `stats` 模块中的 `ttest_1samp()`
    函数：
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Since the T-value is 0.31 and the P-value is 0.76, we accept the null hypothesis.
    In other words, the daily mean return for IBM from 2011 to 2015 is statistically
    the same as zero. To get more information about this function, the `help()` function
    would be applied. To save space, only the first several lines are shown here:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 T 值为 0.31，P 值为 0.76，我们接受零假设。换句话说，从 2011 年到 2015 年，IBM 的日均回报在统计学上与零相同。要获取更多关于此函数的信息，可以使用
    `help()` 函数。为了节省空间，这里仅显示了前几行：
- en: '[PRE14]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: It calculates the T-test for the mean of ONE group of scores.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 它计算了单组数据的均值 T 检验。
- en: This is a two-sided test for the null hypothesis that the expected value (mean)
    of a sample of independent observations, `a`, is equal to the given population
    mean, `popmean`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个双侧检验，用于检验独立观测样本 `a` 的期望值（均值）是否等于给定的总体均值 `popmean`。
- en: 'The following program tests the equal means for two stocks: `IBM` vs. `MSFT`:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序测试了两只股票的相等回报：`IBM` 对 `MSFT`：
- en: '[PRE15]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The means of those two returns are shown here:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种回报的计算方法如下所示：
- en: '[PRE16]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Note that in the preceding code, the `.mean()` is used instead of `scipy.mean()`.
    To conduct a T-test for equal means, the function called `ttest_ind()` is called;
    see the following code:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在之前的代码中，使用了 `.mean()` 而不是 `scipy.mean()`。为了进行均值相等的 T 检验，调用了 `ttest_ind()`
    函数；请参见以下代码：
- en: '[PRE17]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Assume that two prices exist, *p1* and *p2*. The following equation defines
    a percentage return (*R*) and a log return:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 假设存在两个价格，*p1* 和 *p2*。以下方程定义了一个百分比回报 (*R*) 和对数回报：
- en: '![Retrieving data from Yahoo!Finance](img/B06175_04_06.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![从 Yahoo!Finance 获取数据](img/B06175_04_06.jpg)'
- en: ……..(1)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: ……..(1)
- en: '![Retrieving data from Yahoo!Finance](img/B06175_04_07.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![从 Yahoo!Finance 获取数据](img/B06175_04_07.jpg)'
- en: ……..(2)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: ……..(2)
- en: 'The relation between those two are shown here:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这两者之间的关系如下所示：
- en: '![Retrieving data from Yahoo!Finance](img/B06175_04_08.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![从 Yahoo!Finance 获取数据](img/B06175_04_08.jpg)'
- en: ……..(3)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: ……..(3)
- en: '![Retrieving data from Yahoo!Finance](img/B06175_04_09.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![从 Yahoo!Finance 获取数据](img/B06175_04_09.jpg)'
- en: ……..(4)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: ……..(4)
- en: 'One of the beauties of a log return is that the return of a longer period is
    the summation of a short period. This means that annual log return is the summation
    of log quarterly returns. A log quarterly return is the summation of log monthly
    returns. This property makes our programming better. Here is a more general formula:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 对数回报的一个优点是，较长周期的回报是短期回报的总和。这意味着年化对数回报是季度对数回报的总和，季度对数回报是月度对数回报的总和。这一性质使我们的编程更加简洁。这里是一个更一般的公式：
- en: '![Retrieving data from Yahoo!Finance](img/B06175_04_10.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![从Yahoo!Finance获取数据](img/B06175_04_10.jpg)'
- en: ……..(5)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: ……..(5)
- en: 'For a log annual return, we could apply the following formula:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 对于年化对数回报，我们可以应用以下公式：
- en: '![Retrieving data from Yahoo!Finance](img/B06175_04_11.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![从Yahoo!Finance获取数据](img/B06175_04_11.jpg)'
- en: ……..(6)
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: ……..(6)
- en: 'The following code is used to convert daily returns into monthly ones:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码用于将日回报转化为月回报：
- en: '[PRE18]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In the preceding program, the command of `strftime("%Y")` is used to extract
    the string of a year, such as `2016`.A much simpler example is shown here:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的程序中，`strftime("%Y")`命令用于提取年份的字符串，如`2016`。这里显示了一个更简单的例子：
- en: '[PRE19]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Similarly, the command of `strftime("%m")` would extract the string for a month.
    To find the first and last two monthly returns, the `.head()`and `.tail()`functions
    could be used; see the following code:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，`strftime("%m")`命令将提取月份的字符串。要查找前两条和最后两条月度回报，可以使用`.head()`和`.tail()`函数；请参见以下代码：
- en: '[PRE20]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Along the same line, the following code converts daily returns into annual
    ones:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 同理，以下代码将日回报转化为年回报：
- en: '[PRE21]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'A few annual returns are shown here:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示了几条年度回报数据：
- en: '[PRE22]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'In finance, standard deviation and variance are used to measure risk. To tell
    which stock is riskier, their variances or standard deviations could be compared.
    The following program tests whether IBM and Microsoft have equal variances:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融中，标准差和方差用于衡量风险。为了判断哪只股票风险较高，可以比较它们的方差或标准差。以下程序测试了IBM和微软的方差是否相等：
- en: '[PRE23]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The function called `bartlett()` contained in `scipy.stats` is used. The following
    output shown suggests that those two companies have different variance since the
    F-value is 44.39 while the P-value is almost zero:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在`scipy.stats`模块中调用的函数`bartlett()`被使用。以下输出结果表明这两家公司具有不同的方差，因为F值为44.39，而P值几乎为零：
- en: '[PRE24]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: To find out more information about this function, the `help()` function could
    be used.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取更多关于此函数的信息，可以使用`help()`函数。
- en: 'To save space, only the first few lines are shown here:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 为节省空间，这里只显示了前几行：
- en: 'Help on function `bartlett` in module `scipy.stats.morestats`:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`scipy.stats.morestats`模块中`bartlett`函数的帮助：'
- en: '[PRE25]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Perform Bartlett's test for equal variances.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行Bartlett检验以检查方差是否相等。
- en: Note
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Bartlett's test tests the null hypothesis that all input samples are from populations
    with equal variances.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Bartlett检验的零假设是所有输入样本来自方差相等的总体。
- en: For samples from significantly non-normal populations, Levene's test, `levene`,
    is more robust.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于来自显著非正态分布的样本，Levene检验（`levene`）更为稳健。
- en: 'For finance, we have a very important assumption: stock returns follow a normal
    distribution. Thus, it is a good idea to graphically show how the stock returns
    are distributed; see the following image. The code in Appendix A is relatively
    complex. In this chapter, it is not required to understand the program. This is
    true for the several programs described as well.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融中，我们有一个非常重要的假设：股票回报遵循正态分布。因此，最好通过图形展示股票回报的分布；请参见以下图片。附录A中的代码相对复杂。本章并不要求理解该程序。对几个描述的程序来说也是如此。
- en: 'The following graph shows how IBM''s returns distributed plus a normal distribution.
    The price moment is shown on the right and its Python program is included in Appendix
    A:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表展示了IBM回报的分布情况，并与正态分布进行对比。价格时刻点显示在右侧，相关的Python程序可以在附录A中找到：
- en: '![Retrieving data from Yahoo!Finance](img/B06175_04_12.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![从Yahoo!Finance获取数据](img/B06175_04_12.jpg)'
- en: 'The so-called candle-stick picture could be used to vividly present a stock
    price or trading volume, as shown in the following screenshot. The corresponding
    Python program is in Appendix C:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 所谓的蜡烛图可以生动地展示股票价格或交易量，如以下截图所示。相应的Python程序可以在附录C中找到：
- en: '![Retrieving data from Yahoo!Finance](img/B06175_04_13.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![从Yahoo!Finance获取数据](img/B06175_04_13.jpg)'
- en: 'The upper-right picture is extremely sophisticated. Since beginners don''t
    need to understand it, the program is not included in this book. If a reader is
    interested, the complete program can be found at two locations. Here are the links:
    [http://matplotlib.org/examples/pylab_examples/finance_work2.html](http://matplotlib.org/examples/pylab_examples/finance_work2.html)
    and [http://canisius.edu/~yany/python/finance_work2.txt](http://canisius.edu/~yany/python/finance_work2.txt).'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 右上角的图片非常复杂。由于初学者不需要理解它，本书没有包括该程序。如果读者感兴趣，完整的程序可以在两个位置找到。以下是链接：[http://matplotlib.org/examples/pylab_examples/finance_work2.html](http://matplotlib.org/examples/pylab_examples/finance_work2.html)
    和 [http://canisius.edu/~yany/python/finance_work2.txt](http://canisius.edu/~yany/python/finance_work2.txt)。
- en: 'The following is another example to retrieve IBM daily data from Yahoo! Financeby
    calling the `DataReader()` function contained in the `pandas_datareader.data`submodule:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是另一个示例，通过调用`pandas_datareader.data`子模块中的`DataReader()`函数，从 Yahoo! Finance
    获取 IBM 的每日数据：
- en: '[PRE26]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Retrieving data from Google Finance
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从 Google 财经获取数据
- en: 'Like Yahoo Finance, Google Finance offers a significant amount of public information,
    such as news, option chains, related companies (good for competitor and industry
    analysis), historical prices, and financials (income statement, balance sheet,
    and cash flow statements). We could manually download data by going to Google
    Finance directly. Alternatively, to retrieve data from Google finance, the `DataReader()`
    function contained in the`pandas_datareader`submodule could be applied:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 和 Yahoo Finance 一样，Google 财经提供大量公共信息，如新闻、期权链、相关公司（有助于竞争对手和行业分析）、历史价格和财务数据（包括利润表、资产负债表和现金流量表）。我们可以通过直接访问
    Google 财经手动下载数据。或者，为了从 Google 财经获取数据，可以使用`pandas_datareader`子模块中的`DataReader()`函数：
- en: '[PRE27]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The following screenshot shows a stock''s intraday moment. The related Python
    program is included in Appendix C:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了股票的日内波动。相关的 Python 程序包括在附录 C 中：
- en: '![Retrieving data from Google Finance](img/B06175_04_14.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![从 Google 财经获取数据](img/B06175_04_14.jpg)'
- en: Retrieving data from FRED
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从 FRED 获取数据
- en: 'The Federal Reserve has many datasets related to current economics and historical
    time series. For instance, they have data related to interest rates, such as Euro-dollar
    deposit rates. There are two ways to retrieve such interest rate data. First,
    we could use their Data Download Program, as seen in the following steps:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 美国联邦储备银行有许多与当前经济和历史时间序列相关的数据集。例如，他们有关于利率的数据，如欧元-美元存款利率。获取此类利率数据有两种方式。首先，我们可以使用他们的数据下载程序，如以下步骤所示：
- en: Go to the Federal Reserve Bank's web link at [https://www.federalreserve.gov/econresdata/default.html](https://www.federalreserve.gov/econresdata/default.html).
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问美国联邦储备银行的网页链接：[https://www.federalreserve.gov/econresdata/default.html](https://www.federalreserve.gov/econresdata/default.html)。
- en: Click the **Dat****a Download Program** at [https://www.federalreserve.gov/data.htm](https://www.federalreserve.gov/data.htm).
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击[https://www.federalreserve.gov/data.htm](https://www.federalreserve.gov/data.htm)上的**数据下载程序**。
- en: Choose an appropriate data item.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择合适的数据项。
- en: Click **Go to download**.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**前往下载**。
- en: 'For example, we choose Fed fund rate. The first couple of lines are given here:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们选择联邦基金利率。前几行如下所示：
- en: '[PRE28]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The following program could be used to retrieve the downloaded data. Here the
    dataset is assumed to be saved under the `c:/temp/` directory:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序可用于获取下载的数据。这里假设数据集保存在`c:/temp/`目录下：
- en: '[PRE29]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Alternatively, the function called `DataReader()` contained in the`pandas_datareader`
    module could be used. One example is given here:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，可以使用`pandas_datareader`模块中的`DataReader()`函数。这里给出了一个示例：
- en: '[PRE30]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Retrieving data from Prof. French's data library
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从法兰西教授的数据库获取数据
- en: Prof. French has a very good and widely used data library.You can visit this
    link at [http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html)
    for more information. It contains the daily, weekly, and monthly Fama-French factors
    and other useful datasets. After clicking *Fama-French Factors*, a ZIPfile called
    `F-F_Research_Data_Factors.zip` can be downloaded. Unzip it, and we will have
    a text file called `F_F_Research_Data_Factors.txt` which includes both monthly
    and annual Fama-French factors starting from July 1926 onward. The first several
    lines are shown here. For more detail, see [Chapter 7](ch07.html "Chapter 7. Multifactor
    Models and Performance Measures"), *Multifactor Models and Performance Measures*,
    Sharpe ratio, Treynor ratio, and Jensen's α.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: French教授拥有一个非常好且广泛使用的数据库。你可以通过访问这个链接：[http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html](http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html)获取更多信息。它包含了Fama-French因子的日度、周度和月度数据以及其他有用的数据集。点击*Fama-French因子*后，可以下载名为`F-F_Research_Data_Factors.zip`的ZIP文件。解压后，我们将得到一个名为`F_F_Research_Data_Factors.txt`的文本文件，里面包括了从1926年7月开始的月度和年度Fama-French因子。以下是前几行的内容。更多细节请参见[第7章](ch07.html
    "第7章：多因子模型与绩效衡量")，*多因子模型与绩效衡量*，夏普比率、特雷诺比率和詹森α。
- en: 'This file was created by `CMPT_ME_BEME_RETS` using the `201012 CRSP` database:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件是由`CMPT_ME_BEME_RETS`使用`201012 CRSP`数据库创建的：
- en: '[PRE31]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Assume that the data is saved under `C:/temp/`. Remember to remove the annual
    data at the bottom of the file before running the following code:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 假设数据保存在`C:/temp/`下。在运行以下代码之前，请记得删除文件底部的年度数据：
- en: '[PRE32]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The first 10 observations are shown here:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示了前10条观测值：
- en: '[PRE33]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Alternatively, we could write a Python program to retrieve the monthly Fama-French
    time series:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，我们也可以编写一个Python程序来获取Fama-French月度时间序列：
- en: '[PRE34]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Again, the beauty of using the `pandas_datareader()` module is that we could
    use the `.head()` and `.tail()` function to view the retrieved datasets. Several
    more examples are given now:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用`pandas_datareader()`模块的优点在于，我们可以利用`.head()`和`.tail()`函数来查看获取到的数据集。现在给出几个更多的示例：
- en: '[PRE35]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Retrieving data from the Census Bureau, Treasury, and BLS
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从人口普查局、财政部和劳工统计局获取数据
- en: 'In this section, we briefly show how to retrieve data from the US Census Bureau.You
    can learn more about it at [http://www.census.gov/compendia/statab/hist_stats.html](http://www.census.gov/compendia/statab/hist_stats.html).
    After we go to the census''s historical data, the following window will pop up.
    This is the link: [http://www.census.gov/econ/census/data/historical_data.html](http://www.census.gov/econ/census/data/historical_data.html).
    The following screenshot shows what kind of historical data we can download:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们简要展示了如何从美国人口普查局获取数据。你可以在[http://www.census.gov/compendia/statab/hist_stats.html](http://www.census.gov/compendia/statab/hist_stats.html)了解更多信息。当我们进入人口普查的历史数据后，以下窗口将弹出。这是链接：[http://www.census.gov/econ/census/data/historical_data.html](http://www.census.gov/econ/census/data/historical_data.html)。以下截图展示了我们可以下载的历史数据类型：
- en: '![Retrieving data from the Census Bureau, Treasury, and BLS](img/B06175_04_15.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![从人口普查局、财政部和劳工统计局获取数据](img/B06175_04_15.jpg)'
- en: Assume that we are interested in **61Educational Services**. After clicking
    the link, we could choose one time series to download. After clicking the **Download**
    icon, a ZIP file which contains four files will be downloaded.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们对**61教育服务**感兴趣。点击该链接后，我们可以选择一个时间序列进行下载。点击**下载**图标后，将会下载一个包含四个文件的ZIP文件。
- en: 'The next example shows how to get data from the Bureau of Labor Statistics
    web page. First, go to the related web page at [http://www.bls.gov/](http://www.bls.gov/)
    and click **Data Tools** on the menu bar:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个示例展示了如何从劳工统计局网站获取数据。首先，访问相关网页：[http://www.bls.gov/](http://www.bls.gov/)，然后点击菜单栏上的**数据工具**：
- en: '![Retrieving data from the Census Bureau, Treasury, and BLS](img/B06175_04_16.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![从人口普查局、财政部和劳工统计局获取数据](img/B06175_04_16.jpg)'
- en: 'Click **Inflation & Prices**, and **CPI**; we will be led to a location where
    we candownload related datasets, as you can see at this link: [http://download.bls.gov/pub/time.series/cu/](http://download.bls.gov/pub/time.series/cu/)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**通货膨胀与价格**，再点击**CPI**；我们将被引导到一个页面，在那里我们可以下载相关的数据集，如这个链接所示：[http://download.bls.gov/pub/time.series/cu/](http://download.bls.gov/pub/time.series/cu/)
- en: Generating two dozen datasets
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成二十多个数据集
- en: To help readers of this book, many datasets are generated. First, let's look
    at a simple example of a download and load a Python dataset called `ffMonthly.pkl`.
    For more information on the mentioned dataset, visit the following link:[http://canisius.edu/~yany/python/ffMonthly.pkl](http://canisius.edu/~yany/python/ffMonthly.pkl).
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助本书的读者，生成了许多数据集。首先，让我们看一个简单的示例，下载并加载一个名为`ffMonthly.pkl`的Python数据集。有关该数据集的更多信息，请访问以下链接：[http://canisius.edu/~yany/python/ffMonthly.pkl](http://canisius.edu/~yany/python/ffMonthly.pkl)。
- en: 'This dataset was generated based on the monthly Fama-French 3 factor time series.
    Assuming that the dataset is saved under `c:/temp/`, then we could use the following
    Python program to load it:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 该数据集基于每月的Fama-French三因子时间序列生成。假设数据集保存在`c:/temp/`目录下，可以使用以下Python程序加载它：
- en: '[PRE36]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'We could view the first and last several lines:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以查看前几行和最后几行：
- en: '[PRE37]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'A better way is to use the `.head()` and `.tail()` functions; see the following
    code:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 更好的方式是使用`.head()`和`.tail()`函数；请参见以下代码：
- en: '[PRE38]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The command of `ff.head(5)` would show the first five lines while `ff.tail(3)`
    would show the last three lines.The `date` variable is vitally important for time
    series. The major reason is that we are dealing with time series. When merging
    different datasets, one of the most common variables used to merge them is the
    `date` variable. The following example shows how to define such a `date` variable:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`ff.head(5)`命令将显示前五行，而`ff.tail(3)`将显示最后三行。`date`变量对于时间序列至关重要，主要原因是我们处理的是时间序列数据。在合并不同的数据集时，`date`变量是最常用的合并变量。以下示例展示了如何定义这种`date`变量：'
- en: '[PRE39]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'To help readers of this book, the author has generated about two dozen Python
    datasets with an extension of `.pkl`. Those datasets are from the previously mentioned
    public sources, such as from the Prof. French data library, and Prof. Hasbrouck''s
    TORQ, which contains transactions, quotes, order processing data, and audit trail
    data for a sample of 144 NYSE stocks for the 3 months, November 1990 through January
    1991\. To facilitate an easy downloading, a Python program called `loadYan.py`
    is available. You will find more information on that at: [http://caniisus.edu/~yany/loadYan.py](http://http://caniisus.edu/~yany/loadYan.py).'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助本书的读者，作者生成了大约二十个Python数据集，扩展名为`.pkl`。这些数据集来自前面提到的公共数据源，例如来自Fama教授的数据集和Hasbrouck教授的TORQ数据集，后者包含了1990年11月至1991年1月期间，144只纽约证券交易所（NYSE）股票的交易、报价、订单处理数据和审计跟踪数据。为了方便下载，提供了一个名为`loadYan.py`的Python程序。你可以在以下链接找到更多信息：[http://caniisus.edu/~yany/loadYan.py](http://http://caniisus.edu/~yany/loadYan.py)。
- en: 'After you run the program, the `help(loadYan)` could be issued to find out
    all datasets generated; see the following code:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 运行程序后，可以输入`help(loadYan)`来查看所有已生成的数据集；请参见以下代码：
- en: '[PRE40]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Several datasets related to CRSP and Compustat
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与CRSP和Compustat相关的几个数据集
- en: '**The Center for Research in Security Prices** (**CRSP**) contains all trading
    data, such as closing price, trading volume, shares outstanding, for all listed
    stocks in the US from 1926 onward. Because of its quality and long history, it
    has been used extensively by academic researchers and practitioners. The database
    is generated and maintained by the University of Chicago, and is available at:
    [http://www.crsp.com/](http://www.crsp.com/). About 100 Python datasets are generated;
    see the following table:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '**证券价格研究中心**（**CRSP**）包含所有交易数据，例如收盘价、交易量、流通股数等，从1926年起涵盖美国所有上市股票。由于其数据质量高且历史悠久，它已被学术研究者和实践者广泛使用。该数据库由芝加哥大学生成并维护，访问地址为：[http://www.crsp.com/](http://www.crsp.com/)。生成了大约100个Python数据集，见下表：'
- en: '| Name | Description |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '| --- | --- |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `crspInfo.pkl` | Contains PERMNO, header cusip, stock exchange, and starting
    and ending trading dates |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| `crspInfo.pkl` | 包含PERMNO、CUSIP头、股票交易所以及起始和结束交易日期 |'
- en: '| `stockMonthly.pkl` | Monthly stock file, contains PERMNO, date, return, price,
    trading volume, and shares outstanding |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| `stockMonthly.pkl` | 每月股票文件，包含PERMNO、日期、收益、价格、交易量和流通股数 |'
- en: '| `indexMonthly.pkl` | Index file with a monthly frequency |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| `indexMonthly.pkl` | 每月频率的指数文件 |'
- en: '| `indexDaily.pkl` | Index file with a monthly frequency |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| `indexDaily.pkl` | 每日频率的指数文件 |'
- en: '| `tradingDaysMonthly.pkl` | Trading days from 1926 to 12/31/2015 for monthly
    data |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| `tradingDaysMonthly.pkl` | 1926年到2015年12月31日的每月交易日数据 |'
- en: '| `tradingDaysDaily.pkl` | Trading days from 1926 to 12/31/2015 for daily data
    |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| `tradingDaysDaily.pkl` | 1926年到2015年12月31日的每日交易日数据 |'
- en: '| `sp500add.pkl` | S&P500 constituents, that is, for each stock when it was
    added to the index and when it was removed from it |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| `sp500add.pkl` | 标准普尔500成分股，即每只股票何时被加入指数以及何时从指数中移除 |'
- en: '| `sp500daily.pkl` | S&P500 daily index level and return |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| `sp500daily.pkl` | 标准普尔500日常指数水平及回报 |'
- en: '| `sp500monthly.pkl` | S&P500 monthly index level and return |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| `sp500monthly.pkl` | 标准普尔500月度指数水平及回报 |'
- en: '| `d1925.pkl` | Daily stock price file for 1925 |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| `d1925.pkl` | 1925年每日股票价格文件 |'
- en: '| `d1926.pkl` | Daily stock price file for 1926 |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| `d1926.pkl` | 1926年每日股票价格文件 |'
- en: '| `…` | [more here between 1926 and 2014] |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| `…` | [更多内容，请见1926年至2014年之间的数据] |'
- en: '| `d2014.pkl` | Daily stock price file for 2014 |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| `d2014.pkl` | 2014年每日股票价格文件 |'
- en: '| `d2015.pkl` | Daily stock price file for 2015 |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| `d2015.pkl` | 2015年每日股票价格文件 |'
- en: 'Table 4.2: A list of Python datasets related CRSP'
  id: totrans-201
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表4.2：与CRSP相关的Python数据集列表
- en: 'To load data is quite straightforward by using the `pandas.read_pickle()` function:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 加载数据非常简单，可以使用 `pandas.read_pickle()` 函数：
- en: '[PRE41]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'To view the first and last couple of observations, the `.head()` and `.tail()`
    functions could be applied:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看前几个和后几个观测值，可以使用 `.head()` 和 `.tail()` 函数：
- en: '[PRE42]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The `PERMNO` is the CRSP's stock `ID`, `PERMCO` is the firm ID, `Name` is the
    company's current name, `Ticker` is the header ticker, that is, the current ticker
    symbol, `EX` is the exchange code (1 for New York Stock Exchange, 2 for American
    Stock Exchange, 3 for Nasdaq), `BEGDATE` is the first trading day while the `ENDDATE`
    is the last trading day for one given `PERMNO`. For the `pandas` module, column
    selection is done by passing a list of column names to our DataFrame.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`PERMNO` 是CRSP的股票 `ID`，`PERMCO` 是公司ID，`Name` 是公司的当前名称，`Ticker` 是股票代码，也就是当前的股票符号，`EX`
    是交易所代码（1表示纽约证券交易所，2表示美国证券交易所，3表示纳斯达克），`BEGDATE` 是首次交易日，而 `ENDDATE` 是某个给定 `PERMNO`
    的最后交易日。对于 `pandas` 模块，选择列是通过将列名的列表传递给我们的 DataFrame 来完成的。'
- en: 'For example, to choose just three columns of `PERMNO`, `BEGDATE`, and `ENDDATE`,
    we have the following code:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要选择 `PERMNO`、`BEGDATE` 和 `ENDDATE` 三列，我们可以使用以下代码：
- en: '[PRE43]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The `Compustat(CapitalIQ)` database offers financial statements such as balance
    sheet, income statement, and cash flows for public firms in the US from 1960 to
    today. The database is generated by Standard &Poor''s. You can find more about
    it at [http://marketintelligence.spglobal.com/our-capabilities/our-capabilities.html?product=compustat-research-insight](http://marketintelligence.spglobal.com/our-capabilities/our-capabilities.html?product=compustat-research-insight).
    The following table lists a few related Python datasets:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '`Compustat(CapitalIQ)` 数据库提供了自1960年以来美国上市公司如资产负债表、利润表和现金流量表等财务报表。该数据库由标准普尔公司生成。你可以在
    [http://marketintelligence.spglobal.com/our-capabilities/our-capabilities.html?product=compustat-research-insight](http://marketintelligence.spglobal.com/our-capabilities/our-capabilities.html?product=compustat-research-insight)
    找到更多信息。以下表格列出了几个相关的Python数据集：'
- en: '| Name | Description |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| Name | 描述 |'
- en: '| --- | --- |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `compInfo.pkl` | Key header file for all firms |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| `compInfo.pkl` | 所有公司关键头文件 |'
- en: '| `varDefinitions.pkl` | Definitions of all variables used in the datasets
    |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| `varDefinitions.pkl` | 数据集中的所有变量定义 |'
- en: '| `deletionCodes.pkl` | Shows when a firm was deleted from the database and
    why |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| `deletionCodes.pkl` | 显示某公司何时从数据库中删除以及原因 |'
- en: '| `acc1950.pkl` | Annual financial statements for 1950 |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| `acc1950.pkl` | 1950年年度财务报表 |'
- en: '| `acc1951.pkl` | Annual financial statements for 1951 |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| `acc1951.pkl` | 1951年年度财务报表 |'
- en: '| `acc2014.pkl` | Annual financial statements for 2014 |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| `acc2014.pkl` | 2014年年度财务报表 |'
- en: '| `acc2015.pkl` | Annual financial statements for 2015 |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| `acc2015.pkl` | 2015年年度财务报表 |'
- en: 'Table 4.3: A list of Python datasets related Compustat'
  id: totrans-219
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表4.3：与Compustat相关的Python数据集列表
- en: 'Note that since both CRSP and Compustat are proprietary databases, related
    datasets willnot be available on the author''s website. If an instructor is interested
    in thatdata, please contact the author directly. A few datasets for high frequency
    data are listed in the following table:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于CRSP和Compustat都是专有数据库，相关数据集不会在作者的网站上提供。如果教师对这些数据感兴趣，请直接联系作者。以下是一些高频数据集的列表：
- en: '| Name | Description |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| Name | 描述 |'
- en: '| --- | --- |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `TORQct.pkl` | TORQ database for Consolidated Trade |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| `TORQct.pkl` | TORQ数据库的合并交易 |'
- en: '| `TORQcq.pkl` | TORQ database for Consolidated Quote |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| `TORQcq.pkl` | TORQ数据库的合并报价 |'
- en: '| `TORQcod.pkl` | TORQ database for COD |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| `TORQcod.pkl` | TORQ数据库的COD |'
- en: '| `DTAQibmCT` | DTAQ stands for Daily Trade and Quote, millisecond-by-millisecond
    trading data, one-day data for IBM |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| `DTAQibmCT` | DTAQ代表每日交易与报价，是毫秒级的交易数据，提供IBM的一天数据 |'
- en: '| `DTAQibmCQ` | One-day data for IBM, Consolidated Quote |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| `DTAQibmCQ` | IBM的单日数据，综合报价 |'
- en: '| `DTAQ50CT` | One-day data for 50 stocks (Consolidated Trade) |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| `DTAQ50CT` | 50只股票的单日数据（综合交易） |'
- en: '| `DTAQ50CQ` | One-day data for 50 stocks (Consolidated Quote) |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| `DTAQ50CQ` | 50只股票的一日数据（综合报价） |'
- en: 'Table 4.4: A list of Python datasets related high-frequency trading data'
  id: totrans-230
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表4.4：与高频交易数据相关的Python数据集列表
- en: 'Assume that `TORQcq.pkl` is saved under `c:/temp/`. We could view its first
    and last several observations:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 假设`TORQcq.pkl`文件保存在`c:/temp/`目录下。我们可以查看它的前几条和后几条观测数据：
- en: '[PRE44]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The following table shows a few examples of retrieving data for different formats,
    such as SAS, Matlab, and Excel:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了不同格式（如SAS、Matlab和Excel）数据的获取示例：
- en: '| Format | Code |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| 格式 | 代码 |'
- en: '| --- | --- |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '|   | `>>>import pandas as pd` |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '|   | `>>>import pandas as pd` |'
- en: '| CSV | `>>>a=pd.read_csv("c:/temp/ffMonthly.csv",skip=4)` |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| CSV | `>>>a=pd.read_csv("c:/temp/ffMonthly.csv",skip=4)` |'
- en: '| Text | `>>>b=pd.read_table("c:/temp/ffMonthly.txt",skip=4)` |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| 文本 | `>>>b=pd.read_table("c:/temp/ffMonthly.txt",skip=4)` |'
- en: '| Pickle | `>>>c=pd.read_pickle("c:/temp/ffMonthly.pkl")` |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| Pickle | `>>>c=pd.read_pickle("c:/temp/ffMonthly.pkl")` |'
- en: '| SAS | `>>>d= sp.read_sas(''c:/temp/ffMonthly.sas7bdat'')` |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| SAS | `>>>d= sp.read_sas(''c:/temp/ffMonthly.sas7bdat'')` |'
- en: '| Matlab | `>>>import scipy.io as sio``>>>e= sio.loadmat(''c:/temp/ffMonthly.mat'')`
    |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| Matlab | `>>>import scipy.io as sio``>>>e= sio.loadmat(''c:/temp/ffMonthly.mat'')`
    |'
- en: '| Excel | `>>>infile=pd.ExcelFile("c:/temp/ffMonthly.xlsx")``>>>f=infile.parse("ffMonthly",header=T)`
    |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| Excel | `>>>infile=pd.ExcelFile("c:/temp/ffMonthly.xlsx")``>>>f=infile.parse("ffMonthly",header=T)`
    |'
- en: 'Table 4.5: Retrieving data with different formats'
  id: totrans-243
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 表4.5：使用不同格式获取数据
- en: 'To help readers of this chapter, all input files for the preceding table are
    available. Please refer to this link for more information: [http://canisius.edu/~yany/ffMonthly.zip](http://canisius.edu/~yany/ffMonthly.zip).'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助本章的读者，前述表格中的所有输入文件都可以获取。有关更多信息，请参见此链接：[http://canisius.edu/~yany/ffMonthly.zip](http://canisius.edu/~yany/ffMonthly.zip)。
- en: Note
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Reference**:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考文献**：'
- en: Kane, David, 2006, Open Source Finance, working paper, Harvard University, SSRN
    link is at [http://papers.ssrn.com/sol3/papers.cfm?abstract_id=966354](http://papers.ssrn.com/sol3/papers.cfm?abstract_id=966354)
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: Kane, David, 2006，《开源金融》，工作论文，哈佛大学，SSRN链接见[http://papers.ssrn.com/sol3/papers.cfm?abstract_id=966354](http://papers.ssrn.com/sol3/papers.cfm?abstract_id=966354)
- en: Appendix A – Python program for return distribution versus a normal distribution
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 附录A – Python程序用于回报分布与正态分布的比较
- en: '[PRE45]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The corresponding graph is shown here:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的图表如下所示：
- en: '![Appendix A – Python program for return distribution versus a normal distribution](img/B06175_04_17.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![附录A – Python程序用于回报分布与正态分布的比较](img/B06175_04_17.jpg)'
- en: Appendix B – Python program to a draw candle-stick picture
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 附录B – Python程序绘制蜡烛图
- en: '[PRE46]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The picture is shown here:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 图像如下所示：
- en: '![Appendix B – Python program to a draw candle-stick picture](img/B06175_04_18.jpg)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![附录B – Python程序绘制蜡烛图](img/B06175_04_18.jpg)'
- en: Appendix C – Python program for price movement
  id: totrans-256
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 附录C – Python程序用于价格波动
- en: '[PRE47]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The corresponding graph is given here:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的图表如下：
- en: '![Appendix C – Python program for price movement](img/B06175_04_19.jpg)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![附录C – Python程序用于价格波动](img/B06175_04_19.jpg)'
- en: Appendix D – Python program to show a picture of a stock's intra-day movement
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 附录D – Python程序展示股票的日内波动图
- en: '[PRE48]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The corresponding graph is shown here:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的图表如下所示：
- en: '![Appendix D – Python program to show a picture of a stock''s intra-day movement](img/B06175_04_20.jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![附录D – Python程序展示股票的日内波动图](img/B06175_04_20.jpg)'
- en: Appendix E –properties for a pandas DataFrame
  id: totrans-264
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 附录E – pandas DataFrame的属性
- en: 'First, let''s download a Python dataset called `ffMonthly.pickl` `e` from [http://canisius.edu/~yany/python/ffMonthly.pickle](http://canisius.edu/~yany/python/ffMonthly.pickle).
    Assume that the dataset is saved under `c:/temp`:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们从[http://canisius.edu/~yany/python/ffMonthly.pickle](http://canisius.edu/~yany/python/ffMonthly.pickle)下载一个名为`ffMonthly.pickl`
    `e`的Python数据集。假设该数据集保存在`c:/temp`目录下：
- en: '[PRE49]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'The last result shows that the type of `ff` dataset is a panda DataFrame. Because
    of this, it might be a good idea to get more information about this type of data.
    After we type `ff.`, we can see a drop-down list; see the following screenshot:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的结果显示，`ff`数据集的类型是pandas DataFrame。因此，获取更多有关此数据类型的信息可能是个好主意。当我们输入`ff.`时，可以看到一个下拉列表；请参见以下截图：
- en: '![Appendix E –properties for a pandas DataFrame](img/B06175_04_21.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![附录E – pandas DataFrame的属性](img/B06175_04_21.jpg)'
- en: 'We can find a function called `hist()`; see its usage in the following code:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以找到一个名为`hist()`的函数；请参见以下代码中的使用方法：
- en: '[PRE50]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '![Appendix E –properties for a pandas DataFrame](img/B06175_04_22.jpg)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![附录E – pandas DataFrame的属性](img/B06175_04_22.jpg)'
- en: 'For more detail, see the related link at: [http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html).'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多详情，请参见相关链接：[http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html)。
- en: Appendix F –how to generate a Python dataset with an extension of .pkl or .pickle
  id: totrans-273
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 附录 F – 如何生成扩展名为 .pkl 或 .pickle 的 Python 数据集
- en: 'First, let look at the simplest dataset:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看一下最简单的数据集：
- en: '[PRE51]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Reading a Python dataset with an extension of `.pkl` or `.pickle`, we use the`pd.read_pickle()`
    function:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 读取扩展名为 `.pkl` 或 `.pickle` 的 Python 数据集时，我们使用 `pd.read_pickle()` 函数：
- en: '[PRE52]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Next, the Python program is shown to generate the`ffMonthly.pkl` dataset:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，展示用于生成 `ffMonthly.pkl` 数据集的 Python 程序：
- en: '[PRE53]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The first and last several observations are shown here:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是第一个和最后几个观测值：
- en: '[PRE54]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Appendix G – data case #1 -generating several Python datasets'
  id: totrans-282
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '附录 G – 数据案例 #1 - 生成多个 Python 数据集'
- en: 'For this data case, students are required to generate about five Python datasets
    with an extension of `.pkl`:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此数据案例，学生需要生成大约五个 Python 数据集，扩展名为 `.pkl`：
- en: '[PRE55]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Please generate the following datasets with a Python format of `.pickle` (`.pkl`
    or `.pickle`):'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 请使用 Python 格式生成以下数据集，格式为 `.pickle`（`.pkl` 或 `.pickle`）：
- en: '| # | Dataset name | Description |'
  id: totrans-286
  prefs: []
  type: TYPE_TB
  zh: '| # | 数据集名称 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-287
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 1 | `ffDaily` | Daily Fama and French 3 factor time series |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| 1 | `ffDaily` | 每日 Fama 和 French 3 因子时间序列 |'
- en: '| 2 | `ffMonthly5` | Monthly Fama and French 5 factor time series |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| 2 | `ffMonthly5` | 每月 Fama 和 French 5 因子时间序列 |'
- en: '| 3 | `usGDPannual` | US annual GDP (Gross Domestic Product) |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| 3 | `usGDPannual` | 美国年度 GDP（国内生产总值） |'
- en: '| 4 | `usGDPquarterly` | US quarterly GDP (Gross Domestic Product) |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '| 4 | `usGDPquarterly` | 美国季度 GDP（国内生产总值） |'
- en: '| 5 | `dollarIndex` | US dollar index |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '| 5 | `dollarIndex` | 美元指数 |'
- en: '| 6 | `goldPriceMonthly` | Monthly gold price |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| 6 | `goldPriceMonthly` | 每月黄金价格 |'
- en: '| 7 | `goldPriceDaily` | Daily Gold price |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
  zh: '| 7 | `goldPriceDaily` | 每日黄金价格 |'
- en: '| 8 | `tradingDaysMonthly` | Trading days for monthly time series |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| 8 | `tradingDaysMonthly` | 每月时间序列的交易日 |'
- en: '| 9 | `tradingDaysDaily` | Trading days for daily data |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| 9 | `tradingDaysDaily` | 每日数据的交易日 |'
- en: '| 10 | `spreadAAA` | Moody''s AAA rated bond''s spread |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| 10 | `spreadAAA` | 穆迪 AAA 评级债券的利差 |'
- en: Exercises
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习题
- en: From where could we get daily stock price data?
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以从哪里获取每日股票价格数据？
- en: Could we download returns data directly?
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们能否直接下载收益率数据？
- en: Manually download monthly and daily price data for CitiGroup.
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 手动下载 CitiGroup 的每月和每日价格数据。
- en: Convert daily price data for the CitiGroup to daily returns.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 CitiGroup 的每日价格数据转换为每日收益率。
- en: Convert monthly prices to monthly returns and convert daily returns to monthly
    returns. Are they the same?
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每月价格转换为每月收益率，并将每日收益率转换为每月收益率。它们相同吗？
- en: Are the following two lines equivalent?
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下两行代码是否等效？
- en: '[PRE56]'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: What are advantages and disadvantages of using public stock data versus private
    stock data, for example, from some financial databases?
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用公共股票数据与使用私有股票数据（例如来自某些金融数据库）的优缺点是什么？
- en: Find the annual cost of subscribing `Compustat`, related to accounting information
    and CRSP, related to trading data.
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找订阅`Compustat`的年费用，涉及会计信息，以及与交易数据相关的 CRSP。
- en: Download IBM monthly data from Yahoo Finance. Estimate its standard deviation
    and Sharpe ratio from January 2000 to December 2004.
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Yahoo Finance 下载 IBM 的每月数据。估算其从 2000 年 1 月到 2004 年 12 月的标准差和夏普比率。
- en: What is the annual beta for IBM, DELL, and MSFT from 2001 to 2010?
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2001 到 2010 年间，IBM、DELL 和 MSFT 的年 Beta 值是多少？
- en: What is the correlation between IBM and DELL from 2006 to 2010?
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2006 到 2010 年间，IBM 和 DELL 之间的相关性是多少？
- en: Estimate the mean weekday returns for IBM. Do you observe a weekday effect?
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 估算 IBM 的平均工作日收益率。你是否观察到工作日效应？
- en: Does the volatility decline over the years? For example, you could select IBM,
    DELL, and MSFT to investigate this hypothesis.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 波动性是否随着年份的推移而下降？例如，你可以选择 IBM、DELL 和 MSFT 来研究这个假设。
- en: 'What is the correlation between S&P500 and DJI (Dow Jones Industrial average)?Note:
    `S&P500` Index ticker in Yahoo Finance is `^GSPC` and for `DJI`it''s`^DJI`.'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: S&P500 与 DJI（道琼斯工业平均指数）之间的相关性是多少？注意：在 Yahoo Finance 中，`S&P500` 指数的代码是 `^GSPC`，`DJI`
    的代码是 `^DJI`。
- en: How do you download data for *n* given tickers?
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何下载 *n* 个给定股票代码的数据？
- en: Write an R program to input *n* tickers from an input file.
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写 R 程序以从输入文件中输入 *n* 个股票代码。
- en: What is the correlation coefficient between the US stock market (`S&P500`) and
    the Hong Kong market (Hang Seng Index)?
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 美国股市（`S&P500`）与香港市场（恒生指数）之间的相关系数是多少？
- en: Is it true that the Singaporean equity market is more strongly correlated with
    the Japanese equitymarket than with the American equity market?
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新加坡股市是否与日本股市的相关性比与美国股市的相关性更强？
- en: How would you download daily price data for 50 stocks and save to just one text
    file?
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何下载50只股票的每日价格数据并将其保存到一个文本文件中？
- en: After downloading data from Yahoo!Finance,assume that *p* vector contains all
    the daily price data. What is the meaning of the following two lines of code?
    When should we apply them?
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Yahoo!Finance下载数据后，假设*p*向量包含所有的每日价格数据。以下两行代码的含义是什么？我们应该在什么时候应用它们？
- en: '[PRE57]'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Summary
  id: totrans-321
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have discussed various public data sources for economics,
    finance and accounting. For economics, we could go to Federal Reserve Bank's data
    library, Prof. French's Data library to retrieve many useful time series. For
    finance, we could use Yahoo!Finance and Google finance to download historical
    price data. For accounting information, such as latest several years' balance
    sheets and income statements, we could use Yahoo!Finance, Google finance, and
    SEC filings. For the next chapter, we explain many concepts related to interest
    rate. After that, we explain how to price bonds and stocks.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了经济学、金融和会计学的各种公共数据来源。对于经济学，我们可以访问联邦储备银行的数据库、French教授的数据库，获取许多有用的时间序列数据。对于金融学，我们可以使用Yahoo!Finance和Google
    Finance下载历史价格数据。对于会计信息，比如最新几年的资产负债表和利润表，我们可以使用Yahoo!Finance、Google Finance和SEC的文件。下一章，我们将解释与利率相关的许多概念，之后我们会解释如何定价债券和股票。
