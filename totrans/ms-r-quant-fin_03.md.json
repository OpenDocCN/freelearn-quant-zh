["```py\nturnover_data <- read.table(\"turnover_data.csv\", header = T, sep = \";\") \nformat(turnover_data[1:5, 1:6],digits = 3)\n\n```", "```py\n AA    AIG    AXP     BA    BAC      C\n1 0.1101 0.0328 0.0340 0.0310 0.0984 0.0826\n2 0.0502 0.0289 0.0205 0.0157 0.0635 0.0493\n3 0.1157 0.0715 0.0461 0.0344 0.1027 0.1095\n4 0.0440 0.1116 0.0229 0.0228 0.0613 0.0530\n5 0.0514 0.0511 0.0202 0.0263 0.0720 0.0836\n\n```", "```py\nplot(turnover_data$AA[1:26], type = \"l\", main = \"AA\", xlab = \"time\", ylab=\"turnover\")\n\n```", "```py\nAA_average <- matrix(turnover_data$AA, 26, 546/26)\n\nplot(rowMeans(AA_average), type = \"l\", main = \"AA\" , xlab = \"time\", ylab = \"turnover\")\n\n```", "```py\nn <- 520\nm <- ncol(turnover_data)\nsample <- as.matrix(turnover_data[1:n, ])\n\n```", "```py\nS <- sample %*% t(sample)\nD <- eigen(S)$values\nV <- eigen(S)$vectors\n\n```", "```py\nplot(D, main = \"Eigenvalues\", xlab = \"\", ylab = \"\")\n\n```", "```py\nEig <- V[, 1]\nF <- sqrt(n) * Eig\n\n```", "```py\nLambda <- F %*% sample / n\nK <- F %*% Lambda\nIC <- sample - K\n\n```", "```py\nK26 <- matrix(0, 26, m)\n\nfor (i in 1:m) {\n tmp <- matrix(K[,i], 26, n/26)\n K26[,i] <- rowMeans(tmp)\n}\n\n```", "```py\nlibrary(forecast)\n\nmodels <- lapply(1:m, function(i)\n Arima(IC[, i], order = c(1, 0, 0), method = \"CSS\"))\ncoefs <- sapply(models, function(x) x$coef)\nround(coefs, 4)\n\n```", "```py\nlibrary(\"tseries\")arma_mod <- arma(IC[, 1], order = c(1, 0))\n\n```", "```py\nARf <- sapply(1:m, function(i) forecast(models[[i]], h = 26)$mean)\n\n```", "```py\nAR_result <- K26+ARf\n\n```", "```py\nlibrary(tsDyn)\nsetar_mod <- apply(IC,2,setar, 1);\nsetar_coefs <-  sapply(setar_mod, FUN = coefficients)\nround(setar_coefs, 4)\n\n```", "```py\nSETARf <- matrix(0, 27, m)\nSETARf[1,] <- sample[520,]\n\nfor (i in 2:27){\nSETARf[i,] <- \n(setar_coefs[1,]+SETARf[i-1,]*setar_coefs[2,])*\n(SETARf[i-1,] <= setar_coefs[5,]) + \n(setar_coefs[3,]+SETARf[i-1,]*setar_coefs[4,])*\n(SETARf[i-1,] >  setar_coefs[5,])\n}\n\n```", "```py\nSETAR_result = K26 + SETARf[2:27,]\n\n```", "```py\npar(mfrow = c(2, 5))\nfor (i in 1:10) {matplot(cbind(AR_result[, i], turnover_data[521:546, i]), type = \"l\", main = colnames(turnover_data)[i], xlab = \"\", ylab = \"\", col = c(\"red\", \"black\"))}\n\n```"]