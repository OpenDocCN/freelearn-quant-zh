- en: Chapter 8. Extreme Value Theory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The risk of extreme losses is at the heart of many risk management problems
    both in insurance and finance. An extreme market move might represent a significant
    downside risk to the security portfolio of an investor. Reserves against future
    credit losses need to be sized to cover extreme loss scenarios in a loan portfolio.
    The required level of capital for a bank should be high enough to absorb extreme
    operational losses. Insurance companies need to be prepared for losses arising
    from natural or man-made catastrophes, even of a magnitude not experienced before.
  prefs: []
  type: TYPE_NORMAL
- en: '**Extreme Value Theory** (**EVT**) is concerned with the statistical analysis
    of extreme events. The methodology provides distributions that are consistent
    with extreme observations and, at the same time, have parametric forms that are
    supported by theory. EVT''s theoretical considerations compensate the unreliability
    of traditional estimates (caused by sparse data on extremes). EVT allows the quantification
    of the statistics of extreme events, possibly even beyond the most extreme observation
    so far.'
  prefs: []
  type: TYPE_NORMAL
- en: The types of models within EVT that find the most applications in finance and
    insurance are the models of **threshold exceedances**. These characterize the
    distribution of all large observations that exceed some high level, thus providing
    an estimate of the *tail* of the distribution. Since many risk management problems
    can be formulated in terms of the tails of distributions, these models may be
    directly applied to such problems.
  prefs: []
  type: TYPE_NORMAL
- en: The objective of this chapter is to present possible uses of Extreme Value Theory
    in insurance and finance through the example of a real-life risk management application.
    First, we provide a brief overview of the theory of threshold exceedance models
    in EVT. We then work through a detailed example of fitting a model to the tails
    of the distribution of fire losses. We use the fitted model to calculate high
    quantiles (Value at Risk) and conditional expectations (Expected Shortfall) for
    the fire losses.
  prefs: []
  type: TYPE_NORMAL
- en: Theoretical overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let the random variable *X* represent the random loss that we would like to
    model, with *F(x) = P(X ≤ x)* as its distribution function. For a given threshold
    *u*, the excess loss over the threshold *Y = X – u* has the following distribution
    function:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Theoretical overview](img/0933OS_08_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'For a large class of underlying loss distributions, the *F[u](y)* distribution
    of excess losses over a high threshold *u* converges to a **Generalized Pareto
    distribution** (**GPD**) as the threshold rises toward the right endpoint of the
    loss distribution. This follows from an important limit theorem in EVT. For details,
    the reader is referred to *McNeil, Frey, and Embrechts (2005)*. The cumulative
    distribution function of GPD is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Theoretical overview](img/0933OS_08_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here *ξ* is generally referred to as the shape parameter and *β* as the scale
    parameter.
  prefs: []
  type: TYPE_NORMAL
- en: Though strictly speaking, the GPD is only the *limiting* distribution for excess
    losses over a high threshold, however, it serves as the natural model of the excess
    loss distribution even for finite thresholds. In other words, for a high enough
    threshold, the excess distribution can already be considered close enough to GPD,
    so that the latter can be used as a model for the excess distribution. Essentially,
    we assume that
  prefs: []
  type: TYPE_NORMAL
- en: '![Theoretical overview](img/0933OS_08_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: for some *ξ* and *β*.
  prefs: []
  type: TYPE_NORMAL
- en: Once a GPD is fitted to excess losses, it may be used among others to calculate
    high quantiles (Value at Risk) and conditional expectations for the original loss
    distribution. Specifically, the loss distribution function is modeled over the
    threshold *u* as
  prefs: []
  type: TYPE_NORMAL
- en: '![Theoretical overview](img/0933OS_08_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: with *F(u)* typically estimated empirically. This represents a parametric model
    for the tail of the original loss distribution above the threshold.
  prefs: []
  type: TYPE_NORMAL
- en: Application – modeling insurance claims
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the remainder of this chapter, we work through an example of using EVT in
    a real-life risk management application. We apply the preceding methodology to
    fire insurance claims, with the aims of fitting a distribution to the tails and
    providing quantile estimates and conditional expectations to characterize the
    probability and magnitude of large fire losses. We note that the exact same steps
    may be applied to credit losses or operational losses as well. For market risk
    management problems, where the underlying data is generally the return of a security,
    we would remove the gains from the data set and focus on the losses only; otherwise,
    the modeling steps are again identical.
  prefs: []
  type: TYPE_NORMAL
- en: Multiple packages are available in R for extreme value analysis. In this chapter
    we present the `evir` package in the following command. A good overview of the
    various R packages for EVT is provided in *Gilleland, Ribatet, and Stephenson
    (2013)*.
  prefs: []
  type: TYPE_NORMAL
- en: 'As done previously, we need to install and load the `evir` package before we
    use it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The data we use in this example consists of large industrial fire insurance
    claims from Denmark. The data set, covering the years from 1980 to 1990, contains
    all fire losses exceeding one million Danish krone. This is a popular data set
    often used in EVT for demonstration purposes. The data is available in the `evir`
    package; we can load it into our workspace using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The resulting numeric vector contains 2,167 observations as well as the corresponding
    observation times. Type `help(danish)` for further details on the data set.
  prefs: []
  type: TYPE_NORMAL
- en: Exploratory data analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To get some impression of the data, we calculate summary statistics and also
    plot the histogram of claims using the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The following figure shows the histogram of Danish insurance claims.
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploratory data analysis](img/0933OS_08_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The distribution of claims is strongly skewed with a long-right tail, suggesting
    that small fire losses occur quite frequently; however, very large losses may
    occur occasionally as well (the largest claim in the data set is 263 million krone).
    These large claims are not even visible on the following histogram as we have
    truncated the plot at 20 million krone. As shown by the calculation in the following
    command lines, less than 2% of the losses are above this threshold, yet these
    represent 22% of the total loss amount:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: It is the probability of such extremely large losses occurring (as well as their
    expected magnitude) that we are interested in, in this example. Estimating such
    probabilities using relative frequencies of large losses in the sample is unreliable
    due to the small number of such losses.
  prefs: []
  type: TYPE_NORMAL
- en: Tail behavior of claims
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A perhaps more useful visualization of the data can be obtained using a *logarithmic
    scale* for the *x* axis (or even both axes). We perform this by plotting the empirical
    **complementary cumulative distribution function** (**ccdf**, that is, the empirical
    probability of the claims exceeding any given threshold, sometimes also referred
    to as the *survival function*) using the `emplot` function of the `evir` package.
    The following first command creates the plot using logarithmic scales on the x
    axis only, whereas the second command results in a plot with logarithmic scales
    on both axes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The following figure shows the second plot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Tail behavior of claims](img/0933OS_08_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Interestingly, the empirical ccdf is nearly linear when plotted using logarithmic
    scales on both axes. This reveals the fat-tailed nature of the data and the possible
    Pareto-type distribution of the claims (also referred to as *power law*, as the
    ccdf can be written as a power of the thresholds).
  prefs: []
  type: TYPE_NORMAL
- en: Another useful tool to examine whether the data comes from a particular distribution
    is the **quantile-quantile plot** (**Q-Q plot**). This plots quantiles of the
    data against quantiles of a hypothesized distribution. If the distribution assumption
    is correct, the resulting plot will be linear. Deviations from a linear plot reveal
    how the distribution of the data differs from the hypothesized distribution, for
    example, a concave plot indicates that the empirical distribution has a fatter
    tail.
  prefs: []
  type: TYPE_NORMAL
- en: Q-Q plots can be created using the `qplot` function of the `evir` package.
  prefs: []
  type: TYPE_NORMAL
- en: 'For loss data, the natural hypothesized distribution is the exponential distribution;
    consequently, the `qplot` function compares the data to the exponential distribution
    by default. The function, however, allows comparisons to be made to the more general
    GPD distribution by specifying its *ξ* shape parameter via the argument `xi`.
    Additionally, the data can be right truncated at some value via the `trim` argument
    to avoid the largest observations distorting the plot. The following command creates
    a Q-Q plot of the Danish fire loss data against the exponential distribution,
    with the loss data truncated at 100:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The resulting plot also confirms that the empirical distribution has a much
    fatter tail than the exponential distribution and so the latter is not a good
    model for the data.
  prefs: []
  type: TYPE_NORMAL
- en: Determining the threshold
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have established that the data is fat-tailed and follows a power
    law, we turn to fitting a GPD distribution to the threshold exceedances. However,
    before performing that, we need to determine an appropriate threshold. Though
    determining the threshold is at the discretion of the modeler, there exist useful
    tools that help to confirm that the convergence to GPD is already sufficient for
    a given threshold.
  prefs: []
  type: TYPE_NORMAL
- en: 'Perhaps the most useful tool for this is the **mean excess function**, defined
    as the average excess of the random variable *X* over the threshold *u*, defined
    as a function of the threshold:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Determining the threshold](img/0933OS_08_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: It can be easily shown that the mean excess function of the GPD is a linear
    function of the threshold *u*, with a coefficient proportional to the *ξ* shape
    parameter of the distribution (accordingly, in general, a positive gradient of
    the mean excess function indicates fat tails, whereas a negative gradient indicates
    thin tails). Therefore, a reasonable way to determine the threshold is to find
    the value over which the sample mean excess function is approximately linear.
  prefs: []
  type: TYPE_NORMAL
- en: The `meplot` function of the `evir` package plots sample mean excesses over
    increasing thresholds. The `omit` argument allows you to specify the number of
    upper plotting points to be omitted from the plot (again, so that these points
    do not distort the plot).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The following figure shows the resulting sample mean excess plot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Determining the threshold](img/0933OS_08_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The resulting plot looks fairly linear across the whole spectrum of losses;
    consequently, it might even be possible to fit a single GPD distribution to the
    entire data set. However, we may observe a small kink just below 10, possibly
    indicating that smaller losses follow a somewhat different law. A fairly linear
    region can be observed between 10 and 20; above 20 the data becomes sparse. Therefore,
    a threshold of 10 can be considered a reasonable choice that is consistent with
    the sample mean excess function. This leaves us with 109 losses exceeding this
    threshold (5% of the original sample).
  prefs: []
  type: TYPE_NORMAL
- en: Fitting a GPD distribution to the tails
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now we have everything ready to fit a GPD distribution to the tails of the
    fire loss data. We can perform the fitting using the `gpd` function, specifying
    the threshold determined in the preceding section, using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: The `gpd` function uses the **maximum likelihood** (**ML**) method by default
    to estimate the parameters of the GPD distribution. The function returns an object
    of the `gpd` class, containing the estimated parameters (together with their standard
    errors and covariances) as well as the data exceeding the specified threshold.
    The zero value of the `converged` member indicates convergence to the maximum
    in case ML estimation was used. The members `par.ests` and `par.ses` contain the
    estimated *ξ* and *β* parameters and their standard errors, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Our ML estimation thus resulted in the estimated parameters of *ξ* = 0.50 and
    *β* = 6.97, with standard errors of 0.14 and 1.11, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'To verify our results, we may use the `plot(gpdfit)` command that provides
    a menu for plotting the empirical distribution of excesses and the tail of the
    original distribution (along with the fitted GPD), as well as a scatterplot and
    a Q-Q plot of the residuals from the fit. The following figure shows the excess
    distribution and fitted GPD distribution (plot 1 from the menu)—the GPD distribution
    clearly provides a very good fit to the data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fitting a GPD distribution to the tails](img/0933OS_08_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Quantile estimation using the fitted GPD model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have fitted a GPD model to the data, we can use it to estimate high
    quantiles or **Value at Risk** (**VaR**). We can do this using the `gpd.q` function,
    which however needs a list object returned from `plot.gpd` or the `tailplot` function
    (which corresponds to selection 2 of the `plot.gpd` menu). We use the `tailplot`
    function to directly create a plot of the tail of the original Danish fire loss
    distribution. We then pass in the returned object to `gpd.q`, along with the `pp`
    argument specifying the quantile to be estimated.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The estimated 99.9% quantile is 94.29 million Danish krone. As there are only
    three observations exceeding this level, had we estimated this quantile from the
    empirical distribution, our estimate would have been quite prone to error. As
    a comparison, the standard empirically estimated quantile, obtained using the
    `quantile` function, results in an estimated 99.9% quantile of 144.66 million
    Danish krone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Essentially, the standard quantile estimation is driven by the single data point
    144.6576 (corresponding to the third largest loss in the data set). EVT fills
    the data gap with a parametric form for the tail to provide a more reliable estimate.
    This is especially useful in operational risk applications where regulations require
    the calculation of a very high quantile (99.9%).
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to calculating the estimated quantile and its confidence intervals
    (whose probability is specified by the `ci.p` argument), the `gpd.q` function
    also adds an overlay to the tail distribution plot produced by `tailplot`, displayingthe
    point estimate for the quantile (vertical dashed line), and the profile likelihood
    curve of the estimator (dashed curve). The boundaries of the confidence interval
    for the estimation are given by the intersections of the dashed curve and the
    horizontal dashed line, as shown in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Quantile estimation using the fitted GPD model](img/0933OS_08_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Calculation of expected loss using the fitted GPD model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The fitted GPD model might also be used to estimate the expected size of insurance
    loss, given that a certain level of loss is exceeded. Alternatively, we may want
    to estimate the expected loss given that a particular quantile of the loss (for
    example, the 99% quantile) is exceeded. In risk management, the latter measure
    is called **Expected Shortfall** (**ES**). The following commands calculate the
    99% Expected Shortfall using the `gpd.sfall` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The estimated 99% quantile is 27.28 million Danish krone and the estimated 99%
    Expected Shortfall is 58.21 million Danish krone. In other words, assuming that
    the 99% quantile level of 27.28 million is exceeded, the expected loss is 58.21
    million. The following graph shows the estimate of 99% Expected Shortfall for
    Danish fire loss data.
  prefs: []
  type: TYPE_NORMAL
- en: '![Calculation of expected loss using the fitted GPD model](img/0933OS_08_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The resulting graph displays both the 99% quantile or VaR (first vertical dashed
    line and corresponding profile likelihood curve) and the 99% Expected Shortfall
    (second vertical dashed line and corresponding profile likelihood curve).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we presented a case study of how Extreme Value Theory methods
    can be used in R in a real-life risk management application. After briefly covering
    the theory of threshold exceedance models in EVT, we worked through a detailed
    example of fitting a model to the tails of the distribution of fire insurance
    claims. We used the fitted model to calculate high quantiles (Value at Risk) and
    conditional expectations (Expected Shortfall) for the fire losses. The presented
    methods are readily extendable to market, credit, or operational risk losses as
    well.
  prefs: []
  type: TYPE_NORMAL
