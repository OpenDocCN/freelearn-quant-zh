["```py\n    import pandas as pd\n    import numpy as np\n    import yfinance as yf \n    ```", "```py\n    df = yf.download(\"MSFT\",\n                     start=\"2020-01-01\",\n                     end=\"2020-12-31\",\n                     auto_adjust=False,\n                     progress=False)\n    df[\"simple_rtn\"] = df[\"Adj Close\"].pct_change()\n    df = df.dropna() \n    ```", "```py\n    df[\"Adj Close\"].plot(title=\"MSFT stock in 2020\") \n    ```", "```py\n    (\n        df[[\"Adj Close\", \"simple_rtn\"]]\n        .plot(subplots=True, sharex=True, \n              title=\"MSFT stock in 2020\")\n    ) \n    ```", "```py\ndf.plot.line(y=\"Adj Close\", title=\"MSFT stock in 2020\") \n```", "```py\nfig, ax = plt.subplots(2, 1, sharex=True)\ndf[\"Adj Close\"].plot(ax=ax[0])\nax[0].set(title=\"MSFT time series\",\n          ylabel=\"Stock price ($)\")\n\ndf[\"simple_rtn\"].plot(ax=ax[1])\nax[1].set(ylabel=\"Return (%)\")\nplt.show() \n```", "```py\ndf[\"Adj Close\"].plot(title=\"MSFT stock in 2020\", backend=\"plotly\") \n```", "```py\n    import pandas as pd\n    import nasdaqdatalink\n    import seaborn as sns \n\n    nasdaqdatalink.ApiConfig.api_key = \"YOUR_KEY_HERE\" \n    ```", "```py\n    df = (\n        nasdaqdatalink.get(dataset=\"FRED/UNRATENSA\", \n                           start_date=\"2014-01-01\", \n                           end_date=\"2019-12-31\")\n        .rename(columns={\"Value\": \"unemp_rate\"})\n    )\n    df.plot(title=\"Unemployment rate in years 2014-2019\") \n    ```", "```py\n    df[\"year\"] = df.index.year\n    df[\"month\"] = df.index.strftime(\"%b\") \n    ```", "```py\n    sns.lineplot(data=df, \n                 x=\"month\", \n                 y=\"unemp_rate\", \n                 hue=\"year\",\n                 style=\"year\", \n                 legend=\"full\",\n                 palette=\"colorblind\")\n    plt.title(\"Unemployment rate - Seasonal plot\")\n    plt.legend(bbox_to_anchor=(1.05, 1), loc=2) \n    ```", "```py\n    from statsmodels.graphics.tsaplots import month_plot, quarter_plot\n    import plotly.express as px \n    ```", "```py\n    month_plot(df[\"unemp_rate\"], ylabel=\"Unemployment rate (%)\")\n    plt.title(\"Unemployment rate - Month plot\") \n    ```", "```py\n    quarter_plot(df[\"unemp_rate\"].resample(\"Q\").mean(), \n                 ylabel=\"Unemployment rate (%)\")\n    plt.title(\"Unemployment rate - Quarter plot\") \n    ```", "```py\n    fig = px.line_polar(\n        df, r=\"unemp_rate\", theta=\"month\", \n        color=\"year\", line_close=True, \n        title=\"Unemployment rate - Polar seasonal plot\",\n        width=600, height=500,\n        range_r=[3, 7]\n    )\n    fig.show() \n    ```", "```py\n    import pandas as pd\n    import yfinance as yf\n    import cufflinks as cf\n    from plotly.offline import iplot, init_notebook_mode\n    import plotly.express as px\n    import pandas_bokeh\n    cf.go_offline()\n    pandas_bokeh.output_notebook() \n    ```", "```py\n    df = yf.download(\"MSFT\",\n                     start=\"2020-01-01\",\n                     end=\"2020-12-31\",\n                     auto_adjust=False,\n                     progress=False)\n    df[\"simple_rtn\"] = df[\"Adj Close\"].pct_change()\n    df = df.loc[:, [\"Adj Close\", \"simple_rtn\"]].dropna()\n    df = df.dropna() \n    ```", "```py\n    df.iplot(subplots=True, shape=(2,1),\n             shared_xaxes=True,\n             title=\"MSFT time series\") \n    ```", "```py\n    df[\"Adj Close\"].plot_bokeh(kind=\"line\", \n                               rangetool=True, \n                               title=\"MSFT time series\") \n    ```", "```py\n    fig = px.line(data_frame=df,\n                  y=\"Adj Close\",\n                  title=\"MSFT time series\")\n    fig.show() \n    ```", "```py\n    from datetime import date \n    ```", "```py\n    selected_date_1 = date(2020, 2, 19)\n    selected_date_2 = date(2020, 3, 23)\n    first_annotation = {\n        \"x\": selected_date_1,\n        \"y\": df.query(f\"index == '{selected_date_1}'\")[\"Adj Close\"].squeeze(),\n        \"arrowhead\": 5,\n        \"text\": \"COVID decline starting\",\n        \"font\": {\"size\": 15, \"color\": \"red\"},\n    }\n    second_annotation = {\n        \"x\": selected_date_2,\n        \"y\": df.query(f\"index == '{selected_date_2}'\")[\"Adj Close\"].squeeze(),\n        \"arrowhead\": 5,\n        \"text\": \"COVID recovery starting\",\n        \"font\": {\"size\": 15, \"color\": \"green\"},\n        \"ax\": 150,\n        \"ay\": 10\n    } \n    ```", "```py\n    fig.update_layout(\n     {\"annotations\": [first_annotation, second_annotation]}\n    )\n    fig.show() \n    ```", "```py\n    import pandas as pd\n    import yfinance as yf \n    ```", "```py\n    df = yf.download(\"TWTR\",\n                     start=\"2018-01-01\",\n                     end=\"2018-12-31\",\n                     progress=False,\n                     auto_adjust=True) \n    ```", "```py\n    import cufflinks as cf\n    from plotly.offline import iplot\n    cf.go_offline() \n    ```", "```py\n    qf = cf.QuantFig(\n      df, title=\"Twitter's Stock Price\", \n      legend=\"top\", name=\"Twitter's stock prices in 2018\"\n    ) \n    ```", "```py\n    qf.add_volume()\n    qf.add_sma(periods=20, column=\"Close\", color=\"red\")\n    qf.add_ema(periods=20, color=\"green\") \n    ```", "```py\n    qf.iplot() \n    ```", "```py\n    import plotly.graph_objects as go\n    import mplfinance as mpf \n    ```", "```py\n    fig = go.Figure(data=\n      go.Candlestick(x=df.index,\n      open=df[\"Open\"],\n      high=df[\"High\"],\n      low=df[\"Low\"],\n      close=df[\"Close\"])\n    )\n    fig.update_layout(\n      title=\"Twitter's stock prices in 2018\",\n      yaxis_title=\"Price ($)\"\n    )\n    fig.show() \n    ```", "```py\n    mpf.plot(df, type=\"candle\",\n             mav=(10, 20),\n             volume=True,\n             style=\"yahoo\",\n             title=\"Twitter's stock prices in 2018\",\n             figsize=(8, 4)) \n    ```"]