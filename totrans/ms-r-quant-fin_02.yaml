- en: Chapter 2. Factor Models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In most of the cases in finance, valuation of financial assets is based on
    the discounted cash flow method; hence, the present value is calculated as the
    discounted value of the expected future cash flows. Therefore, in order to be
    able to value assets, we need to know the appropriate rate of return that reflects
    the time value of money and also the risk of the given asset. There are two main
    approaches to determine expected returns: the **capital asset pricing model (CAPM)**
    and the **arbitrage pricing theory (APT)**. CAPM is an equilibrium model, while
    APT builds on the no-arbitrage principle; thus, these approaches have quite different
    starting points and inner logic. However, the final pricing formula we get can
    be quite similar, depending on the market factors we use. For the comparison of
    CAPM and APT, see *Bodie-Kane-Marcus (2008)*. When we test any of these theoretical
    models on real-world data, we perform linear regressions. This chapter focuses
    on APT, since we have discussed CAPM in more detail in *Daróczi et al. (2013)*.'
  prefs: []
  type: TYPE_NORMAL
- en: This chapter is divided into two parts. In the first part, we introduce the
    theory of APT in general, and then we present a special three-factor model published
    in a seminal paper of *Fama and French*. In the second part, we show how to use
    R for data selection and how to estimate the pricing coefficients from real market
    data, and finally we re-examine the famous Fama-French model on a more recent
    sample.
  prefs: []
  type: TYPE_NORMAL
- en: Arbitrage pricing theory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'APT relies on the assumption that asset returns in the market are determined
    by macroeconomic and firm-specific factors, and asset returns are generated by
    the following linear factor model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Arbitrage pricing theory](img/2078OT_02_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Equation 1
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, *E(r[i])* is the expected return of asset *i*, *F[j]* stands for the
    unexpected change of the *j*th factor, and β*[ij]* shows the *i*th security''s
    sensitivity for that factor, while *e[i]* is the return caused by unexpected firm-specific
    events. So ![Arbitrage pricing theory](img/2078OT_02_02.jpg) represents the random
    systemic effect, and *e[i]* represents the non-systemic (that is idiosyncratic)
    effect, which is not captured by the market factors. Being unexpected, both ![Arbitrage
    pricing theory](img/2078OT_02_02.jpg) and *e[i]* have a zero mean. In this model,
    factors are independent of each other and the firm-specific risk. Thus, asset
    returns are derived from two sources: the systemic risk of the factors that affect
    all assets in the market and the non-systematic risk that impacts only that special
    firm. A non-systemic risk can be diversified by holding more assets in the portfolio.
    In contrast, a systemic risk cannot be diversified, as it is caused by economy-wide
    sources of risks that affect the overall stock market (*Brealey-Myers, 2005*).'
  prefs: []
  type: TYPE_NORMAL
- en: As a consequence of the model, the realized return of an asset is the linear
    combination of multiple random factors *(Wilmott, 2007)*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Other important assumptions of APT are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: There are a finite number of investors on the market who optimize their portfolio
    for the next period. They are equally informed and have no market power.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is a riskless asset and an infinite number of risky assets traded continuously;
    thus, firm-specific risks can be totally eliminated by diversification. A portfolio
    that has zero firm-specific risks is called a well-diversified portfolio.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Investors are rational in the sense that if an arbitrage opportunity occurs
    (financial assets are mispriced relative to each other), then investors immediately
    buy the underpriced security/securities and sell the overpriced one(s), and they
    will take an infinitely large position in order to earn as much riskless profit
    as possible. Consequently, any mispricing will disappear on the spot.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Factor portfolios exist, and they are continuously tradable. A factor portfolio
    is a well-diversified portfolio that reacts only to one of the factors; specifically,
    it has a beta of 1 for that specified factor and a beta of 0 for all other factors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'From the preceding assumptions, it can be shown that any portfolio''s risk
    premium equals the weighted sum of the factor portfolios'' risk premium *(Medvegyev-Száz,
    2010)*. The following pricing formula can be derived in the case of a two-factor
    model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Arbitrage pricing theory](img/2078OT_02_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Equation 2
  prefs: []
  type: TYPE_NORMAL
- en: Here, *r[i]* is the return of the *i*th asset, *r[f]* is the risk-free return,
    β*[i1]* is the sensitivity of the *i*th stock's risk premium to the first systemic
    factor, and (*r[1]-r[f]*) is the risk premium of this factor. Similarly, β*[i2]*
    is the sensitivity of the *i*th stock's risk premium to the second factor's excess
    return (*r[2]-r[f]*).
  prefs: []
  type: TYPE_NORMAL
- en: 'When we implement APT, we perform a linear regression in the following form:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Arbitrage pricing theory](img/2078OT_02_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Equation 3
  prefs: []
  type: TYPE_NORMAL
- en: Here, *α[i]* stands for a constant and *ε[i]* is the asset's non-systemic, firm-specific
    risk. All other variables are the same as mentioned previously.
  prefs: []
  type: TYPE_NORMAL
- en: 'If there is only one factor in the model, and it is the return of the market
    portfolio, the pricing equation of the CAPM model and APT model will coincide:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Arbitrage pricing theory](img/2078OT_02_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Equation 4
  prefs: []
  type: TYPE_NORMAL
- en: 'In this case, the formula to be tested on real market data is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Arbitrage pricing theory](img/2078OT_02_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Equation 5
  prefs: []
  type: TYPE_NORMAL
- en: Here, ![Arbitrage pricing theory](img/2078OT_02_07.jpg) is the return of a market
    portfolio represented by a market index (like the S&P 500). This is why we call
    Equation (5) the index model.
  prefs: []
  type: TYPE_NORMAL
- en: Implementation of APT
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The implementation of APT can be split into four steps: identifying the factors,
    estimating the factor coefficient, estimating the factor premiums, and pricing
    with APT (*Bodie et al. 2008*):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Identifying the factors**: As APT mentions nothing about the factors, they
    have to be identified empirically. These factors are usually macroeconomic factors,
    like stock market return, inflation, business cycle, and so on. The main problem
    in using macroeconomic factors is that factors are usually not independent of
    each other. The identification of the factors is often carried out by factor analysis.
    However, factors identified by factor analysis cannot necessarily be interpreted
    in an economically meaningful way.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Estimating factor coefficients**: In order to estimate the coefficients in
    a multivariate linear regression model, a general version of Equation (3) is used.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Estimating the factor premiums**: The estimation of the factor premiums is
    based on historical data, taking the average of the historical time-series data
    of the premiums of the factor portfolios.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Pricing with APT**: Equation (2) is used for calculating the expected return
    of any asset by substituting the appropriate variables into the equation.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fama-French three-factor model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Fama and French proposed a multifactor model in 1996, in which they used corporate
    indicators as factors instead of macroeconomic factors, since they found that
    these factors better describe the systemic risk of assets. Fama and French (1996)
    extended the index model by adding the firm size and the book-to-market ratio
    as return-generating factors to the market portfolio returns (*Fama and French,
    1996*).
  prefs: []
  type: TYPE_NORMAL
- en: The firm size factor was constructed by taking the difference between the returns
    of small and large firms (*r[SMB]*). The name of the variable was SMB, which is
    derived from "small minus big". The book-to-market factor was calculated by taking
    the difference between firms' returns that have a high and low book-to-market
    ratio (*r[HML]*). The name of the variable was HML, which is derived from "high
    minus low".
  prefs: []
  type: TYPE_NORMAL
- en: 'Their model was the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fama-French three-factor model](img/2078OT_02_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Equation 6
  prefs: []
  type: TYPE_NORMAL
- en: Here, *α[i]* is a constant, which shows the abnormal rate of return, *r[f]*
    is the risk-free return, and β*[iHML]* is the *i*th asset's sensitivity to the
    book-to-market factor, while β*[iSMB]* is the *i*th asset's sensitivity to the
    factor of size, β*[iM]* is the sensitivity of the *i*th stock's risk premium to
    the market index factor, (*r[M]-r[f]*) is the risk premium of this factor, and
    *e[i]* is the asset's non-systemic, firm-specific risk with zero mean.
  prefs: []
  type: TYPE_NORMAL
- en: Modeling in R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the following section, we will learn the implementation of the previously
    described models with the help of R.
  prefs: []
  type: TYPE_NORMAL
- en: Data selection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In [Chapter 4](ch04.html "Chapter 4. Big Data – Advanced Analytics"), *Big Data
    – Advanced Analytics*, we will discuss in detail the aspects and methods of getting
    data from open sources and working with them efficiently. Here, we only present
    how the time series of stock prices and other relevant information can be acquired
    and used for the factor model's estimations.
  prefs: []
  type: TYPE_NORMAL
- en: We used the `quantmod` package to collect the database.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is how it works in R:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'As a result, we need to wait for a few seconds while data is fetched, and then
    we can see the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we have a data frame R object that contains about 6,500 stocks that are
    traded on different exchanges such as AMEX, NASDAQ, or NYSE. In order to see the
    variables that the dataset contains, we can use the `str` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We can drop the variables that we don''t really need and include the information
    about market capitalization and the book value of the company coming from a different
    database as new variables since we will need them to estimate the Fama-French
    model:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'We will also need the time series of the risk-free return, which will be quantified
    in this calculation by the one-month USD LIBOR rate:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: We can ignore the warning messages as data is still assigned to the LIBOR variable.
  prefs: []
  type: TYPE_NORMAL
- en: The `Quandl` package, the `tseries` package, and other packages that collect
    data are discussed in [Chapter 4](ch04.html "Chapter 4. Big Data – Advanced Analytics"),
    *Big Data – Advanced Analytics*, in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: This can also be used to get the prices of stocks, and the S&P 500 index can
    be used as the market portfolio.
  prefs: []
  type: TYPE_NORMAL
- en: 'We have a table with stock prices (a time series of approximately 5,000 stock
    prices between June 1, 2010 to June 1, 2014). The first and last few columns look
    like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: If we have the data saved on our hard drive, we can simply read it with the
    `read.table` function. In [Chapter 4](ch04.html "Chapter 4. Big Data – Advanced
    Analytics"), *Big Data – Advanced Analytics*, we will discuss how to collect data
    directly from the Internet.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we have all the data we need: the market portfolio (S&P 500), the price
    of stocks, and the risk-free rates (one-month LIBOR).'
  prefs: []
  type: TYPE_NORMAL
- en: 'We have chosen to delete the variables with missing values and 0 or negative
    prices, in order to clean the database. The easiest way to do this is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: To use the `colMins` function, we apply the `matrixStats` package. Now, we can
    start working with the data.
  prefs: []
  type: TYPE_NORMAL
- en: Estimation of APT with principal component analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In practice, it is not easy to carry out a factor analysis, because identifying
    the macro variables that have an effect on the securities' return is difficult
    (*Medvegyev – Száz, 2010, pp. 42*). In many cases, the latent factors that drive
    the returns are searched by principal component analysis.
  prefs: []
  type: TYPE_NORMAL
- en: From the originally downloaded 6,500 stocks, we can use the data of 4,015 stocks;
    the rest were excluded because of missing values or 0 prices. Now, we omit the
    first two columns because we do not need the dates in this section, and the S&P
    500 is considered as a separate factor in itself; hence, we do not include it
    in the principal component analysis (PCA). After this, the log returns are computed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: There exists another way to calculate the log returns of a given asset, that
    is, by using `return.calculate(data, method="log")` with the `PerformanceAnalytics`
    library.
  prefs: []
  type: TYPE_NORMAL
- en: 'As we have too many stocks, in order to carry out PCA, either we have to have
    data of at least 25 years, or we need to reduce the number of stocks. It''s hopeless
    for factor models to remain stable for decades; hence, for illustration purposes,
    we choose to select 10 percent of the stocks randomly and compute the model for
    this sample:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '`runif(nrow(r)) < 0.1` is a 4,013 dimension 0-1 vector, which chooses approximately
    10 percent of the columns (in our case, 393) from the table. We can also use the
    following sample function for this, on which you can find further details at [http://stat.ethz.ch/R-manual/R-devel/library/base/html/sample.html](http://stat.ethz.ch/R-manual/R-devel/library/base/html/sample.html):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: As a result, we receive a `princomp` class object, which has eight attributes,
    of which the most important ones are the loading matrix and the `sdev` attributes,
    which contain the standard deviations of the components. The first principal component
    is the vector on which the data set has the maximum variance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s check the standard deviations of the principal component:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Estimation of APT with principal component analysis](img/2078OT_02_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We can see that the first five components are separated; consequently, five
    factors should be chosen, but other factors also have significant standard deviations,
    so the market cannot be explained by a few factors.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can confirm this result by calling the `factanal` function, which estimates
    the factor model with five factors:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'We notice that it takes much more time to perform this computation. Factor
    analysis is related to PCA, but is a little more complicated from a mathematical
    aspect. As a result, we get an object of class `factanal`, which has many attributes,
    but now, we are only interested in the following part of the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: This output shows that the factor model with five factors fits, but the explained
    variance is only approximately 30 percent, which means that the model should be
    extended with other factors as well.
  prefs: []
  type: TYPE_NORMAL
- en: Estimation of the Fama-French model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have a data frame with prices of the 4,015 stocks for five years, and the
    LIBOR data frame with the LIBOR time series. First, we need to compute the returns
    and combine them with the LIBOR rate.
  prefs: []
  type: TYPE_NORMAL
- en: 'As a first step, we omit the dates that are not for mathematical computations,
    and then we compute the log returns for each of the remaining columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'After calculating the log returns, we put back the dates to the returns, and
    then, as a last step, we combine the two data sets:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: It is worth mentioning that the `merge` function operates on data frames equivalent
    to the (inner) join SQL statement.
  prefs: []
  type: TYPE_NORMAL
- en: 'The result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'We adjust the LIBOR rate to the daily returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'As the LIBOR rates are quoted on a money-market basis - (actual/360) day-count
    convention - and the time series contain the rates in percentage, we divided the
    LIBOR by 36,000\. Now, we need to compute the three variables of the Fama-French
    model. As described in the *Data selection* section, we have the stocks'' data
    frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'We have to drop the stocks for which we do not have price data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'We have the market cap as a variable; we still need to compute the book-to-market
    ratio for each:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we need to compute the SMB and HML factors. For simplification, we will
    define companies as `BIG` if they are bigger than the average. The same principle
    is applied for the book-to-market ratio:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'These arrays contain the symbols of the `BIG` and `SMALL` companies. Now, we
    can define the SMB factor:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'We define the HML factor as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'The third factor is calculated:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'After defining the three factors, we test it on the stock of Citigroup Inc.
    (Citi) and on Exelixis, Inc. (EXEL):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'The **GLM (general linear model)** function works as follows: it takes the
    data and formula as arguments. The formula is a string in the form of response
    ~ terms, where the response is a variable name in the data frame and terms specify
    the predictors in the model, so it consists of variable names in the data set
    separated by `+` operators. This function can also be used for logistic regression,
    but the default is linear.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The output of the model is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of the model summary is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: The results show that the only significant factor is the market premium, which
    means that the stock return of Citigroup seems to moves together with the whole
    market itself.
  prefs: []
  type: TYPE_NORMAL
- en: 'To plot the results, this command should be used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows an estimated risk premium of the Fama-French
    model for Citigroup:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Estimation of the Fama-French model](img/2078OT_02_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: If we have a look at the graph we can see that we have an outlier in the returns.
    Let’s see what happens if we get rid of it, by replacing it with 0.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'If we run the same code again to create the model, and calculate the estimated
    and observed returns again we get the following results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: According to the results, the all the three factors are significant.
  prefs: []
  type: TYPE_NORMAL
- en: The GLM function does not return R². For linear regression, the lm function
    can be used exactly the same way, and we can get from model summary r.squared
    = 0.6446.
  prefs: []
  type: TYPE_NORMAL
- en: 'This result indicates that the variables explain more than 64 percent of the
    variance of the risk-premium of Citi. Let’s plot the new results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'The output in this case is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Estimation of the Fama-French model](img/2078OT_02_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We test the model on another stock, EXEL, as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'The output for the model summary is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: According to the results, all of the three factors are significant.
  prefs: []
  type: TYPE_NORMAL
- en: The `GLM` function does not contain R². For linear regression, the lm function
    can be used exactly the same way, and we get `r.squared = 0.2723` from model summary.
    Based on the results, the variables explain more than 27 percent of the variance
    of the risk premium of EXEL.
  prefs: []
  type: TYPE_NORMAL
- en: 'To plot the results, the following command can be used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '![Estimation of the Fama-French model](img/2078OT_02_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we saw how a multifactor model can be built and implemented.
    As a result of a principal component analysis, we identified five independent
    factors that explained asset returns, but they seemed to be insufficient, given
    that they explained only 30 percent of the variance. For illustration, we also
    reproduced the famous Fama-French model on real market data, where, apart from
    the market factor, two additional firm-specific factors (SMB and HML) were also
    used. We used built-in functions for principal component analysis and factor analysis,
    and we have shown how to use a general linear model for regression analysis.
  prefs: []
  type: TYPE_NORMAL
- en: We found that the three factors were significant. Hence, we can conclude that
    on a more recent sample, the Fama-French factors have explanatory power. We encourage
    you to develop and test new multifactor pricing formulas that work as the classical
    ones, or even better.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: E.F. Fama, and K.R. French (1996), Multifactor Explanations of asset Pricing
    Anomalies, Journal of Finance 51, pp. 55-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Z. Bodie, A. Kane, and A. Marcus (2008), Essentials of Investment, Edition 7,
    McGraw-Hill Irwin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: P. Medvegyev, and J. Száz (2010), A meglepetések jellege a pénzügyi piacokon,
    Bankárképző, Budapest
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: P. Wilmott (2007), Paul Wilmott Introduces Quantitative Finance, Edition 2,
    John Wiley & Sons Ltd, West Sussex
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: G. Daróczi, M. Puhle, E. Berlinger, P. Csóka, D. Havran, M, Michaletzky, Zs.
    Tulassay, K. Váradi and A. Vidovics-Dancs (2013), Introduction to R for Quantitative
    Finance, Packt Publishing, Birmingham-Mumbai
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'S.A. Ross (1976), Return, Risk and Arbitrage: in: Risk and Return in Finance,
    Cambridge, Mass, Ballinger'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gy .Walter, E. Berlinger (1999), Faktormodellek az értékpapírpiacokon (Factormodels
    on securities' markets), Bankszemle, 43(4), pp. 34-43\. ISSN 0133-0519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
