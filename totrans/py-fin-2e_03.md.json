["```py\n>>>import scipy as sp\n>>> sp.fv(0.1,2,0,100)\n-121.00000000000001\n```", "```py\n>>> help(sp.fv)\n```", "```py\nfv(rate, nper, pmt, pv, when='end')\n```", "```py\n>>>import scipy as sp\n>>> sp.fv(0.1,2,100,0) \n    -210.0000000000002\n       >>>\n```", "```py\n>>> 234/(1+0.0145)**5\n     217.74871488824184\n>>> sp.pv(0.0145,5,0,234)\n     -217.74871488824184\n```", "```py\n>>>import scipy as sp\n>>> help(sp.pv)\n```", "```py\n>>> 3000/0.025\n   120000.0\n```", "```py\n>>> 3000/(0.025-0.01)\n199999.99999999997\n```", "```py\n>>>import numpy.lib.financial as fin\n>>> fin.pv(0.01,10,20,0,1)\n-191.32035152017377\n```", "```py\n>>>import numpy.lib.financial as fin\n>>> fin.pv(0.01,10,20,0)*(1+0.01)\n-191.3203515201738\n```", "```py\n>>> import fincal\n>>> fincal.pvAnnuityDue(0.01,10,20)\n191.32035152017383\n```", "```py\n>>>import fincal\n>>>help(fincal.pvAnnuityDue)\nHelp on function pvAnnuityDue in module __main__:\n\npvAnnuityDue(r, n, c)\n     Objective : estimate present value of annuity due\n          r    : period rate \n          n    : number of periods    \n          c    : constant cash flow \n```", "```py\nExample 1: >>>pvAnnuityDue(0.1,10,20)\n                     135.1804763255031\n\n    Example #2:>>> pvAnnuityDue(c=20,n=10,r=0.1)\n                     135.1804763255031\n>>>\n```", "```py\n>>> import fincal\n>>> fincal.pvGrowingAnnuity(0.1,10,20,0.03)\n137.67487382555464\n>>>\n```", "```py\n>>> import fincal\n>>> help(fincal.pvGrowingAnnuity)\nHelp on function pvGrowingAnnuity in module fincal:\npvGrowingAnnuity(r, n, c, g)\n     Objective: estimate present value of a growting annuity    \n         r    : period discount rate\n         n    : number of periods \n         c    : period payment\n         g    : period growth rate  (g<r)\n```", "```py\nExample #1 >>>pvGrowingAnnuity(0.1,30,10000,0.05)\n                    150463.14700582038\n\n    Example #2: >>> pvGrowingAnnuity(g=0.05,r=0.1,c=10000,n=30)\n                      150463.14700582038\n>> >\n```", "```py\n>>> import numpy.lib.financial as fin\n>>> dir(fin)\n['__all__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', '_convert_when', '_g_div_gp', '_rbl', '_when_to_num', 'absolute_import', 'division', 'fv', 'ipmt', 'irr', 'mirr', 'np', 'nper', 'npv', 'pmt', 'ppmt', 'print_function', 'pv', 'rate']\n>>>\nBelow are a few examples, below. \n>>>import numpy.lib.financial as fin\n>>> fin.pv(0.1,3,0,100)      # pv of one future cash flow\n-75.131480090157751\n>>> fin.pv(0.1,5,100)        # pv of annuity\n-379.07867694084507\n>>> fin.pv(0.1,3,100,100)    # pv of annuity plus pv of one fv\n-323.81667918858022\n>>>\n```", "```py\n>>>import scipy as sp\n>>>import numpy.lib.financial as fin\n```", "```py\n>>> import fincal\n>>> dir(fincal)\n ['CND', 'EBITDA_value', 'IRR_f', 'IRRs_f', 'NPER', 'PMT', 'Rc_f', 'Rm_f', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__request', '__spec__', 'bondPrice', 'bsCall', 'convert_B_M', 'duration', 'exp', 'fincalHelp', 'fvAnnuity', 'fv_f', 'get_200day_moving_avg', 'get_50day_moving_avg', 'get_52week_high', 'get_52week_low', 'get_EBITDA', 'get_all', 'get_avg_daily_volume', 'get_book_value', 'get_change', 'get_dividend_per_share', 'get_dividend_yield', 'get_earnings_per_share', 'get_historical_prices', 'get_market_cap', 'get_price', 'get_price_book_ratio', 'get_price_earnings_growth_ratio', 'get_price_earnings_ratio', 'get_price_sales_ratio', 'get_short_ratio', 'get_stock_exchange', 'get_volume', 'log', 'market_cap', 'mean', 'modified_duration', 'n_annuity', 'npv_f', 'payback_', 'payback_period', 'pi', 'pvAnnuity', 'pvAnnuityDue', 'pvAnnuity_k_period_from_today', 'pvGrowingAnnuity', 'pvGrowingPerpetuity', 'pvPerpetuity', 'pvPerpetuityDue', 'pv_excel', 'pv_f', 'r_continuous', 're', 'sign', 'sqrt', 'urllib']\n```", "```py\n>>>import fincal \n>>> fincal.pv_f(0.1,1100)\n90.9090909090909\n>>> import scipy as sp\n>>> sp.pv(0.1,1,0,100)\n    -90.909090909090907\n```", "```py\n>>>import fincal\n>>> help(fincal.pv_f)\nHelp on function pv_f in module __main__:\n\npv_f(r, n, fv)\n    Objective: estimate present value\n           r : period rate\n           n : number of periods\n          fv : future value\n```", "```py\nExample 1: >>>pv_f(0.1,1,100)        # meanings of input variables \n                 90.9090909090909        # based on their input order\n\n    Example #2 >>>pv_f(r=0.1,fv=100,n=1) # meanings based on keywords\n                 90.9090909090909\n>>>\n```", "```py\n>>> r=0.019/12\n>>> pv=4000\n>>> n=3*12\n>>> pv*r/(1-1/(1+r)**n)\n114.39577546409993\n```", "```py\n>>import scipy as sp\n>>> sp.pmt(0.019/12,3*12,4000)\n-114.39577546409993\n```", "```py\n>>>import scipy as sp\n>>>r=sp.rate(3*12,2000,-50000,0)   # monthly effective rate\n>>>r\n  0.021211141641636025\n>>> r*12\n  0.2545336996996323               # annual percentage rate\n```", "```py\n>>>import scipy as sp\n>>> sp.nper(0.012,200,-5000,0)\n29.900894915842475\n```", "```py\n>>> r=0.112\n>>> -100+50/(1+r)+60/(1+r)**2+70/(1+r)**3+100/(1+r)**4+20/(1+r)**5\n121.55722687966407\nUsing the scipy.npv() function, the estimation process could be simplified dramatically:\n>>> import scipy as sp\n>>> cashflows=[-100,50,60,70,100,20]\n>>> sp.npv(0.112,cashflows)\n121.55722687966407\n```", "```py\n>>>import scipy as sp\n>>>cashflows=[-100,50,60,70]\n>>>rate=0.1\n>>>npv=sp.npv(rate,cashflows)\n>>>round(npv,2)\n47.62\n```", "```py\n>>>c=[100]\n>>>x=np.npv(0.1,c)\n>>>round(x,2)\n>>>100.0\n```", "```py\n>>>import scipy as sp\n>>> cashflows=[-100,30,40,40,50]\n>>> sp.irr(cashflows)\n       0.2001879105140867\n```", "```py\n>>> r=sp.irr(cashflows)\n>>> sp.npv(r,cashflows)\n    1.7763568394002505e-14\n>>>\n```", "```py\n>>>import scipy as sp\n>>> cashflows=[-100,-50,50,70,100,90,20] \n>>> sp.irr(cashflows)\n0.25949919326073245\n```", "```py\n>>>import scipy as sp\n>>> cashflows=[504, -432,-432, -432,843]\n>>> sp.irr(cashflows)\n    0.14277225152187745\n```", "```py\n>>>import fincal\n>>> cashflows=[504, -432,-432, -432,843]\n>>> fincal.IRRs_f(cashflows)\n [0.143, 0.192]\n```", "```py\n>>import fincal\n>>>cashflows=[-100,30,30,30,30,30]\n>>> fincal.payback_period(cashflows)\n    3.3333333333333335\n```", "```py\ndef dd(x):\n    return 2*x\n```", "```py\n>>>dd(5)\n 10\n>>>dd(3.42)\n 6.84\n```", "```py\ndef pvFunction(fv,r,n):\n    return fv/(1+r)**n\ndef pvPerpetuity(c,r):\n    return c/r\ndef pvPerpetuityDue(c,r):\n    return c/r*(1+r)\n```", "```py\n>>> dir()\n['__builtins__', '__doc__', '__loader__', '__name__', '__package__', '__spec__', 'pvFunction', 'pvPerpetuity','pvPerpetuityDue']\n>>>\n```", "```py\n>>> pvFunction(100,0.1,1)\n90.9090909090909\n>>> pvFunction(n=1,r=0.1,fv=100)\n90.9090909090909\n>>> pvFunction(n=1,fv=100,r=0.1)\n90.9090909090909\n>>>\n```", "```py\n>>> -(7000/(1+0.05)**10 + 5000/0.05*(1-1/(1+0.05)**10)*(1+0.05))\n-44836.501153005614 \n```", "```py\n>>> import scipy as sp\n>>> sp.pv(0.05,10,5000,7000,1)\n-44836.5011530056\n```", "```py\n>>> 100*(1+0.04)**3+20/0.04*((1+0.04)**3-1)\n     174.91840000000005\n>>> import scipy as sp\n>>> sp.fv(0.04,3,20,100)\n     -174.91840000000005\n```", "```py\n>>> fv_annuity=20/0.04*((1+0.04)**3-1)\n>>> fv_annuity\n62.432000000000045\n>>>fv_one_PV=100*(1+0.04)**3\n>>> fv_one_PV\n112.4864\n```", "```py\n>>>20/0.04*(1-1/(1+0.04)**3)\n55.501820664542564\n```", "```py\n>>>import scipy as sp\n>>> sp.pv(0.04,3,20)\n   -55.501820664542592\n>>>import fincal\n>>> fincal.pvAnnuity(0.04,3,20)\n    55.501820664542564\n```", "```py\n>>>174.92/(1+0.04)**3\n155.5032430587164\n```", "```py\n>>> import numpy as np\n>>> import scipy as sp\n```", "```py\npython -m pip install SomePackage\n\n```", "```py\npython -m pip install SomePackage==1.0.4    # specific version\npython -m pip install \"SomePackage>=1.0.4\"  # minimum version\n\n```", "```py\npython -m pip install --upgrade SomePackage\n\n```", "```py\nfrom matplotlib.pyplot import *\nfig1 = figure(facecolor='white')\nax1 = axes(frameon=False)\nax1.set_frame_on(False)\nax1.get_xaxis().tick_bottom()\nax1.axes.get_yaxis().set_visible(False)\nx=range(0,11,2)\t\nx1=range(len(x),0,-1)\ny = [0]*len(x);\nname=\"Today's value of $100 received today\"\nannotate(name,xy=(0,0),xytext=(2,0.001),arrowprops=dict(facecolor='black',shrink=0.02))\ns = [50*2.5**n for n in x1];\ntitle(\"Time value of money \")\nxlabel(\"Time (number of years)\")\nscatter(x,y,s=s);\nshow()\n```", "```py\n>>>import fincal \n>>> fincal.pv_f(0.1,1,100)\n90.9090909090909\n```", "```py\n>>> import fincal\n>>> dir(fincal)\n['CND', 'EBITDA_value', 'IRR_f', 'IRRs_f', 'NPER', 'PMT', 'Rc_f', 'Rm_f', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__request', '__spec__', 'bondPrice', 'bsCall', 'convert_B_M', 'duration', 'exp', 'fincalHelp', 'fvAnnuity', 'fvAnnuityDue', 'fv_f', 'get_200day_moving_avg', 'get_50day_moving_avg', 'get_52week_high', 'get_52week_low', 'get_EBITDA', 'get_all', 'get_avg_daily_volume', 'get_book_value', 'get_change', 'get_dividend_per_share', 'get_dividend_yield', 'get_earnings_per_share', 'get_historical_prices', 'get_market_cap', 'get_price', 'get_price_book_ratio', 'get_price_earnings_growth_ratio', 'get_price_earnings_ratio', 'get_price_sales_ratio', 'get_short_ratio', 'get_stock_exchange', 'get_volume', 'log', 'market_cap', 'mean', 'modified_duration', 'n_annuity', 'npv_f', 'payback_', 'payback_period', 'pi', 'pvAnnuity', 'pvAnnuityDue', 'pvAnnuity_k_period_from_today', 'pvGrowingAnnuity', 'pvGrowingPerpetuity', 'pvPerpetuity', 'pvPerpetuityDue', 'pv_excel', 'pv_f', 'r_continuous', 're', 'sign', 'sqrt', 'urllib']\n```", "```py\n>>> help(fincal.pv_f)\nHelp on function pv_f in module fincal:\npv_f(r, n, fv)\n    Objective: estimate present value\n           r : period rate\n           n : number of periods\n          fv : future value\n```", "```py\nExample 1: >>>pv_f(0.1,1,100)        # meanings of input variables \n                 90.9090909090909        # based on their input order\n\n    Example #2 >>>pv_f(r=0.1,fv=100,n=1) # meanings based on keywords\n                 90.9090909090909\n>> >\n```", "```py\nimport scipy as sp\nfrom matplotlib.pyplot import *\ncashflows=[-120,50,60,70]\nrate=[]\nnpv =[]\nfor i in range(1,70):\n    rate.append(0.01*i)\n    npv.append(sp.npv(0.01*i,cashflows))\n\nplot(rate,npv)\nshow()\n```", "```py\nimport scipy as sp\nfrom matplotlib.pyplot import *\ncashflows=[-120,50,60,70]\nrate=[]\nnpv=[]\nx=(0,0.7)\ny=(0,0)\nfor i in range(1,70):\n    rate.append(0.01*i)\n    npv.append(sp.npv(0.01*i,cashflows))\n\ntitle(\"NPV profile\")\nxlabel(\"Discount Rate\")\nylabel(\"NPV (Net Present Value)\")\nplot(rate,npv)\nplot(x,y)\nshow()\n```", "```py\nimport scipy as sp\nimport matplotlib.pyplot as plt\ncashflows=[504,-432,-432,-432,832]\nrate=[]\nnpv=[]\nx=[0,0.3]\ny=[0,0]\nfor i in range(1,30): \n    rate.append(0.01*i)\n    npv.append(sp.npv(0.01*i,cashflows))\n\nplt.plot(x,y),plt.plot(rate,npv)\nplt.show()\n```", "```py\ndef pvFunction(fv,r,n):\n    return fv/(1+r)**n\ndef pvPerpetuity(c,r):\n    return c/r\ndef pvPerpetuityDue(c,r):\n    return c/r*(1+r)\ndef pvAnnuity(c,r,n):\n    return c/r*(1-1/(1+r)**n)\ndef pvAnnuityDue(c,r,n):\n    return c/r*(1-1/(1+r)**n)*(1+r)\ndef pvGrowingAnnuity(c,r,n,g):\n    return c/(r-g)*(1-(1+g)**n/(1+r)**n)\ndef fvFunction(pv,r,n):\n    return pv*(1+r)**n\ndef fvAnnuity(cv,r,n):\n    return c/r*((1+r)**n-1)\ndef fvAnnuityDue(cv,r,n):\n    return c/r*((1+r)**n-1)*(1+r)\ndef fvGrowingAnnuity(cv,r,n):\n    return c/(r-g)*((1+r)**n-(1+g)*n)\n```", "```py\n>>> import py_compile\n>>> py_compile.compile('myCalculator.py')\n'__pycache__\\\\myCalculator.cpython-35.pyc'\n>>> __pycache__\npy_compile.compile('c:/temp/myCalculator.py')\n```", "```py\n    >>>import scipy as sp\n    >>> sp.nper(0.012,200,5000,0)\n    -21.99461003591637\n    ```"]