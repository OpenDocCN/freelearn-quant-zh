- en: Partial autocorrelation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Partial autocorrelation of a time series is the correlation with its own lagged
    values, controlling for the values of the time series at all shorter lags. It
    is also used in time series modeling for identifying the orders of the components
    of forecasting techniques. It is computed by using the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'It also contains other options such as how many lags you want to use and plot.
    The preceding code gives the following plot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Partial autocorrelation](img/00019.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.11: Plot showing partial autocorrelation of series with its lag'
  prefs: []
  type: TYPE_NORMAL
- en: Cross-correlation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Cross-correlation is a measure of the similarity of two series as a function
    of the displacement of one relative to the other. Just like `acf` and `pacf`,
    it also plays a crucial role in time series forecasting. It can be computed by
    using the following function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'When the preceding code gets executed, it generates the following plot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Cross-correlation](img/00020.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.12: Plot showing cross-correlation of two series'
  prefs: []
  type: TYPE_NORMAL
- en: Hypothesis testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Hypothesis testing is used to reject or retain a hypothesis based upon the measurement
    of an observed sample. We will not be going into theoretical aspects but will
    be discussing how to implement the various scenarios of hypothesis testing in
    R.
  prefs: []
  type: TYPE_NORMAL
- en: Lower tail test of population mean with known variance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The null hypothesis is given by ![Lower tail test of population mean with known
    variance](img/00021.jpeg) where ![Lower tail test of population mean with known
    variance](img/00022.jpeg) is the hypothesized lower bound of the population mean.
  prefs: []
  type: TYPE_NORMAL
- en: Let us assume a scenario where an investor assumes that the mean of daily returns
    of a stock since inception is greater than $10\. The average of 30 days' daily
    return sample is $9.9\. Assume the population standard deviation is 0.011\. Can
    we reject the null hypothesis at `.05` significance level?
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us calculate the test statistics `z` which can be computed by the following
    code in R:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Here:'
  prefs: []
  type: TYPE_NORMAL
- en: '`xbar`: Sample mean'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mu`: Hypothesized value'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sig`: Standard deviation of population'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`n`: Sample size'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`z`: Test statistics'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This gives the value of `z` the test statistics:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let us find out the critical value at `0.05` significance level. It can
    be computed by the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'This gives the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Since the value of the test statistics is greater than the critical value, we
    fail to reject the null hypothesis claim that the return is greater than $10.
  prefs: []
  type: TYPE_NORMAL
- en: 'In place of using the critical value test, we can use the `pnorm` function
    to compute the lower tail of Pvalue test statistics. This can be computed by the
    following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'This gives the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Since the Pvalue is greater than `0.05`, we fail to reject the null hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: Upper tail test of population mean with known variance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The null hypothesis is given by ![Upper tail test of population mean with known
    variance](img/00023.jpeg) where ![Upper tail test of population mean with known
    variance](img/00022.jpeg) is the hypothesized upper bound of the population mean.
  prefs: []
  type: TYPE_NORMAL
- en: Let us assume a scenario where an investor assumes that the mean of daily returns
    of a stock since inception is at most $5\. The average of 30 days' daily return
    sample is $5.1\. Assume the population standard deviation is 0.25\. Can we reject
    the null hypothesis at `.05` significance level?
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us calculate the test statistics `z`, which can be computed by the
    following code in R:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Here:'
  prefs: []
  type: TYPE_NORMAL
- en: '`xbar`: Sample mean'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mu0`: Hypothesized value'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sig`: Standard deviation of population'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`n`: Sample size'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`z`: Test statistics'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'It gives `2.19089` as the value of test statistics. Now let us calculate the
    critical value at `.05` significance level, which is given by the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: This gives `1.644854`, which is less than the value computed for the test statistics.
    Hence we reject the null hypothesis claim.
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, the Pvalue of the test statistics is given as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: This gives `0.01422987`, which is less than `0.05` and hence we reject the null
    hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: Two-tailed test of population mean with known variance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The null hypothesis is given by ![Two-tailed test of population mean with known
    variance](img/00024.jpeg) where ![Two-tailed test of population mean with known
    variance](img/00022.jpeg) is the hypothesized value of the population mean.
  prefs: []
  type: TYPE_NORMAL
- en: Let us assume a scenario where the mean of daily returns of a stock last year
    is $2\. The average of 30 days' daily return sample is $1.5 this year. Assume
    the population standard deviation is .2\. Can we reject the null hypothesis that
    there is not much significant difference in returns this year from last year at
    `.05` significance level?
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us calculate the test statistics `z`, which can be computed by the
    following code in R:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: This gives the value of test statistics as `-27.38613`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us try to find the critical value for comparing the test statistics
    at `.05` significance level. This is given by the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: This gives the value `-1.959964`, `1.959964`. Since the value of test statistics
    is not between the range (`-1.959964`, `1.959964`), we reject the claim of the
    null hypothesis that there is not much significant difference in returns this
    year from last year at `.05` significance level.
  prefs: []
  type: TYPE_NORMAL
- en: 'The two-tailed Pvalue statistics is given as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: This gives a value less than `.05` so we reject the null hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: In all the preceding scenarios, the variance is known for population and we
    use the normal distribution for hypothesis testing. However, in the next scenarios,
    we will not be given the variance of the population so we will be using `t` distribution
    for testing the hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: Lower tail test of population mean with unknown variance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The null hypothesis is given by ![Lower tail test of population mean with unknown
    variance](img/00021.jpeg) where ![Lower tail test of population mean with unknown
    variance](img/00022.jpeg) is the hypothesized lower bound of the population mean.
  prefs: []
  type: TYPE_NORMAL
- en: Let us assume a scenario where an investor assumes that the mean of daily returns
    of a stock since inception is greater than $1\. The average of 30 days' daily
    return sample is $.9\. Assume the population standard deviation is 0.01\. Can
    we reject the null hypothesis at `.05` significance level?
  prefs: []
  type: TYPE_NORMAL
- en: 'In this scenario, we can compute the test statistics by executing the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Here:'
  prefs: []
  type: TYPE_NORMAL
- en: '`xbar`: Sample mean'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mu0`: Hypothesized value'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sig`: Standard deviation of sample'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`n`: Sample size'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`t`: Test statistics'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This gives the value of the test statistics as `-5.477226`. Now let us compute
    the critical value at `.05` significance level. This is given by the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: We get the value as `-1.699127`. Since the value of the test statistics is less
    than the critical value, we reject the null hypothesis claim.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now instead of the value of the test statistics, we can use the Pvalue associated
    with the test statistics, which is given as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: This results in a value less than .05 so we can reject the null hypothesis claim.
  prefs: []
  type: TYPE_NORMAL
- en: Upper tail test of population mean with unknown variance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The null hypothesis is given by ![Upper tail test of population mean with unknown
    variance](img/00023.jpeg)where ![Upper tail test of population mean with unknown
    variance](img/00022.jpeg) is the hypothesized upper bound of the population mean.
  prefs: []
  type: TYPE_NORMAL
- en: Let us assume a scenario where an investor assumes that the mean of daily returns
    of a stock since inception is at most $3\. The average of 30 days' daily return
    sample is $3.1\. Assume the population standard deviation is `.2`. Can we reject
    the null hypothesis at `.05` significance level?
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us calculate the test statistics `t` which can be computed by the following
    code in R:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Here:'
  prefs: []
  type: TYPE_NORMAL
- en: '`xbar`: Sample mean'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mu0`: Hypothesized value'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sig`: Standard deviation of sample'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`n`: Sample size'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`t`: Test statistics'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This gives the value `2.738613` of the test statistics. Now let us find the
    critical value associated with the `.05` significance level for the test statistics.
    It is given by the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Since the critical value `1.699127` is less than the value of the test statistics,
    we reject the null hypothesis claim.
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, the value associated with the test statistics is given as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: This is less than `.05`. Hence the null hypothesis claim gets rejected.
  prefs: []
  type: TYPE_NORMAL
- en: Two tailed test of population mean with unknown variance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The null hypothesis is given by ![Two tailed test of population mean with unknown
    variance](img/00024.jpeg), where ![Two tailed test of population mean with unknown
    variance](img/00022.jpeg) is the hypothesized value of the population mean.
  prefs: []
  type: TYPE_NORMAL
- en: Let us assume a scenario where the mean of daily returns of a stock last year
    is $2\. The average of 30 days' daily return sample is $1.9 this year. Assume
    the population standard deviation is `.1`. Can we reject the null hypothesis that
    there is not much significant difference in returns this year from last year at
    `.05` significance level?
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us calculate the test statistics `t`, which can be computed by the
    following code in R:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'This gives `-5.477226` as the value of the test statistics. Now let us try
    to find the critical value range for comparing, which is given by the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: This gives the range value (`-2.04523`, `2.04523`). Since this is the value
    of the test statistics, we reject the claim of the null hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: Parameter estimates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we are going to discuss some of the algorithms used for parameter
    estimation.
  prefs: []
  type: TYPE_NORMAL
- en: Maximum likelihood estimation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Maximum likelihood estimation** (**MLE**) is a method for estimating model
    parameters on a given dataset.'
  prefs: []
  type: TYPE_NORMAL
- en: Now let us try to find the parameter estimates of a probability density function
    of normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us first generate a series of random variables, which can be done by executing
    the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: This gives `5.002913`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: This gives `1.02071`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us make a function for `log` likelihood:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let us apply the function `mle` to estimate the parameters for estimating
    mean and standard deviation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '`mu` and `sigma` have been given initial values.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This gives the output as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Maximum likelihood estimation](img/00025.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.13: Output for MLE estimation'
  prefs: []
  type: TYPE_NORMAL
- en: NaNs are produced when negative values are attempted for the standard deviation.
  prefs: []
  type: TYPE_NORMAL
- en: 'This can be controlled by giving relevant options, as shown here. This ignores
    the warning messages produced in the output displayed in *Figure 2.13*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'This, upon execution, gives the best possible fit, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Maximum likelihood estimation](img/00026.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.14: Revised output for MLE estimation'
  prefs: []
  type: TYPE_NORMAL
- en: Linear model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the linear regression model, we try to predict dependent/response variables
    in terms of independent/predictor variables. In the linear model, we try to fit
    the best possible line, known as the regression line, though the given points.
    The coefficients for the regression lines are estimated using statistical software.
    An intercept in the regression line represents the mean value of the dependent
    variable when the predictor variable takes the value as zero. Also the response
    variable increases by the factor of estimated coefficients for each unit change
    in the predictor variable. Now let us try to estimate parameters for the linear
    regression model where the dependent variable is `Adj.Close` and independent variable
    is `Volume` of `Sampledata`. Then we can fit the linear model as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Upon executing the preceding code, the output is generated as given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Linear model](img/00027.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.15: Output for linear model estimation'
  prefs: []
  type: TYPE_NORMAL
- en: The `summary` display shows the parameter estimates of the linear regression
    model. Similarly, we can estimate parameters for other regression models such
    as multiple or other forms of regression models.
  prefs: []
  type: TYPE_NORMAL
- en: Outlier detection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Outliers are very important to be taken into consideration for any analysis
    as they can make analysis biased. There are various ways to detect outliers in
    R and the most common one will be discussed in this section.
  prefs: []
  type: TYPE_NORMAL
- en: Boxplot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let us construct a `boxplot` for the variable volume of the `Sampledata`, which
    can be done by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'The graph is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Boxplot](img/00028.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.16: Boxplot for outlier detection'
  prefs: []
  type: TYPE_NORMAL
- en: An outlier is an observation which is distant from the rest of the data. When
    reviewing the preceding boxplot, we can clearly see the outliers which are located
    outside the fences (whiskers) of the boxplot.
  prefs: []
  type: TYPE_NORMAL
- en: LOF algorithm
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The **local outlier factor** (**LOF**) is used for identifying density-based
    local outliers. In LOF, the local density of a point is compared with that of
    its neighbors. If the point is in a sparser region than its neighbors then it
    is treated as an outlier. Let us consider some of the variables from the `Sampledata`
    and execute the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Here, `k` is the number of neighbors used in the calculation of the local outlier
    factors.
  prefs: []
  type: TYPE_NORMAL
- en: 'The graph is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![LOF algorithm](img/00029.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.17: Plot showing outliers by LOF method'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want the top five outliers then execute the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'This gives an output with the row numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Standardization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In statistics, standardization plays a crucial role as we have various attributes
    for modeling and all of them have different scales. So for comparison purposes,
    we need to standardize the variables to bring them on the same scale. Centering
    the values and creating the `z` scores is done in R by the `scale()` function.
    It takes the following arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: '`x`: A numeric object'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`center`: If `TRUE`, the object''s column means are subtracted from the values
    in those columns (ignoring NAs); if `FALSE`, centering is not performed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`scale`: If `TRUE`, the centered column values are divided by the column''s
    standard deviation (when center is also `TRUE`; otherwise, the root mean square
    is used); if `FALSE`, scaling is not performed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If we want to center the data of `Volume` in our dataset, we just need to execute
    the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'If we want to standardize the data of volume in our dataset, we just need to
    execute the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: Normalization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Normalization is done using the `minmax` concept to bring the various attributes
    on the same scale. It is calculated by the formula given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '*normalized = (x-min(x))/(max(x)-min(x))*'
  prefs: []
  type: TYPE_NORMAL
- en: 'So if we want to normalize the volume variable, we can do it by executing the
    following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Construct examples of normal, Poisson, and uniform distribution in R.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you do random and stratified sampling in R?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the different measures of central tendency and how do you find them
    in R?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you compute kurtosis and skewness in R?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you do hypothesis testing in R with known/unknown variance of population
    in R?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you detect outliers in R?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you do parameter estimates for a linear model and MLE in R?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is standardization and normalization in R and how do you perform it in
    R?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have discussed the most commonly used distributions in the
    finance domain and associated metrics computations in R; sampling (random and
    stratified); measures of central tendencies; correlations and types of correlation
    used for model selections in time series; hypothesis testing (one-tailed/two-tailed)
    with known and unknown variance; detection of outliers; parameter estimation;
    and standardization/normalization of attributes in R to bring attributes on comparable
    scales.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, analysis done in R associated with simple linear regression,
    multivariate linear regression, ANOVA, feature selection, ranking of variables,
    wavelet analysis, fast Fourier transformation, and Hilbert transformation will
    be covered.
  prefs: []
  type: TYPE_NORMAL
