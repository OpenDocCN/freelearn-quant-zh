- en: Chapter 7.  Risk Management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we are going to discuss the various types of risk associated
    with the banking and financial domains. Banks and financial institutions are all
    exposed to risk, and they need to develop risk identification and risk mitigation
    mechanisms with the implementation of regulatory norms to stay competitive and
    profitable. In this chapter, we are going to discuss various techniques to measure
    different types of risk using R. It also includes risk pertaining to banking operations
    such as credit risk, fraud detection, and Basel regulations.
  prefs: []
  type: TYPE_NORMAL
- en: 'The chapter covers the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Market risk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Portfolio risk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VaR
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monte Carlo simulations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hedging
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basel regulation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Credit risk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fraud detection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Market risk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The risk for an investor to encounter losses due to changes in overall performance
    of the market in which he has invested, is known as market risk. Market risk is
    a kind of systematic risk which cannot be tackled with diversification. It may
    be hedged. The risks happening due to recessions, political instability, interest
    rate changes, natural disasters, and terrorist attacks are examples of market
    risks. Market risks are measured differently for banks, individual stocks, portfolios,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Let us consider how market risks are measured for individual securities. The
    market risk of a stock which is a part of a portfolio is measured as the contribution
    of a security in the overall risk of the portfolio. The individual stock risk
    is measured by the beta coefficient, which is the volatility of stock with respect
    to the market.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us run regression analysis on stock IBM as dependent variable and GPSC
    index as the independent variable and try to estimate the beta. It can be done
    by executing the following code, which uses monthly data of GPSC and IBM both
    between 2010 to 2016:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'It gives an estimate of beta, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Another technique used by investors and analysts is value at risk. It is a very
    common method of measuring risk in financial markets. The value at risk method
    is a well-known and established risk management method, but it comes with some
    assumptions that limit its correctness. For instance, one of the assumptions is
    that the content of the portfolio being measured is unchanged over a provided
    period. So, this may generate good results for short-term horizons but will not
    be such an accurate measurement for long-term horizons of investments, because
    it is more exposed to changes in interest rates and monetary policies. We will
    be discussing calculating VaR and CVAR/ES in R later on.
  prefs: []
  type: TYPE_NORMAL
- en: Portfolio risk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the use of R language, we can manage portfolios better by mitigating the
    risk and portfolio optimization. To avoid the risk associated with portfolio analysis,
    diversification of the portfolio is required, with the selection of optimum weights
    for the portfolio's constituents.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us try to find the optimal weight of the portfolio whose stocks are IBM
    and FB, and using the CAPM. First, let us get the relevant data by executing the
    following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: It is monthly-level data between 2015 and 2016.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let us try to find the returns for the preceding data for close prices
    by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: It generates the returns for all the series.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let us try to find the excess return for all the series. The excess return
    is given by monthly return minus monthly T-Bills interest rate (let it be `.0015`).
    This can be done by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, find the mean and SD for the excess returns of all the series. It is
    given by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Portfolio risk](img/00094.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.1: Mean and standard deviation of all the stocks considered'
  prefs: []
  type: TYPE_NORMAL
- en: Now, let us find out the beta of all the excess returns of stocks by regressing
    them individually against the excess return of the S&P index.
  prefs: []
  type: TYPE_NORMAL
- en: 'This can be done by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'It gives the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Portfolio risk](img/00095.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.2: Output summary of regression'
  prefs: []
  type: TYPE_NORMAL
- en: This shows that the beta for IBM is `1.1035670`.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, we can find the beta for FB and V.
  prefs: []
  type: TYPE_NORMAL
- en: 'So using the CAPM, the excess expected return for IBM is given as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'According to the single-factor model, the variance of IBM is given by this
    formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Portfolio risk](img/00096.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.3: Variance given by single-factor model'
  prefs: []
  type: TYPE_NORMAL
- en: Here, *e* is the residual error coming from regression.
  prefs: []
  type: TYPE_NORMAL
- en: 'So by running regression for all the independent variables and calculating
    excess returns and variance, we have the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | **IBM** | **FB** | **V** |'
  prefs: []
  type: TYPE_TB
- en: '| **Variance** | 0.002906 | 0.002949 | 0.455695 |'
  prefs: []
  type: TYPE_TB
- en: '| **Beta** | 1.103567 | 0.423458 | 3.74228 |'
  prefs: []
  type: TYPE_TB
- en: '| **Expected excess return** | -0.00657 | -0.00252 | -0.02229 |'
  prefs: []
  type: TYPE_TB
- en: 'The covariance matrix can be calculated using the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Portfolio risk](img/00097.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.4: Covariance formula'
  prefs: []
  type: TYPE_NORMAL
- en: 'It generates the following matrix:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | `IBM` | `FB` | `V` |'
  prefs: []
  type: TYPE_TB
- en: '| `IBM` | `0.001378` | `0.000529` | `0.004673` |'
  prefs: []
  type: TYPE_TB
- en: '| `FB` | `0.000529` | `0.000203` | `0.001793` |'
  prefs: []
  type: TYPE_TB
- en: '| `V` | `0.004673` | `0.001793` | `0.015848` |'
  prefs: []
  type: TYPE_TB
- en: 'Now, let us find the optimal weight for the portfolio by executing the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the optimal weight as given in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| `IBM` | `FB` | `V` |'
  prefs: []
  type: TYPE_TB
- en: '| `0` | `0.70387703` | `0.29612297` |'
  prefs: []
  type: TYPE_TB
- en: VaR
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Value at risk is a measure in risk management to measure the potential risk
    which can occur to the portfolio of an investor. VaR imputed at 5% confidence
    means that the loss will not be less than predicted value 95% of the time or,
    in other words, loss will be greater in 5% of times than predicted value.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are three common ways of computing value at risk:'
  prefs: []
  type: TYPE_NORMAL
- en: Parametric VaR
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Historical VaR
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monte Carlo VaR
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section, we will be capturing the first two, and the third one will
    be captured in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Parametric VaR
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Parametric VaR is also known as the variance-covariance method and is used to
    find VaR using mean and standard deviation as parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '`qnorm` is used for value at risk calculation using parametric methods. It
    uses the parameters mean and standard deviation. The general syntax is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Here, `p` is the desired percentile; `mean` is the given mean of the sample;
    and `sd` is the standard deviation of the sample.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us assume that the average return of a stock is 2% and standard deviation
    is 4%, then the value at risk for a one day horizon at 95% confidence level using
    the parametric approach is given by executing the following approach:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the following output upon execution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, we can find the VaR by the parametric method using the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the output as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Let us assume we have VaR for a one day horizon and, if we want to convert
    it at a different horizon, say a month, then it can be converted using the formula
    given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Parametric VaR](img/00098.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Here, *T* is the number of days in a month.
  prefs: []
  type: TYPE_NORMAL
- en: '**Expected shortfall** (**ES**) is also known as conditional value of risk
    and it is an alternative to VaR. ES is a weighted average between the value at
    risk and the losses greater than value at risk. By means of ES, we try to quantify
    VaR.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The ES/CVAR for the above example can be computed using the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Historical VaR
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The main assumption is that the past repeats itself. It does not assume any
    particular type of distribution. Historical VaR is estimated by simulating or
    constructing the **cumulative distribution function** (**CDF**) of asset returns
    over time. Generally, we find the returns on the regular time interval basis and
    sort them, and then find the relevant percentile.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us try to find individual, as well as portfolio, VaR on a dataset.
    The dataset is generated by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'It prepares the dataset required for historical VaR and displays a sample of
    the data as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Historical VaR](img/00099.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.5: Return calculation output'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let us try to estimate individual `historical` VaR of stocks by running
    the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Historical VaR](img/00100.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.6: Historical individual output'
  prefs: []
  type: TYPE_NORMAL
- en: 'Similarly, let us try to estimate CVAR/ES, which can be computed using the
    following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Upon executing, it generates the output as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Historical VaR](img/00101.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.7: Historical CVAR individual output'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can find a lot of options in the `VaR()` function. The most important ones
    are given here:'
  prefs: []
  type: TYPE_NORMAL
- en: '`R`: Matrix, xts vector, or DataFrame'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`p`: Confidence level'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`method`: It uses four methods - modified, Gaussian, historical, and kernel'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`portfolio_method`: It has options - single, component, and marginal - defining
    whether to do univariate, component, or marginal calculation'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now let us try to find the `component` VaR of the portfolio. If the weights
    are not specified then it takes equal weights. It can be obtained by running the
    following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Historical VaR](img/00102.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.8: Historical VaR output by component method'
  prefs: []
  type: TYPE_NORMAL
- en: 'Similarly, we can find the `marginal` VaR by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the following result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Historical VaR](img/00103.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.9: Historical VaR output by marginal output'
  prefs: []
  type: TYPE_NORMAL
- en: Monte Carlo simulation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Monte Carlo simulation plays a very important role in risk management. Even
    if we have access to all the relevant information pertaining to risk associated
    with a firm, it is still not possible to predict the associated risk and quantify
    it. By the means of Monte Carlo simulation, we can generate all the possible scenarios
    of risk and using it, we can evaluate the impact of risk and build a better risk
    mitigation strategy.
  prefs: []
  type: TYPE_NORMAL
- en: Monte Carlo simulation is a computational mathematical approach which gives
    the user the option of creating a range of possible outcome scenarios, including
    extreme ones, with the probability associated with each outcome. The possible
    outcomes are also drawn on the expected line of distribution, which may be closer
    to real outcomes. The range of possible outcomes can be used in risk analysis
    for building the models and drawing the inferences. Analysis is repeated again
    and again using a different set of random values from the probability function
    to test the model in order to build a robust model. Probability distributions
    are a much more realistic way of describing uncertainty in variables of a risk
    analysis. Monte Carlo simulation uses the concept of Brownian motion dynamics.
    Now we will demonstrate how to build a sample with a given distribution using
    Monte Carlo simulation, and will try to estimate VaR.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us assume we are trying to generate a sample of returns for `2000` months
    for a stock using normal distribution of `mean.20`, `sigma.25` and `deltat` =
    `.08333` for month. This can be done using the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the following displayed histogram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Monte Carlo simulation](img/00104.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.10: Histogram of returns generated by MCM'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us try to find the mean and standard deviation of newly constructed
    sample, which is given by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: It generates the mean as `0.1821` and standard deviation as `0.2439`, which
    is close to the mean and standard deviation taken for constructing the sample.
    Thus, clearly, the new sample is a normal distribution.
  prefs: []
  type: TYPE_NORMAL
- en: 'The value at risk of the above series can be computed using the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Hedging
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Hedging is basically taking a position in the market to reduce the risk. It
    is a strategy built to reduce the risk in investment using call/put options/futures
    short selling. The idea of hedging is to reduce the volatility of a portfolio
    by reducing the potential risk to loss. Hedging especially protects small businesses
    against catastrophic or extreme risk by protecting the cost at the time of distress.
    The tax laws also benefit those who do hedging. For firms who do hedging, it works
    like insurance and they have more independence to make their financial decisions
    without thinking about the risks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let us consider some scenarios of hedging:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Currency risk**: Also known as exchange-rate risk, it happens due to fluctuations
    in the prices of one currency with respect to another. Investors or companies
    who operate across the world are exposed to currency risk, which may lead to profit
    and losses. This risk can be reduced by hedging, which can prevent losses happening
    due to price fluctuation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Short hedge**: Let us suppose a farmer is planning to plant 200,000 bushels
    of corn and will be ready for harvesting in the next 2 months and for delivery
    in the consecutive month. The farmer knows from his experience that the cost of
    planting and harvesting is $5.30 per bushel. Delivery month corn futures are traded
    at $5.70 per bushel. The farmer wants to lock his selling price so he enters a
    short hedge by selling some delivery month futures. Each corn future contract
    consists of 5,000 bushels. He will need to sell 40 future contracts. For his crop
    protection in the delivery month, he realizes that the price of corn has gone
    down and is priced at $5.20 per bushel and the price of a delivery month future
    contract has also reduced to **$5.40 per bushel**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Selling the corn in the cash market generates him a sum of **$5.20*200,000 =
    $1,040,000.**
  prefs: []
  type: TYPE_NORMAL
- en: Total cost incurred is $1,060,000 so he may suffer a loss of **$20,000**.
  prefs: []
  type: TYPE_NORMAL
- en: But, since he has hedged some value of corn futures sold in planting month =
    **$5.70*200,000=$1,140,000.**
  prefs: []
  type: TYPE_NORMAL
- en: Value of corn futures bought in delivery month = **$5.40*200,000=1,080,000.**
  prefs: []
  type: TYPE_NORMAL
- en: So gain in future market is **1,140,000-1,080,000=$60,000.**
  prefs: []
  type: TYPE_NORMAL
- en: So overall profit is **$60,000-$20,000=$40,000.**
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, according to requirement, the investor can do long hedging.
  prefs: []
  type: TYPE_NORMAL
- en: The most common instruments used for hedging are forward contracts, future contracts,
    and option contracts.
  prefs: []
  type: TYPE_NORMAL
- en: Basel regulation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The main goal for the Basel Committee on Banking Supervision is to improve understanding
    of key supervisory issues to set a healthy banking supervision worldwide. Its
    main objective is to develop regulatory frameworks in order to improve banking
    systems. Currently, Basel III has been developed to meet the deficiencies in financial
    regulations exposed during the financial crisis of 2007-2008\. Basel III is a
    global voluntary regulatory framework on bank capital adequacy, stress testing,
    and market liquidity risk. It is assumed to strengthen bank capital requirements
    by decreasing bank leverage and increasing bank liquidity. The objective of implementing
    Basel III is to make the banking sector more robust so that it can absorb shocks
    arising from financial and economic stress, improve risk management and governance,
    and strengthen banks' transparency and disclosures.
  prefs: []
  type: TYPE_NORMAL
- en: The R community has developed a library, SACCR, keeping in mind the regulations
    of Basel III. This library has many methods which are based upon the standardized
    norms of Basel III. It has implemented all the examples appearing in the regulatory
    framework. For example, it computes exposure at default according to Basel norms.
  prefs: []
  type: TYPE_NORMAL
- en: It uses the function `CalcEAD(RC,PFE)` to calculate the exposure of default.
  prefs: []
  type: TYPE_NORMAL
- en: Here, `RC` is replacement cost and `PFE` is projected future exposure.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, if the `RC` component is `50` and `PFE` is `400` then executing the following
    code finds exposure at default:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: It generates the output `630`.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, there are other functions in this library on the basis of implementation
    of Basel III.
  prefs: []
  type: TYPE_NORMAL
- en: Credit risk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Credit risk is the risk associated with an investment where the borrower is
    not able to repay the amount to the lender. This can happen on account of poor
    financial conditions of the borrower, and it represents a risk for the lender.
    The risk is for the lender to incur loss due to non-payment and hence disruption
    of cash flows and increased collection costs. The loss may be complete or partial.
    There are multiple scenarios in which a lender can suffer loss. Some of the scenarios
    are given here:'
  prefs: []
  type: TYPE_NORMAL
- en: A customer not making a payment on a mortgage loan, credit card, line of credit,
    or other type of loan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business/consumer not paying due trade invoice
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A business not paying an employee's due earned wages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A business/government bond issuer not making payment on a due coupon or principal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An insurance company not obliging its policy obligation due
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A bank not returning funds of depositors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'It is a practice of mitigating losses by understanding the adequacy of a bank''s
    capital and loan loss reserves at any given time. In order to reduce the credit
    risk, the lender needs to develop a mechanism to perform a credit check on the
    prospective borrower. Generally, banks quantify the credit risk using two metrics
    - expected loss and economic capital. Expected loss is the value of a possible
    loss times the probability of that loss occurring. Economic capital is the amount
    of capital necessary to cover unexpected losses. There are three risk parameters
    that are essential in the process of calculating the EL and EC measurements: the
    **probability of default** (**PD**), **loss given default** (**LGD**), and **exposure
    at default** (**EAD**). Calculation of PD is more important, so we will be discussing
    it.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For building the PD model, let us use the subset of German Credit Data available
    in R. Data used for the analysis is given by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Before starting the modeling, we need to understand the data, which can be
    done by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'It gives us the column types and kind of values it has, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Credit risk](img/00105.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.11: Column description of the dataset'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this example, our target variable is `Class`. `Class = Good` means non-defaulter
    and `Class = bad` means defaulter. Now, to understand the distribution of all
    the numeric variables, we can compute all the basic statistics related to the
    numeric attributes. This can be done by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'A sample of the output generated by the preceding code is displayed here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Credit risk](img/00106.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.12 Basic statistics of numeric variables
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us prepare our data for modeling by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: The preceding code generates `Train` and `Test` data for modeling.
  prefs: []
  type: TYPE_NORMAL
- en: The proportion of selecting the `Train` and `Test` data is quite subjective.
    Now we can do basic statistics for imputation of missing/outlier values and exploratory
    analysis (such as information value analysis and correlation matrix) of the independent
    variables with respect to dependent variables for understanding the relationship.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let us try to fit the model on the `Train` data, which can be done by executing
    the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the summary of the model as displayed here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Credit risk](img/00107.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.13: Output summary of logistic regression'
  prefs: []
  type: TYPE_NORMAL
- en: As we can see in the summary, by means of Pvalues, there are significant as
    well as insignificant attributes in the model. Keeping in mind the significance
    of attributes and multicollinearity, we can iterate the model to find the best
    model. In our case, let us rerun the model with only significant attributes.
  prefs: []
  type: TYPE_NORMAL
- en: 'This can be done by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the summary output as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Credit risk](img/00108.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.14: Output summary of logistic regression having only significant
    attributes'
  prefs: []
  type: TYPE_NORMAL
- en: The output summary shows that all the attributes considered in the model are
    significant.
  prefs: []
  type: TYPE_NORMAL
- en: There are a lot of statistics in logistic regression for checks of model accuracy
    and in this case, we will be showing the ROC curve and the confusion matrix for
    accuracy checks.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can compute the threshold for classification by KS statistics but here let
    us assume the threshold value is `0.5` and try to score our `Train` sample by
    executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the confusion matrix as displayed here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Credit risk](img/00109.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.15: Confusion matrix for logistic regression'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let us compute the `auc` by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'It gives the value of `auc` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let us plot the ROC curve by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'It plots the ROC curve as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Credit risk](img/00110.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.16: ROC curve'
  prefs: []
  type: TYPE_NORMAL
- en: We can use the same model fit created on `Train_data` and score `Test_data`
    and check whether the accuracy measures are in the same range or not to validate
    the model.
  prefs: []
  type: TYPE_NORMAL
- en: Fraud detection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Identifying fraudulent transactions is one of the most important components
    of risk management. R has many functions and packages that can be used to find
    fraudulent transactions, including binary classification techniques such as logistic
    regression, decision tree, random forest, and so on. We will be again using a
    subset of the German Credit data available in R library. In this section, we are
    going to use random forest for fraud detection. Just like logistic regression,
    we can do basic exploratory analysis to understand the attributes. Here we are
    not going to do the basic exploratory analysis but will be using the labeled data
    to train the model using random forest, and then will try to do the prediction
    of fraud on validation data.
  prefs: []
  type: TYPE_NORMAL
- en: 'So the dataset used for the analysis will be given by executing the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates a few lines of the sample data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fraud detection](img/00111.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.17: Sample data used for fraud analysis'
  prefs: []
  type: TYPE_NORMAL
- en: 'The class will be our target variable in the dataset and a class with level
    bad means fraud has been committed by the customer. Now let us divide the preceding data
    into `train` and `test` samples by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: It generates the `Train` and `Test` data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let us try to build the classification model on the train sample with
    the random forest technique. This can be done by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fraud detection](img/00112.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.18: Output summary of logistic random forest'
  prefs: []
  type: TYPE_NORMAL
- en: 'The error for the trees can also be plotted by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is the output generated:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fraud detection](img/00113.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.19: Error plot for trees of random forest'
  prefs: []
  type: TYPE_NORMAL
- en: 'The comparative importance of the attributes can be given by executing the
    following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fraud detection](img/00114.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.20: Variable comparison summary by random forest'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let us do classification on the test data by executing the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'It generates the following classification table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fraud detection](img/00115.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.21: Classification summary of random forest'
  prefs: []
  type: TYPE_NORMAL
- en: Liability management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Liability management is the process of keeping appropriate liquidity reserves
    and allocating assets by financial institutions to balance outstanding liabilities
    such as deposits, CDs, and so on to obtain best performance by simultaneously
    meeting liabilities and growing net assets. Banks have several risks - asset management
    risk, interest rate risk, and currency exchange risks - and by using liability
    management, banks and financial institutions try to minimize the risk.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we have discussed several topics, such as market risk, portfolio
    risk, credit risk, fraud detection, diversification of portfolios, optimization
    of portfolios, and rebalancing of the portfolio, which can help financial in situation
    with liability management.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is market risk and how can R help in measuring market risk? Please give
    an example.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the ways of measuring risk associated with the portfolio?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the most common ways of measuring VaR? Please construct a portfolio
    and find VaR using all the methods.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you compute ES/CVAR in R?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Construct a sample using normal and lognormal distribution using the Monte Carlo
    method and find the historical VaR for each of them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you find component and marginal VaR for a portfolio in R?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is credit scoring and how do you execute it in R? Construct an example
    and build a scoring example along with validation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the ways to identify fraud? How do you execute them in R?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have covered the types of risks associated with financial
    institutions, such as market risk, portfolio risk, VaR, Monte Carlo simulation,
    hedging, Basel regulations, credit risk, and fraud detection. Also, we have discussed
    how the strengths of R can be leveraged for measuring different types of risk.
    In this chapter, we have demonstrated examples of measuring risks such as market,
    portfolio, and credit using R, and also how to use techniques such as random forest
    classification for fraud detection.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will be covering various optimization techniques used
    in trading algorithms and parameter estimation. Optimization techniques such as
    dynamic rebalancing, walk forward testing, grid testing, and genetic algorithm
    will be covered.
  prefs: []
  type: TYPE_NORMAL
