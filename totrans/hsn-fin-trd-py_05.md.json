["```py\nimport numpy as np\n```", "```py\narr1D = np.array([1.1, 2.2, 3.3, 4.4, 5.5]); \narr1D\n```", "```py\narray([1.1, 2.2, 3.3, 4.4, 5.5])\n```", "```py\ntype(arr1D)\n```", "```py\nnumpy.ndarray\n```", "```py\narr2D = np.array([[1, 2], [3, 4]]); \narr2D\n```", "```py\narray([[1, 2],\n       [3, 4]])\n```", "```py\narr4D = np.array(range(16)).reshape((2, 2, 2, 2)); \narr4D\n```", "```py\narray([[[[ 0,  1],\n         [ 2,  3]],\n        [[ 4,  5],\n         [ 6,  7]]],\n       [[[ 8,  9],\n         [10, 11]],\n        [[12, 13],\n         [14, 15]]]])\n```", "```py\narr1D.shape\n```", "```py\n(5,)\n```", "```py\narr2D.shape\n```", "```py\n(2, 2)\n```", "```py\nnp.zeros(shape=(2,5))\n```", "```py\narray([[0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0.]])\n```", "```py\nnp.ones(shape=(2,2))\n```", "```py\narray([[1., 1.],\n       [1., 1.]])\n```", "```py\nnp.identity(3)\n```", "```py\narray([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])\n```", "```py\nnp.arange(5)\n```", "```py\narray([0, 1, 2, 3, 4])\n```", "```py\nnp.random.randn(2,2)\n```", "```py\narray([[ 0.57370365, -1.22229931],\n       [-1.25539335,  1.11372387]])\n```", "```py\nnp.array([-1, 0, 1], dtype=np.float64)\n```", "```py\narray([-1.,  0.,  1.], dtype=float64)\n```", "```py\nnp.array([-1, 0, 1], dtype=np.bool)\n```", "```py\narray([ True, False,  True])\n```", "```py\narr1D.dtype\n```", "```py\ndtype('float64')\n```", "```py\narr1D.astype(np.int64).dtype\n```", "```py\ndtype('int64')\n```", "```py\narr1D.astype(np.int64)\n```", "```py\narray([1, 2, 3, 4, 5])\n```", "```py\narr = np.random.randn(3,3); \narr\n```", "```py\narray([[-0.04113926, -0.273338  , -1.05294723],\n       [ 1.65004669, -0.09589629,  0.15586867],\n       [ 0.39533427,  1.47193681,  0.32148741]])\n```", "```py\narr[0]\n```", "```py\narray([-0.04113926, -0.273338  , -1.05294723])\n```", "```py\narr[0][1]\n```", "```py\n-0.2733379996693689\n```", "```py\narr[0, 1]\n```", "```py\n-0.2733379996693689\n```", "```py\narr[-1]\n```", "```py\narray([0.39533427, 1.47193681, 0.32148741])\n```", "```py\narr[1:]\n```", "```py\narray([[ 1.65004669, -0.09589629,  0.15586867],\n       [ 0.39533427,  1.47193681,  0.32148741]])\n```", "```py\narr[1:, :2]\n```", "```py\narray([[ 1.65004669, -0.09589629],\n       [ 0.39533427,  1.47193681]])\n```", "```py\narr[1:2, -2:-1]\n```", "```py\narray([[-0.09589629]])\n```", "```py\narr[:][2]\n```", "```py\narray([0.39533427, 1.47193681, 0.32148741])\n```", "```py\narr[:][:]\n```", "```py\narray([[-0.04113926, -0.273338  , -1.05294723],\n       [ 1.65004669, -0.09589629,  0.15586867],\n       [ 0.39533427,  1.47193681,  0.32148741]])\n```", "```py\narr1 = arr[1:2]; \narr1\n```", "```py\narray([[ 1.65004669, -0.09589629,  0.15586867]])\n```", "```py\narr1[:] = 0; \narr1\n```", "```py\narray([[0., 0., 0.]])\n```", "```py\narr\n```", "```py\narray([[-0.04113926, -0.273338  , -1.05294723],\n       [ 0.        ,  0.        ,  0.        ],\n       [ 0.39533427,  1.47193681,  0.32148741]])\n```", "```py\narr_copy = arr.copy()\n```", "```py\narr_copy[1:2] = 1; \narr_copy\n```", "```py\narray([[-0.04113926, -0.273338  , -1.05294723],\n       [ 1.        ,  1.        ,  1.        ],\n       [ 0.39533427,  1.47193681,  0.32148741]])\n```", "```py\narr\n```", "```py\narray([[-0.04113926, -0.273338  , -1.05294723],\n       [ 0.        ,  0.        ,  0.        ],\n       [ 0.39533427,  1.47193681,  0.32148741]])\n```", "```py\narr = np.random.randn(3,3); \narr\n```", "```py\narray([[-0.50566069, -0.52115534,  0.0757591 ],\n       [ 1.67500165, -0.99280199,  0.80878346],\n       [ 0.56937775,  0.36614928, -0.02532004]])\n```", "```py\narr < 0\n```", "```py\narray([[ True,  True, False],\n       [False,  True, False],\n       [False, False,  True]])\n```", "```py\narr[(arr < 0)]\n```", "```py\narray([-0.50566069, -0.52115534, -0.99280199, -0.02532004])\n```", "```py\n(arr > -1) & (arr < 1)\n```", "```py\narray([[ True,  True,  True],\n       [False,  True,  True],\n       [ True,  True,  True]])\n```", "```py\narr[((arr > -1) & (arr < 1))]\n```", "```py\narray([-0.50566069, -0.52115534,  0.0757591 , -0.99280199,  0.80878346,\n        0.56937775,  0.36614928, -0.02532004])\n```", "```py\narr\n```", "```py\narray([[-0.50566069, -0.52115534,  0.0757591 ],\n       [ 1.67500165, -0.99280199,  0.80878346],\n       [ 0.56937775,  0.36614928, -0.02532004]])\n```", "```py\narr[[0, 2]]\n```", "```py\narray([[-0.50566069, -0.52115534,  0.0757591 ],\n       [ 0.56937775,  0.36614928, -0.02532004]])\n```", "```py\narr[[0, 2], [1]]\n```", "```py\narray([-0.52115534,  0.36614928])\n```", "```py\narr[[2, 0]]\n```", "```py\narray([[ 0.56937775,  0.36614928, -0.02532004],\n       [-0.50566069, -0.52115534,  0.0757591 ]])\n```", "```py\narr2D\n```", "```py\narray([[1, 2],\n       [3, 4]])\n```", "```py\narr2D * 4\n```", "```py\narray([[ 4,  8],\n       [12, 16]])\n```", "```py\n2*arr2D + 3*arr2D\n```", "```py\narray([[ 5, 10],\n       [15, 20]])\n```", "```py\narr2D ** 2\n```", "```py\narray([[ 1,  4],\n       [ 9, 16]])\n```", "```py\narr2D + 10\n```", "```py\narray([[11, 12],\n       [13, 14]])\n```", "```py\narr2D.transpose()\n```", "```py\narray([[1, 3],\n       [2, 4]])\n```", "```py\narr2D.reshape((4, 1))\n```", "```py\narray([[1],\n       [2],\n       [3],\n       [4]])\n```", "```py\narr = np.random.randn(9).reshape((3,3)); \narr\n```", "```py\narray([[ 0.24344963, -0.53183761,  1.08906941],\n       [-1.71144547, -0.03195253,  0.82675183],\n       [-2.24987291,  2.60439882, -0.09449784]])\n```", "```py\nnp.min(arr)\n```", "```py\n-2.249872908111852\n```", "```py\nnp.abs(arr)\n```", "```py\narray([[0.24344963, 0.53183761, 1.08906941],\n       [1.71144547, 0.03195253, 0.82675183],\n       [2.24987291, 2.60439882, 0.09449784]])\n```", "```py\nnp.mean(arr)\n```", "```py\n0.01600703714906236\n```", "```py\nnp.mean(arr, axis=0)\n```", "```py\narray([-1.23928958,  0.68020289,  0.6071078 ])\n```", "```py\nnp.mean(arr, axis=1)\n```", "```py\narray([ 0.26689381, -0.30554872,  0.08667602])\n```", "```py\nnp.argmax(arr)\n```", "```py\n7\n```", "```py\nnp.argmax(arr, axis=1)\n```", "```py\narray([2, 2, 1], dtype=int64)\n```", "```py\nnp.cumsum(arr)\n```", "```py\narray([ 0.24344963, -0.28838798,  0.80068144, -0.91076403, -0.94271656,\n       -0.11596474, -2.36583764,  0.23856117,  0.14406333])\n```", "```py\nnp.cumsum(arr, axis=1)\n```", "```py\narray([[ 0.24344963, -0.28838798,  0.80068144],\n       [-1.71144547, -1.743398  , -0.91664617],\n       [-2.24987291,  0.35452591,  0.26002807]])\n```", "```py\narr[1, :] = np.nan; \narr\n```", "```py\narray([[ 0.64296696, -1.35386668, -0.63063743],\n       [        nan,         nan,         nan],\n       [-0.19093967, -0.93260398, -1.58520989]])\n```", "```py\nnp.isnan(arr)\n```", "```py\narray([[False, False, False],\n       [ True,  True,  True],\n       [False, False, False]])\n```", "```py\narr1 = np.random.randn(9).reshape((3,3)); \narr1\n```", "```py\narray([[ 0.32102068, -0.51877544, -1.28267292],\n       [-1.34842617,  0.61170993, -0.5561239 ],\n       [ 1.41138027, -2.4951374 ,  1.30766648]])\n```", "```py\narr2 = np.random.randn(9).reshape((3,3)); \narr2\n```", "```py\narray([[ 0.33189432,  0.82416396, -0.17453351],\n       [-1.59689203, -0.42352094,  0.22643589],\n       [-1.80766151,  0.26201455, -0.08469759]])\n```", "```py\nnp.greater(arr1, arr2)\n```", "```py\narray([[False, False, False],\n       [ True,  True, False],\n       [ True, False,  True]])\n```", "```py\narr1 > arr2\n```", "```py\narray([[False, False, False],\n       [ True,  True, False],\n       [ True, False,  True]])\n```", "```py\narr_bool = (arr > -0.5) & (arr < 0.5); \narr_bool\n```", "```py\narray([[False, False,  True],\n       [False, False, False],\n       [False,  True,  True]])\n```", "```py\narr_bool.any()\n```", "```py\nTrue\n```", "```py\narr_bool.any(axis=1)\n```", "```py\narray([True, False, True])\n```", "```py\narr_bool.all()\n```", "```py\nFalse\n```", "```py\narr_bool.all(axis=1)\n```", "```py\narray([False, False, False])\n```", "```py\narr1D = np.random.randn(10); \narr1D\n```", "```py\narray([ 1.14322028,  1.61792721, -1.01446969,  1.26988026, -0.20110113,\n       -0.28283051,  0.73009565, -0.68766388,  0.27276319, -0.7135162 ])\n```", "```py\nnp.sort(arr1D)\n```", "```py\narray([-1.01446969, -0.7135162 , -0.68766388, -0.28283051, -0.20110113,\n        0.27276319,  0.73009565,  1.14322028,  1.26988026,  1.61792721])\n```", "```py\narr1D\n```", "```py\narray([ 1.14322028,  1.61792721, -1.01446969,  1.26988026, -0.20110113,\n       -0.28283051,  0.73009565, -0.68766388,  0.27276319, -0.7135162 ])\n```", "```py\nnp.argsort(arr1D)\n```", "```py\narray([2, 9, 7, 5, 4, 8, 6, 0, 3, 1])\n```", "```py\narr1D.sort()\nnp.argsort(arr1D)\n```", "```py\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n```", "```py\narr1 = np.array(range(1, 11)); \narr1\n```", "```py\narray([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])\n```", "```py\narr2 = arr1 * 1000; \narr2\n```", "```py\narray([ 1000,  2000,  3000,  4000,  5000,  6000,  7000,  8000,  9000,\n       10000])\n```", "```py\ncond = np.random.randn(10) > 0; \ncond\n```", "```py\narray([False, False,  True, False, False,  True,  True,  True, False, True])\n```", "```py\nnp.where(cond, arr1, arr2)\n```", "```py\narray([1000, 2000,    3, 4000, 5000,    6,    7,    8, 9000,   10])\n```", "```py\narr\n```", "```py\narray([[-0.50566069, -0.52115534,  0.0757591 ],\n       [ 1.67500165, -0.99280199,  0.80878346],\n       [ 0.56937775,  0.36614928, -0.02532004]])\n```", "```py\nnp.savetxt('arr.csv', arr, fmt='%0.2lf', delimiter=',')\n```", "```py\n!cat arr.csv\n```", "```py\n-0.51,-0.52,0.08\n1.68,-0.99,0.81\n0.57,0.37,-0.03\n```", "```py\narr_new = np.loadtxt('arr.csv', delimiter=','); \narr_new\n```", "```py\narray([[-0.51, -0.52,  0.08],\n       [ 1.68, -0.99,  0.81],\n       [ 0.57,  0.37, -0.03]])\n```", "```py\nnp.save('arr', arr)\n!cat arr.npy\n```", "```py\narr_new = np.load('arr.npy'); \narr_new\n```", "```py\narray([[-0.50566069, -0.52115534,  0.0757591 ],\n       [ 1.67500165, -0.99280199,  0.80878346],\n       [ 0.56937775,  0.36614928, -0.02532004]])\n```", "```py\narr == arr_new\n```", "```py\narray([[ True,  True,  True],\n       [ True,  True,  True],\n       [ True,  True,  True]])\n```"]