["```py\n%matplotlib inline\nimport numpy as np\nimport pandas as pd\nfrom scipy import stats\nimport seaborn as sn\nimport matplotlib.pyplot as plt\nimport mpld3\nmpld3.enable_notebook()\nimport warnings\nwarnings.filterwarnings('ignore')\npd.set_option('display.max_rows', 2)\n```", "```py\nA = pd.read_csv('A.csv', parse_dates=True, index_col=0);\nA\n```", "```py\nB = pd.read_csv('B.csv', parse_dates=True, index_col=0); \nB\n```", "```py\nC = pd.read_csv('C.csv', parse_dates=True, index_col=0); \nC\n```", "```py\nmerged_df = A.join(B, how='outer', lsuffix='_A', sort=True).join(C, how='outer', lsuffix='_B', rsuffix='_C', sort=True)\nmerged_df\n```", "```py\nmerged_df[merged_df.isnull().all(axis=1)]\n```", "```py\nmerged_df[['Close_A', 'Close_B', 'Close_C']].isnull().any(axis=1).sum()\n```", "```py\n148\n```", "```py\nvalid_close_df = merged_df.dropna(subset=['Close_A', 'Close_B', 'Close_C'], how='any')\n```", "```py\nvalid_close_df[['Close_A', 'Close_B', 'Close_C']].isnull().any(axis=1).sum()\n```", "```py\n0\n```", "```py\nvalid_close_df\n```", "```py\nvalid_close_df.isnull().any(axis=1).sum()\n```", "```py\n165\n```", "```py\nvalid_close_df[valid_close_df.isnull().any(axis=1)]\n```", "```py\nvalid_close_complete = valid_close_df.fillna(method='backfill')\n```", "```py\nvalid_close_complete.isnull().any(axis=1).sum()\n```", "```py\n0\n```", "```py\npd.set_option('display.max_rows', None)\nvalid_close_complete.describe()\n```", "```py\npd.set_option('display.max_rows', 2)\n```", "```py\nprices_only = valid_close_complete.drop(['Volume_A', 'Volume_B', 'Volume_C'], axis=1)\nprices_only\n```", "```py\nvalid_close_complete['Open_A'].plot(figsize=(12,6), linestyle='--', color='black', legend='Open_A')\nvalid_close_complete['Close_A'].plot(figsize=(12,6), linestyle='-', color='grey', legend='Close_A')\nvalid_close_complete['Low_A'].plot(figsize=(12,6), linestyle=':', color='black', legend='Low_A')\nvalid_close_complete['High_A'].plot(figsize=(12,6), linestyle='-.', color='grey', legend='High_A')\n```", "```py\nvalid_close_complete['Open_C'].plot(figsize=(12,6), linestyle='--', color='black', legend='Open_C')\nvalid_close_complete['Close_C'].plot(figsize=(12,6), linestyle='-', color='grey', legend='Close_C')\nvalid_close_complete['Low_C'].plot(figsize=(12,6), linestyle=':', color='black', legend='Low_C')\nvalid_close_complete['High_C'].plot(figsize=(12,6), linestyle='-.', color='grey', legend='High_C')\n```", "```py\nno_outlier_prices = prices_only[(np.abs(stats.zscore(prices_only)) < 6).all(axis=1)]\n```", "```py\nno_outlier_prices['Open_C'].plot(figsize=(12,6), linestyle='--', color='black', legend='Open_C')\nno_outlier_prices['Close_C'].plot(figsize=(12,6), linestyle='-', color='grey', legend='Close_C')\nno_outlier_prices['Low_C'].plot(figsize=(12,6), linestyle=':', color='black', legend='Low_C')\nno_outlier_prices['High_C'].plot(figsize=(12,6), linestyle='-.', color='grey', legend='High_C')\n```", "```py\npd.set_option('display.max_rows', None)\nno_outlier_prices[['Open_C', 'Close_C', 'Low_C', 'High_C']].describe()\n```", "```py\npd.set_option('display.max_rows', 5)\n```", "```py\nclose_prices = no_outlier_prices[['Close_A', 'Close_B', 'Close_C']]\n```", "```py\ndelta_close_prices = (close_prices.shift(-1) - close_prices).fillna(0)\ndelta_close_prices.columns = ['Delta_Close_A', 'Delta_Close_B', 'Delta_Close_C']\ndelta_close_prices\n```", "```py\npd.set_option('display.max_rows', None)\ndelta_close_prices.describe()\n```", "```py\ndelta_close_prices['Delta_Close_A'].plot(kind='hist', bins=100, figsize=(12,6), color='black', grid=True)\n```", "```py\ndelta_close_prices['Delta_Close_B'].plot(kind='box', figsize=(12,6), color='black', grid=True)\n```", "```py\npd.plotting.scatter_matrix(delta_close_prices, figsize=(10,10), color='black', alpha=0.75, diagonal='kde', grid=True)\n```", "```py\ndelta_close_prices.corr()\n```", "```py\nplt.figure(figsize=(6,6))\nsn.heatmap(delta_close_prices.corr(), annot=True, square=True, linewidths=2)\n```", "```py\nimport dtale\ndtale.show(valid_close_df)\n```"]