- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Acquiring Financial Data
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取金融数据
- en: The first chapter of this book is dedicated to a very important (some may say
    the most important) part of any data science/quantitative finance project—gathering
    data. In line with the famous adage “garbage in, garbage out,” we should strive
    to obtain data of the highest possible quality and then correctly preprocess it
    for later use with statistical and machine learning algorithms. The reason for
    this is simple—the results of our analyses are highly dependent on the input data
    and no sophisticated model will be able to compensate for that. That is also why
    in our analyses, we should be able to use our (or someone else’s) understanding
    of the economic/financial domain to motivate certain data for, for example, modeling
    stock returns.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的第一章专门讲解任何数据科学/量化金融项目中非常重要（有些人可能会说是最重要）的部分——数据收集。根据著名的谚语“垃圾进，垃圾出”，我们应该努力获取尽可能高质量的数据，并将其正确预处理，以便后续与统计学和机器学习算法一起使用。原因很简单——我们的分析结果高度依赖输入数据，任何复杂的模型都无法弥补这一点。这也是为什么在我们的分析中，我们应该能够利用自己（或他人）对经济/金融领域的理解，来为某些数据提供动机，例如建模股票收益。
- en: One of the most frequently reported issues among the readers of the first edition
    of this book was getting high-quality data. That is why in this chapter we spend
    more time exploring different sources of financial data. While quite a few of
    these vendors offer similar information (prices, fundamentals, and so on), they
    also offer additional, unique data that can be downloaded via their APIs. An example
    could be company-related news articles or pre-computed technical indicators. That
    is why we will download different types of data depending on the recipe. However,
    be sure to inspect the documentation of the library/API, as most likely its vendor
    also provides standard data such as prices.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书第一版的读者中，最常见的报告问题之一就是获取高质量数据。这也是为什么在本章中，我们花了更多时间探索不同的金融数据来源。虽然这些供应商中的许多提供相似的信息（如价格、基本面等），但它们也提供了可以通过其
    API 下载的额外独特数据。例如，公司相关的新闻文章或预计算的技术指标。因此，我们将在不同的配方中下载不同类型的数据。不过，一定要检查库/API 的文档，因为其供应商很可能还提供标准数据，如价格等。
- en: Additional examples are also covered in the Jupyter notebooks, which you can
    find in the accompanying GitHub repository.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 额外的示例也包含在 Jupyter notebooks 中，你可以在附带的 GitHub 仓库中找到它们。
- en: The data sources in this chapter were selected intentionally not only to showcase
    how easy it can be to gather high-quality data using Python libraries but also
    to show that the gathered data comes in many shapes and sizes.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的数据来源是经过精心挑选的，目的是不仅展示如何使用 Python 库轻松收集高质量数据，还展示了收集到的数据可以有多种形式和大小。
- en: Sometimes we will get a nicely formatted `pandas` DataFrame, while other times
    it might be in JSON format or even bytes that need to be processed and then loaded
    as a CSV. Hopefully, these recipes will sufficiently prepare you to work with
    any kind of data you might encounter online.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们会得到一个格式良好的 `pandas` DataFrame，而其他时候它可能是 JSON 格式，甚至是需要处理后作为 CSV 加载的字节数据。希望这些技巧能充分帮助你准备好处理你可能在网上遇到的任何类型的数据。
- en: Something to bear in mind while reading this chapter is that data differs among
    sources. This means that the prices we downloaded from two vendors will most likely
    differ, as those vendors also get their data from different sources and might
    use other methods to adjust the prices for corporate actions. The best practice
    is to find a source you trust the most concerning a particular type of data (based
    on, for example, opinion on the internet) and then use it to download the data
    you need. One additional thing to keep in mind is that when building algorithmic
    trading strategies, the data we use for modeling should align with the live data
    feed used for executing the trades.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读本章时需要记住的一点是，不同来源的数据有所不同。这意味着我们从两个供应商下载的价格很可能会有所不同，因为这些供应商从不同的来源获取数据，并可能使用不同的方法来调整价格以应对企业行为。最佳实践是找到一个你最信任的数据来源（例如，基于网上的评价），然后用它下载你需要的数据。另一个需要记住的点是，当构建算法交易策略时，我们用于建模的数据应该与用于执行交易的实时数据流一致。
- en: This chapter does not cover one important type of data—alternative data. This
    could be any type of data that can be used to generate some insights into predicting
    asset prices. Alternative data can include satellite images (for example, tracking
    shipping routes, or the development of a certain area), sensor data, web traffic
    data, customer reviews, etc. While there are many vendors specializing in alternative
    data (for example, Quandl/Nasdaq Data Link), you can also get some by accessing
    publicly available information via web scraping. As an example, you could scrape
    customer reviews from Amazon or Yelp. However, those are often bigger projects
    and are unfortunately outside of the scope of this book. Also, you need to make
    sure that web scraping a particular website is not against its terms and conditions!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章没有涉及一种重要的数据类型——替代数据。替代数据是指任何可以用来预测资产价格的见解的数据类型。替代数据可以包括卫星图像（例如，追踪航运路线或某个区域的发展）、传感器数据、网站流量数据、客户评论等。虽然有许多专门提供替代数据的供应商（例如
    Quandl/Nasdaq Data Link），你也可以通过网页抓取访问公开的可用信息来获得一些替代数据。例如，你可以从 Amazon 或 Yelp 抓取客户评论。然而，这通常是较大的项目，遗憾的是超出了本书的范围。此外，你需要确保抓取特定网站的数据不会违反其条款和条件！
- en: Using the vendors mentioned in this chapter, you can get quite a lot of information
    for free. But most of those providers also offer paid tiers. Remember to do thorough
    research on what the data suppliers actually provide and what your needs are before
    signing up for any of the services.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用本章提到的供应商，你可以免费获取相当多的信息。但大多数供应商也提供付费服务。记得在注册任何服务之前，务必对数据供应商实际提供的数据以及你的需求进行详细调查。
- en: 'In this chapter, we cover the following recipes:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下内容：
- en: Getting data from Yahoo Finance
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Yahoo Finance 获取数据
- en: Getting data from Nasdaq Data Link
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Nasdaq Data Link 获取数据
- en: Getting data from Intrinio
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Intrinio 获取数据
- en: Getting data from Alpha Vantage
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Alpha Vantage 获取数据
- en: Getting data from CoinGecko
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 CoinGecko 获取数据
- en: Getting data from Yahoo Finance
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Yahoo Finance 获取数据
- en: One of the most popular sources of free financial data is **Yahoo Finance**.
    It contains not only historical and current stock prices in different frequencies
    (daily, weekly, and monthly), but also calculated metrics, such as the **beta**
    (a measure of the volatility of an individual asset in comparison to the volatility
    of the entire market), fundamentals, earnings information/calendars, and many
    more.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**Yahoo Finance** 是最受欢迎的免费金融数据来源之一。它不仅包含不同频率（每日、每周和每月）的历史和当前股票价格，还包括一些计算指标，如
    **beta**（衡量单一资产相对于整个市场波动性的指标）、基本面数据、收益信息/日历等。'
- en: For a long period of time, the go-to tool for downloading data from Yahoo Finance
    was the `pandas-datareader` library. The goal of the library was to extract data
    from a variety of sources and store it in the form of a `pandas` DataFrame. However,
    after some changes to the Yahoo Finance API, this functionality was deprecated.
    It is definitely good to be familiar with this library, as it facilitates downloading
    data from sources such as FRED (Federal Reserve Economic Data), the Fama/French
    Data Library, or the World Bank. Those might come in handy for different kinds
    of analyses and some of them are presented in the following chapters.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在很长一段时间里，从 Yahoo Finance 下载数据的首选工具是 `pandas-datareader` 库。该库的目标是从多个来源提取数据，并以
    `pandas` 数据框的形式存储。然而，在 Yahoo Finance API 进行一些更改后，该功能已被弃用。熟悉这个库是很有帮助的，因为它简化了从 FRED（联邦储备经济数据）、Fama/French
    数据库或世界银行等来源下载数据的过程。这些数据可能对不同类型的分析很有帮助，接下来的章节中将介绍其中一些内容。
- en: As of now, the easiest and fastest way of downloading historical stock prices
    is to use the `yfinance` library (formerly known as `fix_yahoo_finance`).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，下载历史股票价格的最简单最快方式是使用 `yfinance` 库（以前叫做 `fix_yahoo_finance`）。
- en: For the sake of this recipe, we are interested in downloading Apple’s stock
    prices from the years 2011 to 2021.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 就本章的内容而言，我们感兴趣的是下载 2011 到 2021 年期间的苹果公司股票价格。
- en: How to do it…
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Execute the following steps to download data from Yahoo Finance:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤从 Yahoo Finance 下载数据：
- en: 'Import the libraries:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE0]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Download the data:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载数据：
- en: '[PRE1]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Inspect the downloaded data:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查下载的数据：
- en: '[PRE2]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Running the code generates the following preview of the DataFrame:'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行代码会生成以下数据框的预览：
- en: '![](../Images/B18112_01_01.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_01.png)'
- en: 'Figure 1.1: Preview of the DataFrame with downloaded stock prices'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1：展示下载的股票价格数据框的预览
- en: The result of the request is a `pandas` DataFrame (2,769 rows) containing daily
    **Open, High, Low, and Close** (**OHLC**) prices, as well as the adjusted close
    price and volume.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请求的结果是一个`pandas` DataFrame（2,769行），包含日常**开盘、最高、最低和收盘**（**OHLC**）价格，以及调整后的收盘价和成交量。
- en: Yahoo Finance automatically adjusts the close price for **stock splits**, that
    is, when a company divides the existing shares of its stock into multiple new
    shares, most frequently to boost the stock’s liquidity. The adjusted close price
    takes into account not only splits but also dividends.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Yahoo Finance会自动调整**股票拆分**的收盘价，即当公司将其现有股票分割成多个新股票时，通常是为了提高股票的流动性。调整后的收盘价不仅考虑了拆股，还考虑了股息。
- en: How it works…
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `download` function is very intuitive. In the most basic case, we just need
    to provide the ticker (symbol), and it will try to download all available data
    since 1950.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`download`函数非常直观。在最基本的情况下，我们只需要提供股票代码（符号），它将尝试下载自1950年以来的所有可用数据。'
- en: In the preceding example, we downloaded daily data from a specific range (2011
    to 2021).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们下载了一个特定范围（2011到2021年）的每日数据。
- en: 'Some additional features of the `download` function are:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`download`函数的一些附加功能包括：'
- en: We can download information for multiple tickers at once by providing a list
    of tickers (`["AAPL", "MSFT"]`) or multiple tickers as a string (`"AAPL MSFT"`).
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以通过提供股票代码列表（`["AAPL", "MSFT"]`）或多个股票代码的字符串（`"AAPL MSFT"`）来一次性下载多个股票的信息。
- en: We can set `auto_adjust=True` to download only the adjusted prices.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以设置`auto_adjust=True`来仅下载已调整的价格。
- en: We can additionally download dividends and stock splits by setting `actions='inline'`.
    Those actions can also be used to manually adjust the prices or for other analyses.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还可以通过设置`actions='inline'`来下载股息和股票拆分信息。这些操作也可以用于手动调整价格或进行其他分析。
- en: Specifying `progress=False` disables the progress bar.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定`progress=False`将禁用进度条。
- en: The `interval` argument can be used to download data in different frequencies.
    We could also download intraday data as long as the requested period is shorter
    than 60 days.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`interval`参数可以用于下载不同频率的数据。只要请求的时间段小于60天，我们也可以下载日内数据。'
- en: There’s more…
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: '`yfinance` also offers an alternative way of downloading the data—via the `Ticker`
    class. First, we need to instantiate the object of the class:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`yfinance`还提供了一种通过`Ticker`类下载数据的替代方式。首先，我们需要实例化该类的对象：'
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To download the historical price data, we can use the `history` method:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载历史价格数据，我们可以使用`history`方法：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: By default, the method downloads the last month of data. We can use the same
    arguments as in the `download` function to specify the range and frequency.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，该方法会下载最近一个月的数据。我们可以使用与`download`函数相同的参数来指定范围和频率。
- en: 'The main benefit of using the `Ticker` class is that we can download much more
    information than just the prices. Some of the available methods include:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`Ticker`类的主要优点是我们可以下载比仅价格更多的信息。一些可用的方法包括：
- en: '`info`—outputs a JSON object containing detailed information about the stock
    and its company, for example, the company’s full name, a short business summary,
    which exchange it is listed on, as well as a selection of financial metrics such
    as the beta coefficient'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`info`—输出一个包含股票及其公司详细信息的JSON对象，例如公司的全名、简短的业务总结、上市的交易所，以及一系列财务指标，如贝塔系数'
- en: '`actions`—outputs corporate actions such as dividends and splits'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`actions`—输出公司行动信息，例如股息和拆股'
- en: '`major_holders`—presents the names of the major holders'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`major_holders`—显示主要持股人的名字'
- en: '`institutional_holders`—shows the institutional holders'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`institutional_holders`—显示机构持有者'
- en: '`calendar`—shows the incoming events, such as the quarterly earnings'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`calendar`—显示即将到来的事件，例如季度财报'
- en: '`earnings`/`quarterly_earnings`—shows the earnings information from the last
    few years/quarters'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`earnings`/`quarterly_earnings`—显示过去几年/季度的盈利信息'
- en: '`financials`/`quarterly_financials`—contains financial information such as
    income before tax, net income, gross profit, EBIT, and much more'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`financials`/`quarterly_financials`—包含财务信息，如税前收入、净收入、毛利润、EBIT等'
- en: Please see the corresponding Jupyter notebook for more examples and outputs
    of those methods.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅相应的Jupyter笔记本，以获取更多这些方法的示例和输出。
- en: See also
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: For a complete list of downloadable data, please refer to the GitHub repo of
    `yfinance` ([https://github.com/ranaroussi/yfinance](https://github.com/ranaroussi/yfinance)).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 欲查看可下载数据的完整列表，请参考`yfinance`的GitHub仓库（[https://github.com/ranaroussi/yfinance](https://github.com/ranaroussi/yfinance)）。
- en: 'You can check out some alternative libraries for downloading data from Yahoo
    Finance:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查看一些其他库，用于从 Yahoo Finance 下载数据：
- en: '`yahoofinancials`—similarly to `yfinance`, this library offers the possibility
    of downloading a wide range of data from Yahoo Finance. The biggest difference
    is that all the downloaded data is returned as JSON.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`yahoofinancials`——与 `yfinance` 类似，这个库提供从 Yahoo Finance 下载各种数据的功能。最大区别在于，所有下载的数据都以
    JSON 格式返回。'
- en: '`yahoo_earnings_calendar`—a small library dedicated to downloading the earnings
    calendar.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`yahoo_earnings_calendar`——一个小型库，专门用于下载财报日历。'
- en: Getting data from Nasdaq Data Link
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Nasdaq Data Link 获取数据
- en: '**Alternative data** can be anything that is considered non-market data, for
    example, weather data for agricultural commodities, satellite images that track
    oil shipments, or even customer feedback that reflects a company’s service performance.
    The idea behind using alternative data is to get an “informational edge” that
    can then be used for generating alpha. In short, **alpha** is a measure of performance
    describing an investment strategy’s, trader’s, or portfolio manager’s ability
    to beat the market.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**替代数据**可以是任何被认为是非市场数据的内容，例如农业商品的天气数据、追踪石油运输的卫星图像，甚至是反映公司服务表现的客户反馈。使用替代数据的背后理念是获取一个“信息优势”，然后可以用来生成
    alpha。简而言之，**alpha**是一个衡量表现的指标，描述投资策略、交易员或投资组合经理超越市场的能力。'
- en: '**Quandl** was the leading provider of alternative data products for investment
    professionals (including quant funds and investment banks). Recently, it was acquired
    by Nasdaq and is now part of the **Nasdaq Data Link** service. The goal of the
    new platform is to provide a unified source of trusted data and analytics. It
    offers an easy way to download data, also via a dedicated Python library.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**Quandl**曾是投资专业人士（包括量化基金和投资银行）提供替代数据产品的领先供应商。最近，它被纳斯达克收购，现在是 **Nasdaq Data
    Link** 服务的一部分。新平台的目标是提供统一的可信数据和分析源。它提供了一种通过专门的 Python 库轻松下载数据的方式。'
- en: A good starting place for financial data would be the WIKI Prices database,
    which contains stock prices, dividends, and splits for 3,000 US publicly traded
    companies. The drawback of this database is that as of April 2018, it is no longer
    supported (meaning there is no recent data). However, for purposes of getting
    historical data or learning how to access the databases, it is more than enough.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 获取金融数据的一个好起点是 WIKI Prices 数据库，其中包含 3,000 家美国上市公司的股票价格、股息和拆股信息。这个数据库的缺点是自 2018
    年 4 月起不再支持（意味着没有最新数据）。然而，对于获取历史数据或学习如何访问数据库，它已经足够。
- en: We use the same example that we used in the previous recipe—we download Apple’s
    stock prices for the years 2011 to 2021.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用与前一个示例中相同的例子——我们下载了苹果公司从 2011 年到 2021 年的股价。
- en: Getting ready
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: Before downloading the data, we need to create an account at Nasdaq Data Link
    ([https://data.nasdaq.com/](https://data.nasdaq.com/)) and then authenticate our
    email address (otherwise, an exception is likely to occur while downloading the
    data). We can find our personal API key in our profile ([https://data.nasdaq.com/account/profile](https://data.nasdaq.com/account/profile)).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在下载数据之前，我们需要在 Nasdaq Data Link 创建一个账户（[https://data.nasdaq.com/](https://data.nasdaq.com/)），然后验证我们的电子邮件地址（否则在下载数据时可能会出现异常）。我们可以在个人资料中找到自己的
    API 密钥（[https://data.nasdaq.com/account/profile](https://data.nasdaq.com/account/profile)）。
- en: How to do it…
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Execute the following steps to download data from Nasdaq Data Link:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤从 Nasdaq Data Link 下载数据：
- en: 'Import the libraries:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE5]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Authenticate using your personal API key:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你的个人 API 密钥进行认证：
- en: '[PRE6]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You need to replace `YOUR_KEY_HERE` with your own API key.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你需要将 `YOUR_KEY_HERE` 替换为你自己的 API 密钥。
- en: 'Download the data:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载数据：
- en: '[PRE7]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Inspect the downloaded data:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查下载的数据：
- en: '[PRE8]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Running the code generates the following preview of the DataFrame:'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行代码后将生成以下 DataFrame 预览：
- en: '![](../Images/B18112_01_02.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_02.png)'
- en: 'Figure 1.2: Preview of the downloaded price information'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2：下载的价格信息预览
- en: The result of the request is a DataFrame (1,818 rows) containing the daily OHLC
    prices, the adjusted prices, dividends, and potential stock splits. As we mentioned
    in the introduction, the data is limited and is only available until April 2018—the
    last observation actually comes from March, 27 2018.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 请求的结果是一个 DataFrame（1,818 行），包含每日 OHLC 价格、调整后的价格、股息和潜在的股票拆分。正如我们在介绍中提到的，这些数据是有限的，仅提供到
    2018 年 4 月——最后一条观察数据实际上来自 2018 年 3 月 27 日。
- en: How it works…
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'The first step after importing the required libraries was authentication using
    the API key. When providing the dataset argument, we used the following structure:
    DATASET/TICKER.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 导入所需库后的第一步是使用 API 密钥进行身份验证。当提供数据集参数时，我们使用了以下结构：DATASET/TICKER。
- en: 'We should keep the API keys secure and private, that is, not share them in
    public repositories, or anywhere else. One way to make sure that the key stays
    private is to create an environment variable (how to do it depends on your operating
    system) and then load it in Python. To do so, we can use the `os` module. To load
    the `NASDAQ_KEY` variable, we could use the following code: `os.environ.get("NASDAQ_KEY")`.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该保持 API 密钥的安全和私密，即不要在公共代码库或任何其他地方分享它们。确保密钥保持私密的一种方法是创建一个环境变量（如何操作取决于你的操作系统），然后在
    Python 中加载它。为此，我们可以使用 `os` 模块。要加载 `NASDAQ_KEY` 变量，我们可以使用以下代码：`os.environ.get("NASDAQ_KEY")`。
- en: 'Some additional details on the `get` function are:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 `get` 函数的更多细节如下：
- en: We can specify multiple datasets at once using a list such as `["WIKI/AAPL",
    "WIKI/MSFT"]`.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以通过使用类似 `["WIKI/AAPL", "WIKI/MSFT"]` 的列表一次指定多个数据集。
- en: The `collapse` argument can be used to define the frequency (available options
    are daily, weekly, monthly, quarterly, or annually).
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`collapse` 参数可用于定义频率（可选项包括每日、每周、每月、每季度或每年）。'
- en: The `transform` argument can be used to carry out some basic calculations on
    the data prior to downloading. For example, we could calculate row-on-row change
    (`diff`), row-on-row percentage change (`rdiff`), or cumulative sum (`cumul`)
    or scale the series to start at 100 (`normalize`). Naturally, we can easily do
    the very same operation using `pandas`.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`transform` 参数可用于在下载数据之前对数据进行一些基本的计算。例如，我们可以计算逐行变化（`diff`）、逐行百分比变化（`rdiff`）、累计和（`cumul`）或将系列标准化为从
    100 开始（`normalize`）。自然地，我们也可以使用 `pandas` 轻松完成完全相同的操作。'
- en: There’s more...
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容...
- en: Nasdaq Data Link distinguishes two types of API calls for downloading data.
    The `get` function we used before is classified as a time-series API call. We
    can also use the tables API call with the `get_table` function.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 纳斯达克数据链接区分了两种用于下载数据的 API 调用。我们之前使用的 `get` 函数被归类为时间序列 API 调用。我们还可以使用带有 `get_table`
    函数的表格 API 调用。
- en: 'Download the data for multiple tickers using the `get_table` function:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `get_table` 函数下载多个股票代码的数据：
- en: '[PRE9]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Running the code generates the following preview of the DataFrame:![](../Images/B18112_01_03.png)
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行代码会生成以下 DataFrame 预览：![](../Images/B18112_01_03.png)
- en: 'Figure 1.3: Preview of the downloaded price data'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.3：下载的价格数据预览
- en: This function call is a bit more complex than the one we did with the `get`
    function. We first specified the table we want to use. Then, we provided a list
    of tickers. As the next step, we specified which columns of the table we were
    interested in. We also provided the range of dates, where `gte` stands for *greater
    than or equal to*, while `lte` is *less than or equal to*. Lastly, we also indicated
    we wanted to use pagination. The *tables* API is limited to 10,000 rows per call.
    However, by using `paginate=True` in the function call we extend the limit to
    1,000,000 rows.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个函数调用比我们之前使用 `get` 函数时要复杂一些。我们首先指定了要使用的表格。然后，我们提供了一个股票代码的列表。接下来，我们指定了我们感兴趣的表格列。我们还提供了日期范围，其中
    `gte` 代表 *大于或等于*，而 `lte` 代表 *小于或等于*。最后，我们还指明了希望使用分页。*tables* API 每次调用的行数限制为 10,000
    行。然而，通过在函数调用中使用 `paginate=True`，我们将该限制扩展到 1,000,000 行。
- en: 'Pivot the data from long format to wide:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据从长格式透视到宽格式：
- en: '[PRE10]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Running the code generates the following preview of the DataFrame:'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行代码会生成以下 DataFrame 预览：
- en: '![](../Images/B18112_01_04.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_04.png)'
- en: 'Figure 1.4: Preview of the pivoted DataFrame'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4：透视后的 DataFrame 预览
- en: The output of the `get_tables` function is in the long format. However, to make
    our analyses easier, we might be interested in the wide format. To reshape the
    data, we first set the `date` column as an index and then used the `pivot` method
    of a `pd.DataFrame`.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_tables` 函数的输出是长格式。然而，为了使我们的分析更简便，我们可能更感兴趣的是宽格式。为了重塑数据，我们首先将 `date` 列设置为索引，然后使用
    `pd.DataFrame` 的 `pivot` 方法。'
- en: Please bear in mind that this is not the only way to do so, and `pandas` contains
    at least a few helpful methods/functions that can be used for reshaping the data
    from long to wide and vice versa.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这不是唯一的做法，`pandas` 至少包含一些有用的方法/函数，可以用来将数据从长格式重塑为宽格式，反之亦然。
- en: See also
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[https://docs.data.nasdaq.com/docs/python](https://docs.data.nasdaq.com/docs/python)—the
    documentation of the `nasdaqdatalink` library for Python.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.data.nasdaq.com/docs/python](https://docs.data.nasdaq.com/docs/python)——Python的`nasdaqdatalink`库的文档。'
- en: '[https://data.nasdaq.com/publishers/zacks](https://data.nasdaq.com/publishers/zacks)—Zacks
    Investment Research is a provider of various financial data that might be relevant
    for your projects. Please bear in mind that the data is not free (you can always
    get a preview of the data before purchasing access).'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://data.nasdaq.com/publishers/zacks](https://data.nasdaq.com/publishers/zacks)——Zacks投资研究是一个提供各种可能与您的项目相关的金融数据的供应商。请记住，这些数据不是免费的（你总是可以在购买访问权限之前查看数据的预览）。'
- en: '[https://data.nasdaq.com/publishers](https://data.nasdaq.com/publishers)—a
    list of all the available data providers.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://data.nasdaq.com/publishers](https://data.nasdaq.com/publishers)——所有可用数据提供商的列表。'
- en: Getting data from Intrinio
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从Intrinio获取数据
- en: 'Another interesting source of financial data is Intrinio, which offers access
    to its free (with limits) database. The following list presents just a few of
    the interesting data points that we can download using Intrinio:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的金融数据来源是Intrinio，它提供对其免费（有限制）数据库的访问。以下列表仅展示了我们可以通过Intrinio下载的一些有趣的数据点：
- en: Intraday historical data
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日内历史数据
- en: Real-time stock/option prices
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时股票/期权价格
- en: Financial statement data and fundamentals
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 财务报表数据和基本面
- en: Company news
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公司新闻
- en: Earnings-related information
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与收益相关的信息
- en: IPOs
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IPO（首次公开募股）
- en: Economic data such as the Gross Domestic Product (GDP), unemployment rate, federal
    funds rate, etc.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经济数据，如国内生产总值（GDP）、失业率、联邦基金利率等。
- en: 30+ technical indicators
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 30+技术指标
- en: Most of the data is free of charge, with some limits on the frequency of calling
    the APIs. Only the real-time price data of US stocks and ETFs requires a different
    kind of subscription.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分数据是免费的，但对API调用频率有一定限制。仅美国股票和ETF的实时价格数据需要另一种订阅。
- en: In this recipe, we follow the preceding example of downloading Apple’s stock
    prices for the years 2011 to 2021\. That is because the data returned by the API
    is not simply a `pandas` DataFrame and requires some interesting preprocessing.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们遵循了前面的例子，下载了2011到2021年的苹果股票价格。这是因为API返回的数据不仅仅是一个`pandas`数据框，且需要进行一些有趣的预处理。
- en: Getting ready
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before downloading the data, we need to register at [https://intrinio.com](https://intrinio.com)
    to obtain the API key.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在下载数据之前，我们需要在[https://intrinio.com](https://intrinio.com)注册以获取API密钥。
- en: Please see the following link ([https://docs.intrinio.com/developer-sandbox](https://docs.intrinio.com/developer-sandbox))
    to understand what information is included in the sandbox API key (the free one).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见以下链接([https://docs.intrinio.com/developer-sandbox](https://docs.intrinio.com/developer-sandbox))以了解沙盒API密钥（免费版）包含的信息。
- en: How to do it…
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Execute the following steps to download data from Intrinio:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤从Intrinio下载数据：
- en: 'Import the libraries:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE11]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Authenticate using your personal API key, and select the API:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你的个人API密钥进行身份验证，并选择API：
- en: '[PRE12]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You need to replace `YOUR_KEY_HERE` with your own API key.
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你需要将`YOUR_KEY_HERE`替换为你自己的API密钥。
- en: 'Request the data:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请求数据：
- en: '[PRE13]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Convert the results into a DataFrame:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将结果转换为数据框：
- en: '[PRE14]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Inspect the data:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查数据：
- en: '[PRE15]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The output looks as follows:'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![](../Images/B18112_01_05.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_05.png)'
- en: 'Figure 1.5: Preview of the downloaded price information'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5：下载的价格信息预览
- en: The resulting DataFrame contains the OHLC prices and volume, as well as their
    adjusted counterparts. However, that is not all, and we had to cut out some additional
    columns to make the table fit the page. The DataFrame also contains information,
    such as split ratio, dividend, change in value, percentage change, and the 52-week
    rolling high and low values.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 结果数据框包含OHLC价格和交易量，以及它们的调整值。不过，这还不是全部，我们不得不删除一些额外的列，以便让表格适合页面。数据框还包含信息，如拆分比例、股息、价值变化、百分比变化，以及52周滚动最高和最低值。
- en: How it works…
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何运作……
- en: The first step after importing the required libraries was to authenticate using
    the API key. Then, we selected the API we wanted to use for the recipe—in the
    case of stock prices, it was the `SecurityApi`.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 导入所需的库后，第一步是使用API密钥进行身份验证。然后，我们选择了要在本食谱中使用的API——在股票价格的情况下，它是`SecurityApi`。
- en: 'To download the data, we used the `get_security_stock_prices` method of the
    `SecurityApi` class. The parameters we can specify are as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了下载数据，我们使用了`SecurityApi`类的`get_security_stock_prices`方法。我们可以指定的参数如下：
- en: '`identifier`—stock ticker or another acceptable identifier'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`identifier`—股票代码或其他可接受的标识符'
- en: '`start_date`/`end_date`—these are self-explanatory'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`start_date`/`end_date`—这些是不言自明的'
- en: '`frequency`—which data frequency is of interest to us (available choices: daily,
    weekly, monthly, quarterly, or yearly)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`frequency`—我们关注的数据频率（可选项：日频、周频、月频、季频或年频）'
- en: '`page_size`—defines the number of observations to return on one page; we set
    it to a high number to collect all the data we need in one request with no need
    for the `next_page` token'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`page_size`—定义每页返回的观察数据数量；我们将其设置为一个较大的数字，以便在一次请求中收集所有所需的数据，无需使用`next_page`令牌'
- en: The API returns a JSON-like object. We accessed the dictionary form of the response,
    which we then transformed into a DataFrame. We also set the date as an index using
    the `set_index` method of a `pandas` DataFrame.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: API返回一个类似JSON的对象。我们访问了响应的字典形式，然后将其转换为DataFrame。我们还使用`pandas` DataFrame的`set_index`方法将日期设为索引。
- en: There’s more...
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: In this section, we show some more interesting features of Intrinio.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们展示了Intrinio的一些更有趣的功能。
- en: 'Not all information is included in the free tier. For a more thorough overview
    of what data we can download for free, please refer to the following documentation
    page: [https://docs.intrinio.com/developer-sandbox](https://docs.intrinio.com/developer-sandbox).'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 免费层级并不包括所有信息。有关我们可以免费下载哪些数据的更详细概述，请参阅以下文档页面：[https://docs.intrinio.com/developer-sandbox](https://docs.intrinio.com/developer-sandbox)。
- en: Get Coca-Cola’s real-time stock price
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取可口可乐的实时股价
- en: 'You can use the previously defined `security_api` to get the real-time stock
    prices:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用之前定义的`security_api`来获取实时股价：
- en: '[PRE16]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The output of the snippet is the following JSON:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段的输出是以下JSON：
- en: '[PRE17]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Download news articles related to Coca-Cola
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下载与可口可乐相关的新闻文章
- en: 'One of the potential ways to generate trading signals is to aggregate the market’s
    sentiment on the given company. We could do it, for example, by analyzing news
    articles or tweets. If the sentiment is positive, we can go long, and vice versa.
    Below, we show how to download news articles about Coca-Cola:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 生成交易信号的一个潜在方式是聚合市场对某个公司的情绪。我们可以通过分析新闻文章或推文来做到这一点。如果情绪是积极的，我们可以做多，反之亦然。以下，我们展示了如何下载关于可口可乐的新闻文章：
- en: '[PRE18]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'This code returns the following DataFrame:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码返回以下DataFrame：
- en: '![](../Images/B18112_01_06.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_06.png)'
- en: 'Figure 1.6: Preview of the news about the Coca-Cola company'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6：可口可乐公司相关新闻的预览
- en: Search for companies connected to the search phrase
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找与搜索短语相关的公司
- en: 'Running the following snippet returns a list of companies that Intrinio’s Thea
    AI recognized based on the provided query string:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下代码片段会返回一份公司列表，这些公司是Intrinio的Thea AI根据提供的查询字符串识别的：
- en: '[PRE19]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: As we can see, there are quite a few companies that also contain the phrase
    “intel” in their names, other than the obvious search result.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，除了明显的搜索结果外，还有相当多的公司在其名称中也包含了“intel”这一词。
- en: '![](../Images/B18112_01_07.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_07.png)'
- en: 'Figure 1.7: Preview of the companies connected to the phrase “intel”'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7：“intel”这一词相关公司的预览
- en: Get Coca-Cola’s intraday stock prices
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取可口可乐的日内股价
- en: 'We can also retrieve intraday prices using the following snippet:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用以下代码片段来获取日内价格：
- en: '[PRE20]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Which returns the following DataFrame containing intraday price data.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回一个包含日内价格数据的DataFrame。
- en: '![](../Images/B18112_01_08.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_08.png)'
- en: 'Figure 1.8: Preview of the downloaded intraday prices'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8：下载的日内价格预览
- en: Get Coca-Cola’s latest earnings record
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取可口可乐最新的财报
- en: 'Another interesting usage of the `security_api` is to recover the latest earnings
    records. We can do this using the following snippet:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`security_api`的另一个有趣用途是获取最新的财报记录。我们可以使用以下代码片段来实现：'
- en: '[PRE21]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The output of the API call contains quite a lot of useful information. For example,
    we can see what time of day the earnings call happened. This information could
    potentially be used for implementing trading strategies that act when the market
    opens.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: API调用的输出包含了大量有用的信息。例如，我们可以看到财报电话会议发生的具体时间。这些信息可能用于实施在市场开盘时执行的交易策略。
- en: '![](../Images/B18112_01_09.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_09.png)'
- en: 'Figure 1.9: Coca-Cola’s latest earnings record'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9：可口可乐最新的财报
- en: See also
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: '[https://docs.intrinio.com/documentation/api_v2/getting_started](https://docs.intrinio.com/documentation/api_v2/getting_started)—the
    starting point for exploring the API'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.intrinio.com/documentation/api_v2/getting_started](https://docs.intrinio.com/documentation/api_v2/getting_started)—探索API的起点'
- en: '[https://docs.intrinio.com/documentation/api_v2/limits](https://docs.intrinio.com/documentation/api_v2/limits)—an
    overview of the querying limits'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.intrinio.com/documentation/api_v2/limits](https://docs.intrinio.com/documentation/api_v2/limits)—查询限制的概述'
- en: '[https://docs.intrinio.com/developer-sandbox](https://docs.intrinio.com/developer-sandbox)—an
    overview of what is included in the free sandbox environment'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.intrinio.com/developer-sandbox](https://docs.intrinio.com/developer-sandbox)—免费沙盒环境中包含内容的概述'
- en: '[https://docs.intrinio.com/documentation/python](https://docs.intrinio.com/documentation/python)—thorough
    documentation of the Python SDK'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.intrinio.com/documentation/python](https://docs.intrinio.com/documentation/python)—Python
    SDK 的详细文档'
- en: Getting data from Alpha Vantage
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Alpha Vantage 获取数据
- en: 'Alpha Vantage is another popular data vendor providing high-quality financial
    data. Using their API, we can download the following:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: Alpha Vantage 是另一家流行的数据供应商，提供高质量的金融数据。通过其 API，我们可以下载以下内容：
- en: Stock prices, including intraday and real-time (paid access)
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 股票价格，包括日内价格和实时价格（需付费访问）
- en: 'Fundamentals: earnings, income statement, cash flow, earnings calendar, IPO
    calendar'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本面数据：收益、损益表、现金流、财报日历、IPO 日历
- en: Forex and cryptocurrency exchange rates
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外汇和加密货币汇率
- en: Economic indicators such as real GDP, Federal Funds Rate, Consumer Price Index,
    and consumer sentiment
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经济指标，如实际 GDP、联邦基金利率、消费者价格指数和消费者信心指数
- en: 50+ technical indicators
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 50+ 种技术指标
- en: In this recipe, we show how to download a selection of crypto-related data.
    We start with historical daily Bitcoin prices, and then show how to query the
    real-time crypto exchange rate.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们展示了如何下载与加密货币相关的部分数据。我们从历史每日比特币价格开始，然后展示如何查询实时加密货币汇率。
- en: Getting ready
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before downloading the data, we need to register at [https://www.alphavantage.co/support/#api-key](https://www.alphavantage.co/support/#api-key)
    to obtain the API key. Access to the API and all the endpoints is free of charge
    (excluding the real-time stock prices) within some bounds (5 API requests per
    minute; 500 API requests per day).
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在下载数据之前，我们需要在 [https://www.alphavantage.co/support/#api-key](https://www.alphavantage.co/support/#api-key)
    注册并获取 API 密钥。在某些限制范围内（每分钟 5 次 API 请求；每天 500 次 API 请求），API 及所有端点是免费的（不包括实时股票价格）。
- en: How to do it…
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Execute the following steps to download data from Alpha Vantage:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以从 Alpha Vantage 下载数据：
- en: 'Import the libraries:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE22]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Authenticate using your personal API key and select the API:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的个人 API 密钥进行身份验证并选择 API：
- en: '[PRE23]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Download the daily prices of Bitcoin, expressed in EUR:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载以欧元表示的比特币每日价格：
- en: '[PRE24]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The `meta_data` object contains some useful information about the details of
    the query. You can see it below:'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`meta_data` 对象包含一些关于查询详细信息的有用信息。您可以在下面看到：'
- en: '[PRE25]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The `data` DataFrame contains all the requested information. We obtained 1,000
    daily OHLC prices, the volume, and the market capitalization. What is also noteworthy
    is that all the OHLC prices are provided in two currencies: EUR (as we requested)
    and USD (the default one).'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`data` DataFrame 包含所有请求的信息。我们获取了 1,000 个每日 OHLC（开盘、最高、最低、收盘）价格、交易量和市值。值得注意的是，所有的
    OHLC 价格都以两种货币提供：欧元（EUR，按照我们的请求）和美元（USD，默认货币）。'
- en: '![](../Images/B18112_01_10.png)'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_10.png)'
- en: 'Figure 1.10: Preview of the downloaded prices, volume, and market cap'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.10：下载的价格、交易量和市值预览
- en: 'Download the real-time exchange rate:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载实时汇率：
- en: '[PRE26]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Running the command returns the following DataFrame with the current exchange
    rate:'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行该命令将返回当前汇率的 DataFrame：
- en: '![](../Images/B18112_01_11.png)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_11.png)'
- en: 'Figure 1.11: BTC-USD exchange rate'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.11：BTC-USD 汇率
- en: How it works…
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: After importing the `alpha_vantage` library, we had to authenticate using the
    personal API key. We did so while instantiating an object of the `CryptoCurrencies`
    class. At the same time, we specified that we would like to obtain output in the
    form of a `pandas` DataFrame. The other possibilities are JSON and CSV.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在导入`alpha_vantage`库后，我们需要使用个人 API 密钥进行身份验证。我们在实例化`CryptoCurrencies`类对象时完成了这一操作。同时，我们指定了希望以`pandas`
    DataFrame 形式获取输出。其他可能的格式包括 JSON 和 CSV。
- en: In *Step 3*, we downloaded the daily BTC prices using the `get_digital_currency_daily`
    method. Additionally, we specified that we wanted to get the prices in EUR. By
    default, the method will return the requested EUR prices, as well as their USD
    equivalents.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤 3*中，我们使用`get_digital_currency_daily`方法下载了每日比特币价格。此外，我们指定了希望获取欧元（EUR）价格。默认情况下，该方法将返回请求的欧元价格以及其美元（USD）等价价格。
- en: Lastly, we downloaded the real-time BTC/USD exchange rate using the `get_digital_currency_exchange_rate`
    method.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用`get_digital_currency_exchange_rate`方法下载了实时的BTC/USD汇率。
- en: There’s more...
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: So far, we have used the `alpha_vantage` library as a middleman to download
    information from Alpha Vantage. However, the functionalities of the data vendor
    evolve faster than the third-party library and it might be interesting to learn
    an alternative way of accessing their API.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们使用了`alpha_vantage`库作为中介来从Alpha Vantage下载信息。然而，数据提供商的功能发展速度快于第三方库，学习访问其API的其他方式可能会很有趣。
- en: 'Import the libraries:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入所需的库：
- en: '[PRE27]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Download Bitcoin’s intraday data:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载比特币的日内数据：
- en: '[PRE28]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Running the snippet above returns the following preview of the downloaded DataFrame:'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行上述代码片段将返回以下下载的DataFrame预览：
- en: '![](../Images/B18112_01_12.png)'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_12.png)'
- en: 'Figure 1.12: Preview of the DataFrame containing Bitcoin’s intraday prices'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.12：显示包含比特币日内价格的DataFrame预览
- en: We first defined the base URL used for requesting information via Alpha Vantage’s
    API. Then, we defined a dictionary containing the additional parameters of the
    request, including the personal API key. In our function call, we specified that
    we want to download intraday ETH prices expressed in USD and sampled every 30
    minutes. We also indicated we want a full output (by specifying the `outputsize`
    parameter). The other option is `compact` output, which downloads the 100 most
    recent observations.
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们首先定义了用于请求信息的基础URL。然后，定义了一个字典，包含请求的附加参数，包括个人API密钥。在我们的函数调用中，我们指定了要下载以美元表示的日内ETH价格，并且每30分钟采样一次。我们还指明了需要完整的输出（通过指定`outputsize`参数）。另一个选项是`compact`输出，它会下载最新的100个观察值。
- en: Having prepared the request’s parameters, we used the `get` function from the
    `requests` library. We provide the base URL and the `parameters` dictionary as
    arguments. After obtaining the response to the request, we can access it in JSON
    format using the `json` method. Lastly, we convert the element of interest into
    a `pandas` DataFrame.
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在准备好请求的参数后，我们使用了`requests`库中的`get`函数。我们提供了基础URL和`parameters`字典作为参数。获取请求响应后，我们可以通过`json`方法以JSON格式访问它。最后，我们将感兴趣的元素转换为`pandas`
    DataFrame。
- en: Alpha Vantage’s documentation shows a slightly different approach to downloading
    this data, that is, by creating a long URL with all the parameters specified there.
    Naturally, that is also a possibility, however, the option presented above is
    a bit neater. To see the very same request URL as presented by the documentation,
    you can run `r.request.url`.
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Alpha Vantage的文档展示了另一种稍有不同的下载数据方法，即通过创建一个包含所有参数的长URL。自然，这也是一种可能性，但上面介绍的选项稍显简洁。要查看文档中展示的完全相同的请求URL，您可以运行`r.request.url`。
- en: 'Download the upcoming earnings announcements within the next three months:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载未来三个月内的收益公告：
- en: '[PRE29]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Running the snippet returns the following output:'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行代码片段将返回以下输出：
- en: '![](../Images/B18112_01_13.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_13.png)'
- en: 'Figure 1.13: Preview of a DataFrame containing the downloaded earnings information'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.13：显示包含下载的收益信息的DataFrame预览
- en: While getting the response to our API request is very similar to the previous
    example, handling the output is much different.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 获取API请求的响应与之前的示例非常相似，但处理输出的方法却大不相同。
- en: The output of `r.content` is a `bytes` object containing the output of the query
    as text. To mimic a normal file in-memory, we can use the `BytesIO` class from
    the `io` module. Then, we can normally load that mimicked file using the `pd.read_csv`
    function.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '`r.content`的输出是一个`bytes`对象，包含查询结果的文本。为了模拟一个内存中的普通文件，我们可以使用`io`模块中的`BytesIO`类。然后，我们可以使用`pd.read_csv`函数正常加载这个模拟的文件。'
- en: In the accompanying notebook, we present a few more functionalities of Alpha
    Vantage, such as getting the quarterly earnings data, downloading the calendar
    of the upcoming IPOs, and using `alpha_vantage`'s `TimeSeries` module to download
    stock price data.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在随附的笔记本中，我们展示了Alpha Vantage的更多功能，例如获取季度收益数据、下载即将上市的IPO日历，并使用`alpha_vantage`的`TimeSeries`模块下载股票价格数据。
- en: See also
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: '[https://www.alphavantage.co/](https://www.alphavantage.co/)—Alpha Vantage
    homepage'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.alphavantage.co/](https://www.alphavantage.co/)—Alpha Vantage
    主页'
- en: '[https://www.alphavantage.co/documentation/](https://www.alphavantage.co/documentation/)—the
    API documentation'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.alphavantage.co/documentation/](https://www.alphavantage.co/documentation/)—API文档'
- en: '[https://github.com/RomelTorres/alpha_vantage](https://github.com/RomelTorres/alpha_vantage)—the
    GitHub repo of the third-party library used for accessing data from Alpha Vantage'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/RomelTorres/alpha_vantage](https://github.com/RomelTorres/alpha_vantage)—用于访问
    Alpha Vantage 数据的第三方库的 GitHub 仓库'
- en: Getting data from CoinGecko
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 CoinGecko 获取数据
- en: The last data source we will cover is dedicated purely to cryptocurrencies.
    CoinGecko is a popular data vendor and crypto-tracking website, on which you can
    find real-time exchange rates, historical data, information about exchanges, upcoming
    events, trading volumes, and much more.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将介绍的最后一个数据源完全专注于加密货币。CoinGecko 是一个流行的数据供应商和加密货币跟踪网站，您可以在上面找到实时汇率、历史数据、交易所信息、即将举行的事件、交易量等更多内容。
- en: 'We can list a few of the advantages of CoinGecko:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以列举出 CoinGecko 的一些优点：
- en: Completely free, and no need to register for an API key
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全免费，无需注册 API 密钥
- en: Aside from prices, it also provides updates and news about crypto
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除了价格，它还提供有关加密货币的更新和新闻
- en: It covers many coins, not only the most popular ones
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它覆盖了许多币种，不仅仅是最流行的币种
- en: In this recipe, we download Bitcoin’s OHLC from the last 14 days.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们下载了比特币过去 14 天的 OHLC 数据。
- en: How to do it…
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做……
- en: 'Execute the following steps to download data from CoinGecko:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤从 CoinGecko 下载数据：
- en: 'Import the libraries:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库：
- en: '[PRE30]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Instantiate the CoinGecko API:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例化 CoinGecko API：
- en: '[PRE31]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Get Bitcoin’s OHLC prices from the last 14 days:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取比特币过去 14 天的 OHLC 价格：
- en: '[PRE32]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Running the snippet above returns the following DataFrame:'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行上面的代码片段将返回以下 DataFrame：
- en: '![](../Images/B18112_01_14.png)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_14.png)'
- en: 'Figure 1.14: Preview of the DataFrame containing the requested Bitcoin prices'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.14：包含请求的比特币价格的 DataFrame 预览
- en: In the preceding table, we can see that we have obtained the requested 14 days
    of data, sampled every 4 hours.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的表格中，我们可以看到我们已获得请求的 14 天数据，数据采样间隔为 4 小时。
- en: How it works…
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: 'After importing the libraries, we instantiated the `CoinGeckoAPI` object. Then,
    using its `get_coin_ohlc_by_id` method we downloaded the last 14 days’ worth of
    BTC/USD exchange rates. It is worth mentioning there are some limitations of the
    API:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在导入库之后，我们实例化了 `CoinGeckoAPI` 对象。然后，使用它的 `get_coin_ohlc_by_id` 方法，我们下载了过去 14
    天的 BTC/USD 汇率数据。值得一提的是，API 有一些限制：
- en: 'We can only download data for a predefined number of days. We can select one
    of the following options: `1`/`7`/`14`/`30`/`90`/`180`/`365`/`max`.'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们只能下载预定义天数的数据。我们可以选择以下选项之一：`1`/`7`/`14`/`30`/`90`/`180`/`365`/`max`。
- en: The OHLC candles are sampled with a varying frequency depending on the requested
    horizon. They are sampled every 30 minutes for requests of 1 or 2 days. Between
    3 and 30 days they are sampled every 4 hours. Above 30 days, they are sampled
    every 4 days.
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OHLC 蜡烛图的采样频率根据请求的时间范围而变化。对于 1 天或 2 天的请求，它们每 30 分钟采样一次；对于 3 到 30 天的请求，每 4 小时采样一次；超过
    30 天的数据，则每 4 天采样一次。
- en: The output of the `get_coin_ohlc_by_id` is a list of lists, which we can convert
    into a `pandas` DataFrame. We had to manually create the column names, as they
    were not provided by the API.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_coin_ohlc_by_id` 的输出是一个列表的列表，我们可以将其转换为 `pandas` DataFrame。我们必须手动创建列名，因为
    API 并未提供这些信息。'
- en: There’s more...
  id: totrans-267
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容……
- en: We have seen that getting the OHLC prices can be a bit more difficult using
    the CoinGecko API as compared to the other vendors. However, CoinGecko has additional
    interesting information we can download using its API. In this section, we show
    a few possibilities.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，使用 CoinGecko API 获取 OHLC 价格相比其他供应商可能稍微复杂一些。然而，CoinGecko 还有其他有趣的信息，我们可以通过其
    API 下载。在本节中，我们展示了一些可能性。
- en: Get the top 7 trending coins
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取前 7 个热门币种
- en: 'We can use CoinGecko to acquire the top 7 trending coins—the ranking is based
    on the number of searches on CoinGecko within the last 24 hours. While downloading
    this information, we also get the coins’ symbols, their market capitalization
    ranking, and the latest price in BTC:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 CoinGecko 获取前 7 个热门币种——排名是基于过去 24 小时内在 CoinGecko 上的搜索次数。在下载这些信息时，我们还会获取币种的符号、市场资本排名以及最新的
    BTC 价格：
- en: '[PRE33]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Using the snippet above, we obtain the following DataFrame:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上面的代码片段，我们获得了以下 DataFrame：
- en: '![](../Images/B18112_01_15.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B18112_01_15.png)'
- en: 'Figure 1.15: Preview of the DataFrame containing the 7 trending coins and some
    information about them'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.15：包含 7 个热门币种及其相关信息的 DataFrame 预览
- en: Get Bitcoin’s current price in USD
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取比特币当前的美元价格
- en: 'We can also extract current crypto prices in various currencies:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以提取当前加密货币在各种货币中的价格：
- en: '[PRE34]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Running the snippet above returns Bitcoin’s real-time price:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 运行上述代码片段会返回比特币的实时价格：
- en: '[PRE35]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: In the accompanying notebook, we present a few more functionalities of `pycoingecko`,
    such as getting the crypto price in different currencies than USD, downloading
    the entire list of coins supported on CoinGecko (over 9,000 coins), getting each
    coin’s detailed market data (market capitalization, 24h volume, the all-time high,
    and so on), and loading the list of the most popular exchanges.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 在随附的笔记本中，我们展示了`pycoingecko`的一些其他功能，例如以除美元外的不同货币获取加密货币价格、下载CoinGecko上支持的所有加密货币列表（超过9,000种货币）、获取每种加密货币的详细市场数据（市值、24小时交易量、历史最高价等），以及加载最受欢迎的交易所列表。
- en: See also
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'You can find the documentation of the `pycoingecko` library here: [https://github.com/man-c/pycoingecko](https://github.com/man-c/pycoingecko).'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里找到`pycoingecko`库的文档：[https://github.com/man-c/pycoingecko](https://github.com/man-c/pycoingecko)。
- en: Summary
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we have covered a few of the most popular sources of financial
    data. However, this is just the tip of the iceberg. Below, you can find a list
    of other interesting data sources that might suit your needs even better.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了一些最受欢迎的金融数据来源。但这仅仅是冰山一角。下面，你可以找到其他一些可能更适合你需求的有趣数据源。
- en: 'Additional data sources are:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 其他数据源包括：
- en: IEX Cloud ([https://iexcloud.io/](https://iexcloud.io/))—a platform providing
    a vast trove of different financial data. A notable feature that is unique to
    the platform is a daily and minutely sentiment score based on the activity on
    Stocktwits—an online community for investors and traders. However, that API is
    only available in the paid plan. You can access the IEX Cloud data using `pyex`,
    the official Python library.
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IEX Cloud ([https://iexcloud.io/](https://iexcloud.io/))—一个提供各种金融数据的平台。该平台的一个显著特点是基于Stocktwits上的活动（Stocktwits是一个投资者和交易者的在线社区）提供的每日和每分钟情绪评分。然而，该API仅在付费计划中可用。你可以使用官方Python库`pyex`来访问IEX
    Cloud的数据。
- en: Tiingo ([https://www.tiingo.com/](https://www.tiingo.com/)) and the `tiingo`
    library.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tiingo ([https://www.tiingo.com/](https://www.tiingo.com/))和`tiingo`库。
- en: CryptoCompare ([https://www.cryptocompare.com/](https://www.cryptocompare.com/))—the
    platform offers a wide range of crypto-related data via their API. What stands
    out about this data vendor is that they provide order book data.
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CryptoCompare ([https://www.cryptocompare.com/](https://www.cryptocompare.com/))—该平台通过API提供广泛的与加密货币相关的数据。这个数据供应商的独特之处在于他们提供了订单簿数据。
- en: Twelve Data ([https://twelvedata.com/](https://twelvedata.com/)).
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Twelve Data ([https://twelvedata.com/](https://twelvedata.com/))。
- en: polygon.io ([https://polygon.io/](https://polygon.io/))—a trusted data vendor
    for real-time and historical data (stocks, forex, and crypto). Trusted by companies
    such as Google, Robinhood, and Revolut.
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: polygon.io ([https://polygon.io/](https://polygon.io/))—一个可靠的数据供应商，提供实时和历史数据（股票、外汇和加密货币）。被Google、Robinhood和Revolut等公司信任。
- en: Shrimpy ([https://www.shrimpy.io/](https://www.shrimpy.io/)) and `shrimpy-python`—the
    official Python library for the Shrimpy Developer API.
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shrimpy ([https://www.shrimpy.io/](https://www.shrimpy.io/))和`shrimpy-python`—Shrimpy开发者API的官方Python库。
- en: In the next chapter, we will learn how to preprocess the downloaded data for
    further analysis.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将学习如何对下载的数据进行预处理，以便进一步分析。
- en: Join us on Discord!
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的Discord社区！
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the author, and learn about new releases – follow the QR code
    below:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 要加入本书的Discord社区——在这里你可以分享反馈、向作者提问并了解新版本——请扫描下面的二维码：
- en: '![](../Images/QR_Code203602028422735375.png)'
  id: totrans-295
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/QR_Code203602028422735375.png)'
- en: '[https://packt.link/ips2H](https://packt.link/ips2H)'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/ips2H](https://packt.link/ips2H)'
