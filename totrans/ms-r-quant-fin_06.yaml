- en: Chapter 6. Interest Rate Derivatives and Models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Interest rate derivatives are financial derivative products whose payoff is
    dependent on the interest rates.
  prefs: []
  type: TYPE_NORMAL
- en: There is a wide range of such products; the basic types include interest rate
    swaps, forward rate agreements, callable and puttable bonds, bond options, caps
    and floors, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will start with the Black model (also referred to as the
    Black-76 model), which is a generalized version of the Black-Scholes model, and
    is often used to price interest rate derivatives. Then, we will show how to apply
    the Black model to price an interest rate cap.
  prefs: []
  type: TYPE_NORMAL
- en: A shortcoming of the Black model is that it assumes lognormal distribution for
    some underlying asset (for example, bond price or interest rate), and it neglects
    how interest rate changes across time. Consequently, Black's formula cannot be
    used for all kinds of interest rate derivatives. Sometimes, it is necessary to
    model the term structure of interest rate models. There are plenty of interest
    rate models that try to capture the main features of this term structure. In the
    second part of this chapter, we discuss two basic and frequently used interest
    rate models, namely the Vasicek and the Cox-Ingersoll-Ross models. As in the previous
    chapter, we will assume that you are familiar with the Black-Scholes model and
    the basics of risk-neutral valuation.
  prefs: []
  type: TYPE_NORMAL
- en: The Black model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We started this chapter by defining interest rate derivatives as assets with
    interest-rate-dependent cash flows. It is worth noting that the value of financial
    products is almost always dependent on some interest rates because of the need
    to discount the future cash flows. However, in the case of interest rate derivatives,
    not only the discounted value but the payoff itself depends on the interest rates.
    This is the main reason why interest rate derivatives are more complicated to
    price than stock or FX derivatives (*Hull, 2009* discusses these difficulties
    in detail).
  prefs: []
  type: TYPE_NORMAL
- en: 'The Black model (*Black, 1976*) was developed to price options on futures contracts.
    Futures options grant the holder the right to enter into a futures contract at
    a predetermined futures price (strike price or exercise price, *X*) on a specified
    date (maturity, *T*). In this model, we keep the assumptions of the Black-Scholes
    model, except that the underlying is the futures price instead of the spot price.
    Hence, we assume that the futures price (F) follows a geometric Brownian motion:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Black model](img/2078OT_06_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'It is easy to see that futures contracts might be handled as products with
    a continuous growth rate that is equal to the risk-free interest rate (*r*). Thus,
    it is not surprising that Black''s formula for futures options is exactly the
    same as the Black-Scholes formula for currency options (discussed in the previous
    chapter), with *q* equal to *r* (as if the domestic and foreign interest rates
    were the same). So, Black''s formula for a European futures call option is as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Black model](img/2078OT_06_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, ![The Black model](img/2078OT_06_03.jpg) and ![The Black model](img/2078OT_06_04.jpg).
  prefs: []
  type: TYPE_NORMAL
- en: 'The price of a similar put option is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Black model](img/2078OT_06_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: It is not a surprise that the `GBSOption` function (or the `BlackScholesOption`
    function) is useful for the Black model too. It is time to have a closer look
    at how it actually works.
  prefs: []
  type: TYPE_NORMAL
- en: 'When a function''s name is typed in the R console without parenthesis, the
    function will not be called, but the source code is returned (except for byte-compiled
    code). This is not recommended for beginners, but it can be extremely useful for
    programmers with some experience because these details are usually not included
    in package documentation. Let''s try it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Do not worry if this is not totally clear; we are only interested in the computation
    of the price of the call option. First, `d[1]` is calculated (we will check the
    formula in a minute). The BS formula has different forms (for stock options, currency
    options, and stock options with dividend), but the following equation always holds:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Black model](img/2078OT_06_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In the function, `d[2]` is calculated based on this equation. The final result
    has the form ![The Black model](img/2078OT_06_07.jpg) , where *a* and *b* are
    dependent on the model but are always the discounted value of the price of the
    underlying and the strike price.
  prefs: []
  type: TYPE_NORMAL
- en: Now, we can see the role of the `b` parameter in the calculation. As we mentioned
    in the previous chapter, this is how we can decide which model we want to use.
    If we carefully check the formulas, we can conclude that by setting `b = r`, we
    get the Black-Scholes stock option model; with `b = r-q`, we get Merton's stock
    option model with continuous dividend yield `q` (which is the same as the currency
    option model, as we saw in the previous chapter); and with `b = 0`, we get Black's
    futures option model.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's see an example of the Black model.
  prefs: []
  type: TYPE_NORMAL
- en: 'We need an option for an asset with 100 strike price in 5 years. The futures
    price is 120\. Volatility of the asset is assumed to be 20%, and the risk-free
    rate is 5%. Now, simply call the BS option pricing formula with `S = F` and `b
    = 0`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'We get the results in the usual form:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The price of the option is about 24 USD, and we can also check from the output
    that `b = 0`, from which we must know that the Black model for futures options
    was used (or we made a serious mistake).
  prefs: []
  type: TYPE_NORMAL
- en: Although it was originally developed for commodity products, the Black model
    turned out to be a useful tool for pricing interest rate derivatives such as options
    on bonds or caps and floors. In the next section, we show how to use this model
    to price an interest rate cap.
  prefs: []
  type: TYPE_NORMAL
- en: Pricing a cap with Black's model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Interest rate caps are interest rate derivatives where the holder receives positive
    payments throughout a number of time periods if the interest rate exceeds a certain
    level (the strike price, *X*). Analogously, the holder of an interest rate floor
    receives positive payments in each period if the interest rate is below the strike
    price. It is obvious that caps and floors are efficient products to hedge against
    interest rate volatility. In this section, we will discuss the pricing of a cap.
    Let's assume that the underlying rate is the LIBOR, *L*.
  prefs: []
  type: TYPE_NORMAL
- en: 'As we discussed in the previous chapter, the best way to understand derivatives
    is to determine their payoff structure. The payoff of a cap (with one unit of
    notional amount) at the end of the *n*th period is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Pricing a cap with Black''s model](img/2078OT_06_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, *τ* is the time interval between two payments. This single payment is
    called a caplet, and the cap is, of course, a portfolio of sequential caplets.
    When pricing a cap, all the caplets must be valued and then their prices have
    to be summed. Furthermore, the earlier mentioned payoff shows us that pricing
    the *n*th caplet is nothing but pricing a call option with the underlying asset
    of the Libor, strike price X, and maturity *τn*.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we assume that the Libor rate at time *n-1* (*L[n-1]*) is a random variable
    that has lognormal distribution and the volatility is ![Pricing a cap with Black''s
    model](img/2078OT_06_11.jpg), then we can use Black''s formula to price the caplet:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Pricing a cap with Black''s model](img/2078OT_06_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, ![Pricing a cap with Black's model](img/2078OT_06_13.jpg) and ![Pricing
    a cap with Black's model](img/2078OT_06_14.jpg).
  prefs: []
  type: TYPE_NORMAL
- en: Here, *F[n-1]* is the forward Libor rate between *τ(n-1)* and *τn*, and *r*
    is the risk-free spot log return with maturity *τn*. Once we have the value of
    one single caplet, we can price all of them to get the price of the cap.
  prefs: []
  type: TYPE_NORMAL
- en: Let's see an example to understand this in depth. We have to pay USD LIBOR for
    6 months to a business partner between May 2014 and November 2014\. A caplet is
    an easy way to avoid the interest rate risk. Assume that we have a caplet on the
    LIBOR rate with 2.5% strike price (using the usual terminology).
  prefs: []
  type: TYPE_NORMAL
- en: This means that if the LIBOR rate is higher then 2.5%, we will receive the difference
    in cash. If, for example, the LIBOR rate turns out to be 3% in May, our payoff
    on one unit of notional amount is 0.5*max(3% -2.5%, 0).
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let''s see how to price the caplet. There is nothing new in it; we can
    simply use the Black-Scholes formula. It is clear that we need to set `S = F[n-1]`,
    `Time = 0.5`, and `b = 0`. Assuming that the LIBOR rate follows the geometric
    Brownian motion with 20% volatility, the forward rate between May 1st and November
    1st is 2.2%, and the spot rate is 2%. In this case, the price of the caplet is
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The price of the option is 0.0003269133\. We still need to multiply it with
    τ = 0.5, which makes it 0.0001634567\. If we measure everything in million USD,
    this means that the price of the caplet is about 163 USD.
  prefs: []
  type: TYPE_NORMAL
- en: 'A cap is simply a sum of caplets, but we can combine them with different parameters
    if needed. Let''s say we need a cap that pays if the LIBOR rate goes above 2.5%
    in the first 3 months, or if it is higher than 2% in the following 3 months. The
    forward LIBOR rate can also be different in the May and August period (let''s
    say it is 2.1%), and in the August and November period (let''s say it is 2.2%).
    We simply price both caplets one by one and add their prices:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'We do not include all the outputs here, only the prices:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we need to multiply both with τ = 0.25 and take the sum of their prices:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The price of this cap with a notional amount of 1 million is about 554 USD.
  prefs: []
  type: TYPE_NORMAL
- en: Pricing a floor is very similar. First, we divide the asset's cash flows into
    single payments, called floorlets. Then, we determine the value of each floorlet
    with the help of the Black model; the only difference is that floorlets are not
    call but put options. Finally, we add up the prices of the floorlets to get the
    value of the floor.
  prefs: []
  type: TYPE_NORMAL
- en: Black's model is applicable when we can assume that the future value of the
    underlying asset has lognormal distribution. Another approach to value interest
    rate derivatives is by modeling the term structure of interest rates. Here, we
    continue by presenting two basic interest rate models and their main characteristics.
  prefs: []
  type: TYPE_NORMAL
- en: The Vasicek model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Vasicek model (*Vasicek, 1977*) is a continuous, affine, one-factor stochastic
    interest rate model. In this model, the instantaneous interest rate dynamics are
    given by the following stochastic differential equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Vasicek model](img/2078OT_06_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, α, β, and σ are positive constants, *r[t]* is the interest rate, *t* is
    time, and *W[t]* denotes the standard Wiener process. In mathematics, this process
    is called the Ornstein-Uhlenbeck process.
  prefs: []
  type: TYPE_NORMAL
- en: As you may observe, the interest rate in the Vasicek model follows a mean-reverting
    process with a long-term average *β*; when *r[t] < β*, the drift term becomes
    positive, so the interest rate is expected to increase and vice versa. The speed
    of adjustment to the long-run mean is measured by *α*. The volatility term is
    constant in this model.
  prefs: []
  type: TYPE_NORMAL
- en: 'Interest rate models are implemented in R, but to understand more deeply what
    is behind the formulas, let''s write a function that directly implements the stochastic
    differential equation of the Vasicek model:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'That''s it. Now, let''s plot some trajectories to see how it looks:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot gives the output of the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Vasicek model](img/2078OT_06_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To understand the role of parameters, we plot the same trajectory (that is,
    the trajectory generated by the same random numbers) with different values of
    sigma and alpha:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is the output of the preceding code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Vasicek model](img/2078OT_06_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Trajectories have the same shape but different volatility:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is the output of the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Vasicek model](img/2078OT_06_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We can see that the higher the value of *α*, the earlier the trajectory reaches
    the long-term average.
  prefs: []
  type: TYPE_NORMAL
- en: 'It can be shown (see, for example, the original paper of Vasicek already cited)
    that the short rate in the Vasicek model is normally distributed with the following
    conditional expected value and variance:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Vasicek model](img/2078OT_06_19.jpg)![The Vasicek model](img/2078OT_06_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: It is worth observing that the expected value converges to *β* when *T* or *α*
    goes to infinity. Furthermore, the variance converges to 0 when *α* goes to infinity.
    These observations are in line with the parameters' interpretations.
  prefs: []
  type: TYPE_NORMAL
- en: 'To demonstrate how the coefficients of the equation determine the parameters
    of the distribution, let''s plot the conditional probability density function
    for different values of *α*, *β*, and *σ*, and see how it changes over time:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot is the result of the of preceding code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Vasicek model](img/2078OT_06_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We can see that the variance of the distribution increases over time. *β* affects
    only the mean of the probability distribution. It is clear that with a higher
    value of *α*, the process reaches its long-term mean sooner and has less variance,
    and with greater volatility, we get a flatter density function, that is, greater
    variance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Pricing a zero-coupon bond when the interest rate follows a Vasicek model results
    in the following formula (for a derivation of this formula, see, for example,
    *Cairns [2004]*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Vasicek model](img/2078OT_06_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, ![The Vasicek model](img/2078OT_06_23.jpg) and ![The Vasicek model](img/2078OT_06_24.jpg).
  prefs: []
  type: TYPE_NORMAL
- en: 'In the preceding formula, *P* denotes the price of the zero-coupon bond, *t*
    is the time when we price the bond, and *T* is the maturity (hence, *T-t* is the
    time to maturity). If we have the zero-coupon bond prices, we can determine the
    spot yield curve with the following simple relationship:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Vasicek model](img/2078OT_06_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Cox-Ingersoll-Ross model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Like the Vasicek model, the Cox-Ingersoll-Ross model (*Cox at al., 1985*),
    which is often cited as the CIR model, is a continuous, affine, one-factor stochastic
    interest rate model. In this model, the instantaneous interest rate dynamics are
    given by the following stochastic differential equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cox-Ingersoll-Ross model](img/2078OT_06_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *α*, *β*, and *σ* are positive constants, *r[t]* is the interest rate,
    *t* is the time, and *W[t]* denotes the standard Wiener process. It is easy to
    see that the drift component is the same as in the Vasicek model; hence, the interest
    rate follows a mean-reverting process again, *β* is the long-run average, and
    *α* is the rate of adjustment. The difference is that the volatility term is not
    constant but is proportional to the square root of the interest rate level. This
    ''small'' difference has dramatic consequences regarding the probability distribution
    of the future short rates. In the CIR model, the interest rate has non-central
    chi-squared distribution, with the following density function (*f*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cox-Ingersoll-Ross model](img/2078OT_06_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, ![The Cox-Ingersoll-Ross model](img/2078OT_06_28.jpg), ![The Cox-Ingersoll-Ross
    model](img/2078OT_06_29.jpg), and ![The Cox-Ingersoll-Ross model](img/2078OT_06_30.jpg).
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, ![The Cox-Ingersoll-Ross model](img/2078OT_06_31.jpg) denotes the probability
    density function of the chi-squared distribution with *n* degrees of freedom and
    *m* denoting the non-centrality parameter. As the expected value and the variance
    of such a random variable is *n+m* and *2(n+2m)* respectively, we have the following
    moments for the interest rate:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cox-Ingersoll-Ross model](img/2078OT_06_19.jpg)![The Cox-Ingersoll-Ross
    model](img/2078OT_06_32.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We might observe that the conditional expected value is exactly the same as
    in the Vasicek model. It is important to notice that the short rate, as a normally
    distributed variable, might become negative in the Vasicek model, but this cannot
    happen in the CIR model.
  prefs: []
  type: TYPE_NORMAL
- en: 'Like in the case of the Vasicek model, we can see how the coefficients determine
    the shape of the probability density function if we plot it with different parameter
    sets. The following code does this job by comparing the probability density functions
    under various parameter specifications:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Here, we can see the result. We come to the same conclusion as we did in the
    case of the Vasicek model, except that here, *β* changes the shape of the density
    function and not just shifts it.
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cox-Ingersoll-Ross model](img/2078OT_06_33.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Pricing a zero-coupon bond in the CIR model yields the following formula (see,
    for example, *Cairns [2004]*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Cox-Ingersoll-Ross model](img/2078OT_06_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, ![The Cox-Ingersoll-Ross model](img/2078OT_06_34.jpg), ![The Cox-Ingersoll-Ross
    model](img/2078OT_06_35.jpg), and ![The Cox-Ingersoll-Ross model](img/2078OT_06_36.jpg).
  prefs: []
  type: TYPE_NORMAL
- en: Determining the yield curve from the bond prices is exactly the same as in the
    Vasicek model.
  prefs: []
  type: TYPE_NORMAL
- en: Parameter estimation of interest rate models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When using the interest rate models for pricing or simulation purposes, it
    is important to calibrate their parameters to real data properly. Here, we present
    a possible method to estimate the parameters. This method was developed by *Chan
    et al, 1992*, and is often referred to as the CKLS method. The procedure was elaborated
    to estimate the parameters of the following interest rate model with the help
    of the econometric procedure called Generalized Method of Moments (GMM; see *Hansen,
    1982*, for more details):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Parameter estimation of interest rate models](img/2078OT_06_37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'It is easy to see that this process gives the Vasicek model when *γ*=0, and
    the CIR model when *γ* =0.5\. As the first step of the parameter estimation, we
    discretize this equation with the Euler approximation (see *Atkinson, 1989*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Parameter estimation of interest rate models](img/2078OT_06_38.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *δ[t]* is the time interval between two observations of the interest
    rate and *e[t]* is independent, standard normal random variables. The parameters
    are estimated with the following null hypothesis:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Parameter estimation of interest rate models](img/2078OT_06_39.jpg)![Parameter
    estimation of interest rate models](img/2078OT_06_40.jpg)![Parameter estimation
    of interest rate models](img/2078OT_06_41.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Let *Θ* be the vector of the parameters to be estimated, that is, ![Parameter
    estimation of interest rate models](img/2078OT_06_42.jpg).
  prefs: []
  type: TYPE_NORMAL
- en: 'We consider the following function of the parameter vector:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Parameter estimation of interest rate models](img/2078OT_06_43.jpg)'
  prefs: []
  type: TYPE_IMG
- en: It is easy to see that under the null hypothesis, ![Parameter estimation of
    interest rate models](img/2078OT_06_44.jpg)=0.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first step of GMM is that we consider the sample corresponding to ![Parameter
    estimation of interest rate models](img/2078OT_06_44.jpg), which is ![Parameter
    estimation of interest rate models](img/2078OT_06_45.jpg):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Parameter estimation of interest rate models](img/2078OT_06_46.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, *n* is the number of observations.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, GMM determines the parameters by minimizing the following quadratic
    form:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Parameter estimation of interest rate models](img/2078OT_06_47.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Here, ![Parameter estimation of interest rate models](img/2078OT_06_48.jpg)
    is a symmetric, positive definite weight matrix.
  prefs: []
  type: TYPE_NORMAL
- en: There is a `quadprog` package in R for these kinds of problems, or we can use
    general methods for optimization with the `optim` function.
  prefs: []
  type: TYPE_NORMAL
- en: Using the SMFI5 package
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After discussing the math behind interest rate models and after hard programming,
    let's recommend the `SMFI5` package, which provides user-friendly solutions to
    model and simulate interest rate models (if it is modeled by an Ornstein-Uhlenbeck
    process), price bonds, and many other applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'We cannot discuss it in detail, but as a short demonstration, let''s call a
    function that simulates bond prices for different maturities:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'This returns a spectacular result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using the SMFI5 package](img/2078OT_06_49.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter was about interest rate models and interest rate derivatives. After
    introducing the Black model, we used it to price caps and caplets. We also examined
    the R code for the Black-Scholes model.
  prefs: []
  type: TYPE_NORMAL
- en: Then, we turned our attention to interest rate models such as the Vasicek and
    CIR models. We discussed the theory of parameter estimation as well. At the end,
    we briefly demonstrated how the SMFI5 package works. Interest rate models were
    important for us in this chapter because the pricing of interest rate derivatives
    starts with assuming something about interest rates and yield curves in the future.
    With the help of a properly chosen and calibrated model, we have the opportunity
    to analyze possible future scenarios of the interest rates. Interest rate models
    are, of course, a much wider topic, which is worth studying in more detail. However,
    learning the most popular and well-known models is a good start, and we encourage
    you to study them further or check out the next chapter because some options still
    have some surprises for us.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Atkinson, K. [1989]**: An Introduction to Numerical Analysis. John Wiley
    & Sons, New York.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Black, F. [1976]**: The Pricing of Commodity Contracts. *Journal of Financial
    Economics*, 3(1-2), pp. 167-179.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cairns, A. [2004]**: *Interest Rate Models: An Introduction*. Princeton University
    Press, Princeton-Oxford.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Chan, K., Karolyi, A., Longstaff, A. and Sanders, A. [1992]**: An Empirical
    Comparison of Alternative Models of the Short-Term Interest Rate. The *Journal
    of Finance*, No. 3\. pp. 1209-1227.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cox, J., Ingersoll, J. and Ross, S. [1985]**: The Theory of the Term Structure
    of Interest Rates. *Econometrica*, No. 53\. pp. 385-407.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hansen, L. [1982]**: Large Sample Properties of Generalized Method of Moment
    Estimators. *Econometrica*, No. 4\. pp. 1029-1054.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hull, J. [2009]**: *Options, Futures, and Other Derivatives*. Pearson Prentice
    Hall, New Jersey.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Vasicek, O. [1977]**: An Equilibrium Characterisation of the Term Structure.
    *Journal of Financial Economics*, 5(2), pp. 177-188.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
