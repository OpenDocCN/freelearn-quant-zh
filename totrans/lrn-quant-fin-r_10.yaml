- en: Chapter 9.  Derivative Pricing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。衍生品定价
- en: Algorithmic trading and financial engineering are the two most computationally
    intensive parts of finance. People in these areas are not only experts in finance,
    mathematics, and statistics, but they are also well versed in computationally
    intensive software. In the earlier chapters, we have learnt about algorithmic
    trading. In this chapter, we will study the different types of derivative pricing
    techniques in R, as pricing of derivatives is the most crucial part of financial
    engineering.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 算法交易和金融工程是金融领域计算密集度最高的两个部分。参与这些领域的人不仅是金融、数学和统计学的专家，而且还精通计算密集型软件。在前几章中，我们学习了算法交易。在本章中，我们将研究R语言中不同类型的衍生品定价技术，因为衍生品定价是金融工程中最为关键的部分。
- en: 'Derivative price depends upon the value of its underlying. We will start with
    a few basic option pricing models and move to other asset classes:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 衍生品价格取决于其标的资产的价值。我们将从一些基本的期权定价模型开始，随后讨论其他资产类别：
- en: Option pricing
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 期权定价
- en: Implied volatility
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐含波动率
- en: Bond pricing
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 债券定价
- en: Credit spread
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信用利差
- en: Credit default swaps
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信用违约掉期
- en: Interest rate derivatives
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利率衍生品
- en: Exotic options
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异国期权
- en: Option pricing
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 期权定价
- en: 'The binomial model works with the continuous process, while the Cox-Ross-Rubinstein
    model works with the discrete process. Option price depends upon stock price,
    strike price, interest rates, volatility, and time to expiry. We will use the
    package `fOption` for the Black-Scholes model. The following commands install
    and load this into the workspace:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 二项模型适用于连续过程，而Cox-Ross-Rubinstein模型适用于离散过程。期权价格取决于股票价格、行使价格、利率、波动率和到期时间。我们将使用`fOption`包来实现Black-Scholes模型。以下命令将安装并加载该包到工作区：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Black-Scholes model
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Black-Scholes模型
- en: Let us consider an example of `call` and `put` options using hypothetical data
    in June 2015 with a maturity of September 2015, that is, 3 months to time to maturity.
    Assume that the current price of the underlying stock is USD 900, the strike price
    is USD 950, the volatility is 22%, and the risk-free rate is 2%. We also have
    to set the cost of carry (`b`); in the original Black-Scholes model (with underlying
    paying no dividends), it equals the risk-free rate.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个关于`call`和`put`期权的示例，使用2015年6月的假设数据，期权到期日为2015年9月，即到期时间为3个月。假设当前标的股票价格为900美元，行使价格为950美元，波动率为22%，无风险利率为2%。我们还需要设置持有成本（`b`）；在原始的Black-Scholes模型中（假设标的资产不支付股息），它等于无风险利率。
- en: 'The following command `GBSOption()` calculates the `call` option price using
    all other parameters. The first parameter is type of option, that is, `call` or
    `put`, the second is current stock price, the third is strike price, the fourth,
    fifth, sixth, and seventh are time to expiry, risk-free rate of interest, volatility,
    and cost of carry:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令`GBSOption()`使用所有其他参数计算`call`期权价格。第一个参数是期权类型，即`call`或`put`，第二个是当前股票价格，第三个是行使价格，第四、第五、第六和第七个参数分别是到期时间、无风险利率、波动率和持有成本：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The output of the model can be seen by typing `model` on the R console and
    it consists of the title, which is Black-Scholes option, methodology, function
    syntax, parameters used and, toward the end, it has option price:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在R控制台中输入`model`，可以查看模型的输出，它包括标题（即Black-Scholes期权）、方法论、函数语法、所用参数，最后显示期权价格：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If you would like to find the option price, you can do so using the following
    line of code:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想找到期权价格，可以使用以下代码行：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can change the first parameter to `p` if you would like to calculate the
    `put` option price.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望计算`put`期权价格，可以将第一个参数改为`p`。
- en: 'The following command will calculate the `put` option price and extract only
    price. It does not show other items in output as we used `@price`:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将计算`put`期权价格，并仅提取价格。由于我们使用了`@price`，因此输出中不显示其他项：
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Cox-Ross-Rubinstein model
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cox-Ross-Rubinstein模型
- en: The Cox-Ross-Rubinstein model assumes that the underlying asset price follows
    a discrete binomial process. The price either goes up or down in each period.
    The important feature of the CRR model is that the magnitude of the up movement
    is inversely proportional to the down movement, that is, *u=1/d*. The price after
    two periods will be the same if it first goes up and then goes down or vice versa,
    as shown in *Figure 9.1*.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Cox-Ross-Rubinstein模型假设标的资产价格遵循离散的二项过程。价格在每个周期内要么上涨，要么下跌。CRR模型的重要特征是，向上波动的幅度与向下波动的幅度成反比，即*u=1/d*。如果价格先上涨再下跌，或者先下跌再上涨，两种情况的价格在两期后是相同的，如*图9.1*所示。
- en: 'The following two commands compute the `call` and `put` option prices using
    the binomial model and keeps all other parameters the same as in the continuous
    case except the last parameter. The last parameter is the number of steps time
    is to be divided to model the option. I used `n=3`, which means only three steps
    are used to price option:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 以下两个命令使用二项模型计算`call`和`put`期权价格，并保持与连续案例中相同的其他所有参数，除了最后一个参数。最后一个参数是将时间划分为多少步来建模期权。我使用了`n=3`，这意味着仅使用三个步骤来定价期权：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: However, all the values supplied to the Black-Scholes and binominal models are
    the same but the output is not exactly the same, it is a little bit different
    for both `call` and `put` options. If we are interested in the path or trajectory
    of the price movement then we should use the following command, which calculates
    the binomial tree of the `call` option price, and save the result in variable
    named `model`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，尽管提供给Black-Scholes和二项模型的所有值都是相同的，但输出并不完全相同，对于`call`和`put`期权略有不同。如果我们对价格波动的路径或轨迹感兴趣，那么我们应该使用以下命令来计算`call`期权价格的二项树，并将结果保存在名为`model`的变量中。
- en: The second command uses the variable model to plot the binomial tree, which
    is done using `BonimialTreePlot()`; it also helps in placing the option value
    in tree. Third and fourth are x-axis and y-axis labels, and the fifth is x-axis
    limit.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个命令使用变量`model`绘制二项树，这是通过`BonimialTreePlot()`完成的；它还帮助将期权值放置到树中。第三和第四个是x轴和y轴标签，第五个是x轴的限制。
- en: 'The third command is used to place the title of the figure:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个命令用于设置图形标题：
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now, if you are interested in calculating the `put` option value then you should
    use the first parameter, that is, `TypeFlag="pe"`, in `BinomialTreeOption()`.
    As the number of steps increases, the binomial tree results converge to continuous
    case. This can be verified using a `for` loop with 100 iterations. For this, we
    can define the `func` function with one parameter.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你有兴趣计算`put`期权的价值，那么你应该在`BinomialTreeOption()`中使用第一个参数，也就是`TypeFlag="pe"`。随着步数的增加，二项树结果将趋向于连续案例。可以通过使用`for`循环并迭代100次来验证这一点。为此，我们可以定义一个带有一个参数的`func`函数。
- en: 'Here is the definition of the function:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这是函数的定义：
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the following figure, you can see the option price, which shows the price
    at each node:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，你可以看到期权价格，显示了每个节点处的价格：
- en: '![Cox-Ross-Rubinstein model](img/00131.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![Cox-Ross-Rubinstein模型](img/00131.jpeg)'
- en: 'Figure 9.1: Call option value at each node'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.1：每个节点处的看涨期权价值
- en: The rightmost layer has four nodes and the prices are **0**, **0**, **9.01**,
    and **138.9** from down. The third layer has three nodes and the prices are **0**,
    **4.47** and **73.47**, and so on.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 最右侧的层有四个节点，价格分别是**0**、**0**、**9.01**和**138.9**（从下往上）。第三层有三个节点，价格分别是**0**、**4.47**和**73.47**，依此类推。
- en: '*Figure 9.1* is for three time steps. However, we can increase the number of
    steps and the option price starts converging to fair price as the number of steps
    increases. We have to put the `func` function into the loop from 1 to 100\. Next,
    we can plug this into `sapply()` along with iterations 1 to 100 and `func`, which
    results in a sequence of 100 option prices with an increasing number of steps.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*图9.1*表示三个时间步长的情况。然而，我们可以增加步数，随着步数的增加，期权价格开始收敛到公平价格。我们必须将`func`函数放入从1到100的循环中。接下来，我们可以将其与从1到100的迭代和`func`一起传递给`sapply()`，这将产生一个包含100个期权价格的序列，步数不断增加。'
- en: 'The following code shows the use of `sapply()`, and *Figure 9.2* shows the
    binomial prices and CRR prices with 100 step sizes:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了`sapply()`的使用，*图9.2*显示了100步长下的二项价格和CRR价格：
- en: '[PRE8]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'As the number of steps increases, we can see in the following figure that CRR
    price converges to Black-Scholes price:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 随着步数的增加，我们可以在下图中看到，CRR价格趋向于Black-Scholes价格：
- en: '![Cox-Ross-Rubinstein model](img/00132.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![Cox-Ross-Rubinstein模型](img/00132.jpeg)'
- en: 'Figure 9.2: Black-Scholes and CRR prices'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.2：Black-Scholes和CRR价格
- en: Greeks
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 希腊字母
- en: 'Greeks are also very important in option pricing. It helps to understand the
    movement of option price against different factors such as underlying price, time
    to expiry, risk-free rate of return, and volatility. The `GBSGreeks()` function
    calculates Greeks, where the first parameter is for what Greek we are interested
    in, the second is for option type, the third is for underlying price, the fourth
    for exercise price, the fifth for time to maturity, the sixth for risk-free rate
    of interest, and the seventh and eighth for annualized cost of carry and annualized
    volatility. Using the following code, we can calculate `delta` of the `call` option:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 希腊字母（Greeks）在期权定价中也非常重要。它有助于理解期权价格相对于不同因素（如标的价格、到期时间、无风险收益率和波动性）的变化。`GBSGreeks()`函数可以计算希腊字母，其中第一个参数是我们感兴趣的希腊字母类型，第二个是期权类型，第三个是标的资产价格，第四个是行权价，第五个是到期时间，第六个是无风险利率，第七个和第八个分别是年化持有成本和年化波动率。使用以下代码，我们可以计算`call`期权的`delta`：
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Similarly, you can change the second parameter to `p`, which will give you
    `delta` for the `put` options. Understanding of Greeks is important as this shows
    how Greeks change with other market parameters. This helps to diversify portfolios
    and control risk. Gamma can be calculated using the following code:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你可以将第二个参数改为`p`，这样你就可以得到`put`期权的`delta`。理解希腊字母非常重要，因为它展示了希腊字母如何随着其他市场参数的变化而变化。这有助于投资组合多样化和风险控制。Gamma可以使用以下代码计算：
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Similarly, you can calculate Vega, Rho, and Theta for `call` and `put` options
    controlling the first and second parameters. Now, suppose you want to calculate
    `delta` of a straddle portfolio, that is, a portfolio of `call` and `put` options
    for the same underlying, striking price, and expiration date, you should calculate
    `delta` separately for `call` and `put` options and add them.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，你可以计算`call`和`put`期权的Vega、Rho和Theta，控制第一个和第二个参数。现在，假设你想计算一个跨式投资组合（straddle
    portfolio）的`delta`，即一个包括相同标的资产、行权价和到期日的`call`和`put`期权组合，你应该分别计算`call`和`put`期权的`delta`，然后将它们相加。
- en: 'The following code calculates the `delta` for `call` and `put` options for
    prices ranging from `500` to `1500` with increment of 1:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码计算了`call`和`put`期权在价格范围从`500`到`1500`之间（步长为1）的`delta`：
- en: '[PRE11]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This command shows the first few values of the `call` and `put` option delta
    separately. The first column is for `call` and the second column is for `put`
    option delta:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令显示了`call`和`put`期权`delta`的前几个值，分别列出。第一列是`call`期权，第二列是`put`期权的`delta`：
- en: '[PRE12]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We plot the straddle portfolio''s `delta` using `plot()` using the following
    code:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`plot()`函数绘制跨式投资组合的`delta`，代码如下：
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The first parameter is the *x* axis, which is underlying price; in our case,
    it is ranging from `500` to `1500`. The second parameter is the *y* axis, which
    is the sum of `call` and `put delta`, keeping all other parameters constant. The
    following figure shows the `delta` for the straddle portfolio which lies between
    -1 to 1 and is S-shaped:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数是*X*轴，即标的资产价格；在我们的例子中，它的范围是从`500`到`1500`。第二个参数是*Y*轴，即`call`和`put delta`的总和，保持其他所有参数不变。下图展示了跨式投资组合的`delta`，它介于-1到1之间，呈S形曲线：
- en: '![Greeks](img/00133.jpeg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![Greeks](img/00133.jpeg)'
- en: 'Figure 9.3: Delta of straddle portfolio'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.3：跨式投资组合的Delta
- en: Implied volatility
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 隐含波动率
- en: 'In option trading, we calculated volatility as historical volatility and implied
    volatility. Historical volatility is the price deviation in the past one year
    while implied volatility, on the other hand, is calculated using option price
    and implies stock volatility in the future. Implied volatility is crucial in option
    trading as it gives the future estimate of stock volatility. European `call` option
    implied volatility can be calculated using `EuropeanOptionImpliedVolatility()`,
    as shown in the following code. The first parameter is type of option, the second
    is `call` or `put` price, the third and fourth are current price of underlying
    and strike price of option, the fifth is dividend yield, and the sixth, seventh,
    and eighth parameters are risk-free rate of return, time to maturity in years,
    and initial guess for volatility:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在期权交易中，我们计算了历史波动率和隐含波动率。历史波动率是过去一年内价格的偏差，而隐含波动率则是通过期权价格计算得出的，暗示了未来股票的波动性。隐含波动率在期权交易中至关重要，因为它提供了股票未来波动性的估算。欧式`call`期权的隐含波动率可以通过`EuropeanOptionImpliedVolatility()`来计算，如下所示的代码所示。第一个参数是期权类型，第二个是`call`或`put`价格，第三和第四个是标的资产的当前价格和期权的行权价，第五个是股息收益率，第六、第七和第八个参数分别是无风险收益率、到期时间（年）和波动率的初步猜测：
- en: '[PRE14]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Similarly, implied volatility for the American option can be calculated using
    `AmericanOptionImpliedVolatility()`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，可以使用`AmericanOptionImpliedVolatility()`计算美式期权的隐含波动率。
- en: Bond pricing
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 债券定价
- en: 'Bonds are very important financial instruments as they provide cash flow at
    a certain time at the predetermined rate or current market rate. Bonds help investors
    to create well-diversified portfolios. One must calculate bond price, yield, and
    maturity precisely to get a better idea of the instrument. We are going to use
    package `termstrc` for this. We have to install and load it into the R workspace
    using the following code:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 债券是非常重要的金融工具，因为它们在特定时间按预定利率或当前市场利率提供现金流。债券帮助投资者创建良好分散的投资组合。必须精确计算债券价格、收益率和到期时间，以便更好地了解该工具。我们将使用`termstrc`包来实现这一点。我们需要通过以下代码安装并加载到R工作空间中：
- en: '[PRE15]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'We will use the data `govtbonds` in the package, which can be loaded and viewed
    using the following code:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用包中的数据`govtbonds`，可以使用以下代码加载并查看该数据：
- en: '[PRE16]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The variable `govbonds` has bond data for three countries - Germany, Austria,
    and France. We will be using the Germany data to calculate bond prices, which
    can be accessed using `govbonds[[1]]`. The following two lines of code generate
    `cashflow` and `maturity` matrix:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 变量`govbonds`包含三个国家（德国、奥地利和法国）的债券数据。我们将使用德国的数据来计算债券价格，可以通过`govbonds[[1]]`访问。以下两行代码生成`现金流`和`到期`矩阵：
- en: '[PRE17]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Next, we will look at the usage of `bond_prices()`, which calculates the bond
    prices. `beta` is another parameter to be supplied to the function `bond_prices()`.
    Next we can create the `beta` variable and defined `bond_prices()`. The first
    parameter in this function is `method`, which supports three methods:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看`bond_prices()`的使用方法，该函数用于计算债券价格。`beta`是另一个需要传递给`bond_prices()`函数的参数。接下来，我们可以创建`beta`变量并定义`bond_prices()`。该函数的第一个参数是`method`，它支持三种方法：
- en: '`ns` for Nelson/Siegel'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ns`表示Nelson/Siegel方法'
- en: '`dl` for Diebold/Li'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dl`表示Diebold/Li'
- en: '`sv` for the Svensson approach'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sv`表示Svensson方法'
- en: 'We will choose the `ns` method for the following code:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将选择`ns`方法来处理以下代码：
- en: '[PRE18]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The variable `bp` has spot rates, discount factors, and bond prices. Any information
    can be accessed using `$`. For example, you can bond prices using the following
    code:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 变量`bp`包含现货利率、折现因子和债券价格。可以使用`$`访问任何信息。例如，您可以使用以下代码获取债券价格：
- en: '[PRE19]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Bond yield is investor return which is realized on bond investment, and it
    can be calculated using `bond_yields()`. The following two lines of code generate
    `cashflow` and `maturity` matrices, which include dirty prices as well:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 债券收益率是投资者在债券投资中实现的回报，可以使用`bond_yields()`计算。以下两行代码生成包含肮脏价格的`现金流`和`到期`矩阵：
- en: '[PRE20]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The following code calculates the bond yield and maturities in matrix form:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码以矩阵形式计算债券收益率和到期时间：
- en: '[PRE21]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The output of the preceding code can be seen by typing the following command
    `head()` and the output has two columns, where the first column of the output
    matrix is maturity in years and the second column is the corresponding bond yield
    for the corresponding bonds. Bond names are given as an index of output:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过输入以下命令`head()`来查看前述代码的输出，输出将有两列，第一列是到期年限，第二列是相应债券的债券收益率。债券名称作为输出的索引给出：
- en: '[PRE22]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following figure shows yield curve or term structure against various maturities.
    Yields fluctuate initially for a very small maturity period and continuously increase
    as the maturity increases:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了不同到期时间的收益曲线或期限结构。收益率在非常短的到期期内波动，并随着到期时间的增加而持续上升：
- en: '![Bond pricing](img/00134.jpeg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![债券定价](img/00134.jpeg)'
- en: 'Figure 9.4: Yield curve, that is, term structure with different maturities'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.4：收益曲线，即具有不同到期时间的期限结构
- en: 'Duration measures the length of time it takes for the price of the bond to
    be repaid by its internal `cashflow`. It is a very important factor for investors
    to consider, as bonds with higher duration carry more risk and higher price volatility
    than bonds with lower duration. Duration can be measured using the following code:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 久期衡量了债券价格由其内部`现金流`偿还所需的时间长度。对于投资者来说，这是一个非常重要的因素，因为久期较高的债券比久期较低的债券具有更高的风险和价格波动性。久期可以通过以下代码来计算：
- en: '[PRE23]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'It returns duration in years, modified duration, and weights for all bonds
    in the portfolio. If you want to look at the portfolio composition, you can see
    the third column of the output matrix. The third column is weights for your investment
    and you would see that the sum of the weights is equal to `1`:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 它返回所有债券的年限、修正久期以及投资组合中所有债券的权重。如果你想查看投资组合的组成，可以查看输出矩阵的第三列。第三列是你的投资权重，你会看到权重的总和等于`1`：
- en: '[PRE24]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Credit spread
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信用利差
- en: 'Credit risk is one of the major problems for financial institutions. The major
    cause for this is credit quality, and credit spread values help to understand
    credit risk depending upon the credit quality. Credit spread is an important concept
    in institutional trading as credit spread depends upon the quality or rating of
    bonds. It is the difference in bond yield of two bonds with similar maturity but
    with different bond ratings. We are going to use the `CreditMetrics` package for
    this, which can be installed and imported to the R workspace using the following
    two commands:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 信用风险是金融机构面临的主要问题之一。其主要原因是信用质量，信用利差值有助于根据信用质量理解信用风险。信用利差是机构交易中的一个重要概念，因为信用利差取决于债券的质量或评级。它是两个具有相似到期日但评级不同的债券之间的收益率差异。我们将使用`CreditMetrics`包来实现这一点，可以通过以下两个命令安装并导入到R工作区：
- en: '[PRE25]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Credit spread is calculated using `cm.cs()`, which has just two parameters.
    The first parameter is the one-year migration matrix for some institution or government
    which issues credit and the second parameter is **loss given default** (**LGD**),
    which means maximum loss if the obligor of credit defaults. Normally, credit with
    rating `AAA` is on the top and considered as safe, and rating `D` is on the bottom
    and considered as default.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 信用利差通过`cm.cs()`计算，该函数只有两个参数。第一个参数是某个发行信用的机构或政府的一年期迁移矩阵，第二个参数是**违约损失**（**LGD**），即如果债务人违约时的最大损失。通常，`AAA`评级的信用在顶部，视为安全，而`D`评级在底部，视为违约。
- en: 'The following code is a vector of all credit ratings:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是所有信用评级的向量：
- en: '[PRE26]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The preceding code shows we have eight ratings. The transition matrix is the
    probability of going from one credit rating to another.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码显示我们有八个评级。转移矩阵是从一个信用评级转换到另一个信用评级的概率。
- en: 'This code generates a matrix of such probabilities in an eight-by-eight matrix,
    with rating as index and column names:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码生成了一个这样的概率矩阵，矩阵为八行八列，评级作为索引和列名：
- en: '[PRE27]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'You can have a look at this matrix by typing the variable name, that is, `M,`
    on the command prompt, as shown here:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在命令提示符中输入变量名，即`M，`来查看该矩阵，如下所示：
- en: '[PRE28]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'You can see in the preceding table that the last column has probabilities of
    default for bonds of all ratings; that means it is very unlikely bonds with `AAA`,
    `AA`, and `A` rating will default. However, the default probability increases
    as the bond rating deteriorates towards `CCC`. The last row has all zeros except
    for the last one, which means bonds which are default have zero probability of
    improving the rating. We can set the loss given default (`lgd`) parameter as `0.2`
    in the following code:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在上面的表格中看到，最后一列显示了所有评级债券的违约概率；这意味着`AAA`、`AA`和`A`评级的债券违约的可能性非常小。然而，随着债券评级向`CCC`恶化，违约概率增加。最后一行除了最后一项外，所有的值都是零，这意味着违约的债券没有提高评级的可能性。我们可以在以下代码中将违约损失（`lgd`）参数设置为`0.2`：
- en: '[PRE29]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: As we have designed a transition matrix and set the `lgd` parameter, we can
    now use the `cm.cs()` function to generate credit spread.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经设计了一个转移矩阵并设置了`lgd`参数，现在我们可以使用`cm.cs()`函数来生成信用利差。
- en: 'The following code does this and calculates credit spread for all ratings respectively:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码实现此功能，并分别计算所有评级的信用利差：
- en: '[PRE30]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The preceding results illustrate that credit spread is less for good credit
    rating bonds and it increases as we move toward the left or as the probability
    of default increases. The rightmost rating `CCC` has the highest spread of 4%
    because, as per above matrix `M`, the probability of default for `CCC` rating
    bonds is 19.79 % .Value at risk for this credit can be calculated using `cm.CVaR()`,
    which has nine parameters. The first two parameters are the same as for `cm.cs()`,
    that is, migration matrix and loss given default (`lgd`), and the remaining are
    exposure at default, number of companies, number of simulated random numbers,
    risk-free interest, correlation matrix, confidence level, and rating of companies.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 前述结果表明，信用利差对于信用评级较好的债券较小，随着我们向左移动或违约概率增加，信用利差增大。最右侧的评级`CCC`的利差最高为4%，因为根据上述矩阵`M`，`CCC`评级债券的违约概率为19.79%。该信用的风险价值可以使用`cm.CVaR()`计算，该函数有九个参数。前两个参数与`cm.cs()`相同，即迁移矩阵和违约损失（`lgd`），其余参数包括违约暴露、公司数量、模拟随机数的数量、无风险利率、相关矩阵、置信水平和公司评级。
- en: 'All parameters are set as follows:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 所有参数设置如下：
- en: '[PRE31]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Credit value at risk can be used in the following line of code, where the parameters
    are as defined previously:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 信用风险价值可以在以下代码行中使用，其中的参数如前所定义：
- en: '[PRE32]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'This credit VaR number is annualized, which means there is a 1% chance that
    this portfolio of three companies might lose this value in the next year. This
    output is based on simulated prices. Simulated prices change in every run so `cm.CVaR()`
    output might also change every time you execute the preceding code. `ca.gain()`,
    which requires all the parameters as `cm.CVaR()` except alpha, is used to calculate
    simulated profit and loss and can be used like the following code:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这个信用VaR数值是年化的，这意味着在未来一年内，包含三家公司在内的投资组合有1%的概率会损失这个数值。该输出基于模拟价格。模拟价格在每次运行时都会变化，因此`cm.CVaR()`的输出每次执行前述代码时可能也会有所不同。`ca.gain()`需要与`cm.CVaR()`相同的所有参数，除了alpha外，用于计算模拟的利润和亏损，可以像下面的代码一样使用：
- en: '[PRE33]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Credit default swaps
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信用违约掉期
- en: In brief, a **credit default swap** (**CDS**) is used to transfer the credit
    risk of a reference entity (corporate or sovereign) from one party to another.
    In a standard CDS contract, one party purchases credit protection from another
    party, to cover the loss of the face value of an asset following a credit event.
    A credit event is a legally defined event that typically includes bankruptcy,
    failure-to-pay, and restructuring. The protection lasts until some specified maturity
    date. To pay for this protection, the protection buyer makes a regular stream
    of payments, known as the premium leg, to the protection seller. This size of
    these premium payments is calculated from a quoted default swap spread, which
    is paid on the face value of the protection. These payments are made until a credit
    event occurs or until maturity, whichever occurs first. The issuer of the CDS
    derivative has to price it before selling. We will be using the `credule` package
    for this.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，**信用违约掉期**（**CDS**）用于将参考实体（公司或主权）的信用风险从一方转移到另一方。在标准的CDS合同中，一方从另一方购买信用保护，以覆盖资产面值因信用事件导致的损失。信用事件是一个法律定义的事件，通常包括破产、未能支付和重组。保护期持续至某个指定的到期日。为了支付这种保护，保护买方定期向保护卖方支付一系列费用，称为保费支付。这些保费支付的大小是根据报价的违约掉期差价计算的，该差价是基于保护的面值支付的。这些支付会一直进行，直到发生信用事件或到期，以先发生者为准。CDS衍生品的发行方必须在出售之前定价。我们将使用`credule`包来完成这项工作。
- en: 'These two codes are used for installing this package and loading it into the
    R workspace:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这两行代码用于安装该包并将其加载到R工作空间中：
- en: '[PRE34]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '`priceCDS()` calculates the spread of several CDSs of different maturities
    from a yield curve and credit curve. Here, we are going to define parameters which
    will be used for pricing CDSs. The yield curve vector is defined below and is
    the tenor of each yield curve in years:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`priceCDS()`根据收益率曲线和信用曲线计算不同到期日的多个CDS的利差。这里，我们将定义用于定价CDS的参数。收益率曲线向量在下方定义，并表示每条收益率曲线的期限（以年为单位）：'
- en: '[PRE35]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Here, the vector is defined as yield curve discounted rate, which is going
    to be the second parameter in the pricing CDS function:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，向量定义为收益率曲线的折现率，它将成为定价CDS函数中的第二个参数：
- en: '[PRE36]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The following two lines of code define the tenor of the credit curve in years
    and survival probability for a tenor:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 以下两行代码定义了信用曲线的期限（以年为单位）和该期限的生存概率：
- en: '[PRE37]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Next is the maturity of the CDS in years, which we are going to price:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是CDS的到期时间（以年为单位），我们将对其进行定价：
- en: '[PRE38]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Another parameter is defined here, which is recovery rate in case of default:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这里定义了另一个参数，即违约情况下的回收率：
- en: '[PRE39]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'We have successfully defined mandatory parameters. The next line does the job
    of pricing the CDS of multiple tenors:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已成功定义了必需的参数。下一行将执行定价多个期限CDS的任务：
- en: '[PRE40]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The preceding function returns a DataFrame where the first column is tenors
    and the second column is spreads for **credit default swaps** (**CDS**) for a
    given tenor. If you would like to use the bootstrap technique to understand the
    probability distribution of credit default swaps then you can use `bootstrapCDS()`,
    which has yield curve tenor, yield curve rates, CDS tenor, CDS spread, and recovery
    rates. We are going to define the `cdsSpread` parameter, as all other parameters
    have already been defined above, which we will use in `bootstrapCDS()`:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 前述函数返回一个数据框，其中第一列是期限，第二列是给定期限的**信用违约掉期**（**CDS**）的利差。如果你想使用引导法来了解信用违约掉期的概率分布，可以使用`bootstrapCDS()`，它需要收益率曲线的期限、收益率曲线的利率、CDS期限、CDS利差和回收率。我们将定义`cdsSpread`参数，因为其他所有参数已在上面定义，我们将在`bootstrapCDS()`中使用该参数：
- en: '[PRE41]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The following command gives the bootstrap credit curve for credit default swap
    spreads for different maturities:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令给出不同到期日的信用违约掉期利差的引导信用曲线：
- en: '[PRE42]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The output of the preceding command generates three columns. The first is the
    tenor, the second column is survival probability for each tenor, and the last
    column is hazard rate, that is, the intensity of Poisson distribution, for each
    tenor.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 前述命令的输出会生成三列数据。第一列是期限，第二列是每个期限的存活概率，最后一列是每个期限的风险率，即泊松分布的强度。
- en: Interest rate derivatives
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利率衍生品
- en: 'We will use the `GUIDE` package to calculate the price for interest rate derivatives:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`GUIDE`包来计算利率衍生品的价格：
- en: '[PRE43]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The following command will open a pop-up window which requires all the parameters.
    Once you supply the required parameters in the pop-up window, it generates the
    interest rate derivative price:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令会打开一个弹出窗口，要求输入所有参数。一旦你在弹出窗口中提供所需的参数，它将生成利率衍生品价格：
- en: '[PRE44]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Parameters to be supplied in the pop-up window are as follows:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 弹出窗口中需要提供的参数如下：
- en: '**Notional:** To be entered in decimals'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名义金额**：以小数形式输入'
- en: '**Fixed rate**: Entered in decimals, for example, 0.05 for 5%'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**固定利率**：以小数形式输入，例如，0.05代表5%'
- en: '**Last spot rate**: Entered in decimals, for example, 0.05 for 5 per cent'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最后现货汇率**：以小数形式输入，例如，0.05代表5%'
- en: '**Months for first payment**: Enter 3 for 3 months'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**首次支付月份**：输入3表示3个月'
- en: '**Spot rates**: Enter with comma separation, for example, 0.054, 0.056, 0.058'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**现货汇率**：用逗号分隔输入，例如，0.054, 0.056, 0.058'
- en: '**Frequency of spot rates**: Chosen from continuous/quarterly/semi-annual/annual'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**现货汇率的频率**：从连续/季度/半年度/年度中选择'
- en: '**Settlement frequency**: Chosen from quarterly/semi-annual/annual'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**结算频率**：从季度/半年度/年度中选择'
- en: Exotic options
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另类期权
- en: 'Asian, barrier, binary, and lookback options are a few exotic options. Exotic
    options are quite different than normal American or European options, or vanilla
    options, and have a few new features which make it quite complex to price. An
    American or European `call` or `put` option is considered as a non-exotic or vanilla
    option. Exotic options are complex because of a few features:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 亚洲期权、障碍期权、二元期权和回溯期权是一些另类期权。另类期权与普通的美式或欧式期权，或称香草期权，非常不同，它们具有一些新特性，使得定价变得相当复杂。美式或欧式的`看涨`或`看跌`期权被认为是非另类或香草期权。另类期权复杂的原因有几个特性：
- en: The way it gets settled varies depending on the moneyless of the option at the
    time of maturity. It can be settled in cash as well as stock options.
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的结算方式取决于期权到期时是否处于平价。可以通过现金或股票期权进行结算。
- en: It could also involve foreign exchange rates.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还可能涉及外汇汇率。
- en: Payoff at the time of maturity depends not just on the underlying stock price
    but on its value at several times during the contract life.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 到期时的支付不仅取决于标的股票价格，还取决于合同期间多个时间点的价格。
- en: 'We will be using the `fExoticOptions` package to price various types of exotic
    options. For this, the following two lines of code are used to install and load
    this package into the R workspace:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`fExoticOptions`包来定价各种类型的另类期权。为此，以下两行代码用于安装并加载该包到R工作区：
- en: '[PRE45]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Asian options can be priced in different ways. Here are a few functions to price
    Asian options. `GeometricAverageRateOption()` prices Asian options based on geometric
    average rate options.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 亚洲期权可以通过不同的方式定价。以下是一些定价亚洲期权的函数。`GeometricAverageRateOption()`根据几何平均收益率期权定价亚洲期权。
- en: 'Here is a code with the Asian `call` option pricing function using geometric
    average rate option. The first parameter is the `call` (`"c"`) option and other
    parameters are stock price (`110`), exercise price (`120`), time to maturity (`0.5`,
    that is, 6 months), risk-free interest rate (3%), cost of carry (5%), and volatility
    (10%):'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个使用几何平均收益率期权定价亚洲`看涨`期权的代码。第一个参数是`看涨`（`"c"`）期权，其他参数是股票价格（`110`），执行价格（`120`），到期时间（`0.5`，即6个月），无风险利率（3%），持有成本（5%）和波动率（10%）：
- en: '[PRE46]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'You can calculate the price for Asian `put` options as well by replacing `c`
    with `p`. `TurnbullWakemanAsianApproxOption()` also calculates the Asian option
    price and is based on Turnbull and Wakeman''s approximation. It uses two new parameters
    (`SA`), time and `tau` in addition to parameters used in previous functions. `SA`
    and time are used. Here is the code:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过将`c`替换为`p`来计算亚洲`看跌`期权的价格。`TurnbullWakemanAsianApproxOption()`也可以计算亚洲期权的价格，并基于Turnbull和Wakeman的近似方法。它除了使用之前函数中的参数外，还使用两个新参数（`SA`），时间和`tau`。`SA`和时间是必须使用的。以下是代码：
- en: '[PRE47]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'However, there is another technique to calculate the Asian option price by
    using `LevyAsianApproxOption()`, which uses Levy''s approximation to price Asian
    options and use all parameters used in `TurnbullWakemanAsianApproxOption()` except
    `tau`:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，另一种计算亚洲期权价格的技术是使用`LevyAsianApproxOption()`，该方法使用Levy的近似方法来定价亚洲期权，并且与`TurnbullWakemanAsianApproxOption()`中使用的所有参数相同，除了`tau`：
- en: '[PRE48]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: There are many functions to calculate the price for barrier options as well.
    Standard barrier option, double barrier option, and lookback barrier option are
    a few of them. There are four types of single barrier options.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多函数用于计算障碍期权的价格。标准障碍期权、双障碍期权和回顾型障碍期权是其中的一些。单障碍期权有四种类型。
- en: The type flag `cdi` denotes a down-and-in call, `cui` denotes an up-and-in call,
    `cdo` denotes a down-and-out call, and `cuo` denotes an up-and-out call.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 类型标志`cdi`表示向下敲入看涨期权，`cui`表示向上敲入看涨期权，`cdo`表示向下敲出看涨期权，`cuo`表示向上敲出看涨期权。
- en: The following command calculates the standard barrier option price using `StandardBarrierOption()`,
    which requires two additional parameters in `GeometricAverageRateOption()` and
    these additional parameters are barrier value and rebate value.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令使用`StandardBarrierOption()`计算标准障碍期权的价格，该函数在`GeometricAverageRateOption()`中需要两个额外的参数，这些额外的参数是障碍值和回扣值。
- en: 'The first parameter is option type, which is a down-and-out call in the following
    command:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数是期权类型，在以下命令中是一个向下敲出的看涨期权：
- en: '[PRE49]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: In the preceding command, `H = 95` is barrier value and `K=3` is rebate. Double
    barrier option requires lower (`L`) and upper (`U`) bounds along with curvature
    of lower and upper bounds, that is, `delta1` and `delta2`. It also has four types
    of options.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的命令中，`H = 95`是障碍值，`K=3`是回扣。双障碍期权需要下界（`L`）和上界（`U`），以及下界和上界的曲率，即`delta1`和`delta2`。它还具有四种类型的期权。
- en: 'The type flag `co` denotes an up-and-out-down-and-out call, `ci` denotes an
    up-and-in-down-and-in `call`, `po` denotes an up-and-out-down-and-out `put`, and
    `pi` denotes an up-and-in-down-and-in call. We will use `co` type option in the
    following command along with other parameters to calculate the double barrier
    option price:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 类型标志`co`表示向上敲出向下敲出的看涨期权，`ci`表示向上敲入向下敲入的看涨期权，`po`表示向上敲出向下敲出的看跌期权，`pi`表示向上敲入向下敲入的看跌期权。我们将在以下命令中使用`co`类型期权，并结合其他参数计算双障碍期权的价格：
- en: '[PRE50]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: The option comes into existence if it is a knock-in barrier or becomes worthless
    if it is a knocked-out barrier. Lookback barrier is another type of barrier option
    and it also has four types, `cuo` denotes an up-and-out call, `cui` denotes an
    up-and-in call, `pdo` denotes a down-and-out put, `pdi` denotes a down-and-in
    put.The option's barrier monitoring period starts at time zero and ends at an
    arbitrary date before expiration. If the barrier is not triggered during this
    period, the fixed strike lookback option will be kicked off at the end of the
    barrier tenor.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是敲入障碍期权，期权会生效；如果是敲出障碍期权，期权将变得毫无价值。回顾型障碍期权是另一种类型的障碍期权，它也有四种类型，`cuo`表示向上敲出看涨期权，`cui`表示向上敲入看涨期权，`pdo`表示向下敲出看跌期权，`pdi`表示向下敲入看跌期权。期权的障碍监控期从时间零开始，到到期前的任意日期结束。如果在此期间障碍未被触发，则固定执行价的回顾型期权将在障碍期限结束时被触发。
- en: 'The following line of code calculates the lookback barrier, that is, `cuo`,
    option price:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码行计算了回溯障碍，即`cuo`期权价格：
- en: '[PRE51]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Barrier options are another kind of exotic option, which are also called digital
    options. Unlike standard European-style options, the payout for binary options
    does not depend on how much it is in the money but rather whether or not it is
    on the money. The option''s payoff is fixed at the option''s inception and is
    based on the price of the underlying asset on the expiration date. Gap option,
    cash or nothing, and two asset cash or nothing are a few of the binary options.
    The payoff on a gap option depends on the usual factors of a plain option, but
    is also affected by a `gap` amount of exercise prices, which may be positive or
    negative. The following commands calculate gap option, which is one of the binary
    options, price using `GapOption()` and the `X1` and `X2` parameters in this function
    are two exercise price which create gap option, and all other parameters are as
    usual:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 障碍期权是另一种另类期权，也被称为数字期权。与标准的欧式期权不同，二元期权的支付并不依赖于它的盈利多少，而是取决于是否到期时符合条件。期权的支付在期权创建时已确定，并基于到期日标的资产的价格。跳空期权、现金或无价值期权以及两资产现金或无价值期权是二元期权中的几种。跳空期权的支付受普通期权的常规因素影响，但也受到`gap`行权价的影响，该`gap`可能为正值或负值。以下命令使用`GapOption()`计算跳空期权价格，函数中的`X1`和`X2`参数是创建跳空期权的两个行权价，其他参数与常规期权一样：
- en: '[PRE52]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '`CashOrNothingOption()` calculates the price for the cash or nothing option
    and for this option, a predetermined amount is paid at expiration if the asset
    is above for a call or below for a put at strike level. The amount independent
    of the path is taken. These options require no payment of an exercise price. The
    exercise price determines whether or not the option returns a payoff. The value
    of a cash-or-nothing `call` (`put`) option is the present value of the fixed cash
    payoff multiplied by the probability that the terminal price will be greater than
    (less than) the exercise price. The following line has `S` as stock price, `X`
    as exercise price, and `K` as cash amount to be paid at expiry if the option expires
    in the money:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`CashOrNothingOption()` 计算现金或无价值期权的价格，对于此期权，如果资产价格在行权价上方（看涨）或下方（看跌），到期时支付预定金额。该金额与路径无关。这些期权不需要支付行权价。行权价决定期权是否支付收益。现金或无价值的`call`（看涨）或`put`（看跌）期权的价值是固定现金支付的现值，乘以终端价格高于（低于）行权价的概率。以下代码行中，`S`为股票价格，`X`为行权价，`K`为到期时若期权到期获利则支付的现金金额：'
- en: '[PRE53]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Two Asset Cash or Nothing options are building blocks for constructing more
    complex exotic options and there are four types of two asset cash or nothing options.
    The first two situations are: a Two Asset Cash or Nothing call which pays out
    a fixed cash amount if the price of the first asset is above (below) the strike
    price of the first asset and the price of the second asset is also above (below)
    the strike price of the second asset at expiration. The other two situations arise
    under the following conditions: a Two Asset Cash or Nothing down-up pays out a
    fixed cash amount if the price of the first asset is below (above) the strike
    price of the first asset and the price of the second asset is above (below) the
    strike price of the second asset at expiration.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 两资产现金或无价值期权是构建更复杂的另类期权的基础，共有四种类型的两资产现金或无价值期权。前两种情况是：两资产现金或无价值看涨期权，如果到期时第一资产的价格高于（低于）第一资产的行权价，且第二资产的价格也高于（低于）第二资产的行权价，则支付固定现金金额。另一种情况是在以下条件下出现：两资产现金或无价值看跌期权，如果到期时第一资产的价格低于（高于）第一资产的行权价，且第二资产的价格高于（低于）第二资产的行权价，则支付固定现金金额。
- en: 'The following function does the job of calculating the two asset cash or nothing
    option price:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数用于计算两资产现金或无价值期权价格：
- en: '[PRE54]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Here:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 这里：
- en: '`TypeFlag` : Option type `"c"` for call `"p"` for put'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TypeFlag` : 期权类型，`"c"`代表看涨期权，`"p"`代表看跌期权'
- en: '`S1`, `S2`: Stock price for two assets'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`S1`, `S2`：两资产的股票价格'
- en: '`X1`, `X2`: Two exercise prices'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`X1`, `X2`：两个行权价'
- en: '`K`: Cash amount to be paid at expiry'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`K`：到期时支付的现金金额'
- en: '`Time`: Time to expiry'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Time`：到期时间'
- en: '`r`: Risk-free interest rate'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`r`：无风险利率'
- en: '`b1`, `b2`: Cost of carry for two assets'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`b1`, `b2`：两资产的持仓成本'
- en: '`sigma1`, `sigma2`: Two asset volatility'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sigma1`, `sigma2`：两资产的波动率'
- en: '`rho`: Correlation between two assets'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rho`：两资产之间的相关性'
- en: There is much more detail available about all other type of exotic options and
    for more details about exotic options, you should look at the PDF file with the
    name `fExoticOptions` which you can download from the Web.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 关于所有其他类型的奇异期权还有更多的细节，想了解更多关于奇异期权的内容，你应该查阅名为`fExoticOptions`的 PDF 文件，你可以从网上下载该文件。
- en: Questions
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are the packages to be used for option, bond, and exotic options pricing?
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于期权、债券和奇异期权定价的包有哪些？
- en: Which functions will you use to calculate the option price using the Black-Scholes
    and Cox-Ross-Rubinstein methods?
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会使用哪些函数来计算使用 Black-Scholes 和 Cox-Ross-Rubinstein 方法的期权价格？
- en: How does the CRR price converge to the binomial price and which command would
    you use to calculate Greeks?
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CRR 定价如何收敛到二项式定价，且你会使用哪个命令来计算希腊字母？
- en: Write a command to calculate implied volatility.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写一个命令来计算隐含波动率。
- en: How would you prepare a `cashflow` and `maturity` matrix to the form which would
    be used in bond pricing function, and which function would be used for bond pricing?
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何准备一个`cashflow`和`maturity`矩阵，使其符合债券定价函数的要求，并且应使用哪个函数进行债券定价？
- en: What are the functions to be used for credit spread and credit default swaps?
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 处理信用利差和信用违约掉期的函数有哪些？
- en: What are the Asian option types, barrier option types, and digital option types?
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 亚洲期权类型、障碍期权类型和数字期权类型有哪些？
- en: What are the functions you would use for the options in question 7?
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会使用哪些函数来处理第 7 问中的选项？
- en: Summary
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: This chapter used derivative pricing only in terms of implementation in R, and
    various packages such as `foptions`, `termstrc`, `CreditMetrics`, `credule`, `GUIDE`,
    and `fExoticOptions` to price options, bonds, credit spreads, credit default swaps,
    and interest rate derivatives, and different types of exotic options were used.
    Derivative pricing is crucial in derivative trading and it is very important to
    learn it.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 本章仅在 R 中实现衍生品定价，并使用了多个包，如`foptions`、`termstrc`、`CreditMetrics`、`credule`、`GUIDE`和`fExoticOptions`，这些包用于定价期权、债券、信用利差、信用违约掉期以及利率衍生品，同时也涉及了不同类型的奇异期权。衍生品定价在衍生品交易中至关重要，因此学习它非常重要。
- en: This chapter also covered the Black-Scholes and Cox-Ross-Rubinstein methods,
    along with Greeks and implied volatility for options. It also explained bond price
    and yield curves. It also used functions which explain how credit spread, credit
    default swaps, and interest rate derivatives are priced. Toward the end, it covered
    various types of exotic options. It used data given in relevant packages and implemented
    functions.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 本章还涵盖了 Black-Scholes 和 Cox-Ross-Rubinstein 方法，以及期权的希腊字母和隐含波动率。它还解释了债券价格和收益率曲线，并使用了相关函数来解释信用利差、信用违约掉期和利率衍生品的定价。最后，本章介绍了各种类型的奇异期权，并使用了相关包中提供的数据和实现的函数。
