["```py\n>head(Data) \n\n```", "```py\n> YPrice = Data$StockYPrice \n> XPrice = Data$StockXPrice \n> plot(YPrice, XPrice,       xlab=\"XPrice\",         \nylab=\"YPrice\") \n\n```", "```py\n> LinearR.lm = lm(YPrice ~ XPrice, data=Data) \n\n```", "```py\n> coeffs = coefficients(LinearR.lm); coeffs \n\n```", "```py\n(Intercept)      XPrice \n92.7051345  -0.1680975 \n\n```", "```py\n> YPrice = 92.7051345 + -0.1680975*(Xprice) \n\n```", "```py\n> predict(LinearR.lm, OutofSampleData) \n\n```", "```py\n> summary(LinearR.lm)$r.squared \n\n```", "```py\n> summary(LinearR.lm) \n\n```", "```py\n> Predictdata = data.frame(XPrice=75) \n> predict(LinearR.lm, Predictdata, interval=\"confidence\")   \n\n```", "```py\n> LinearR.res = resid(LinearR.lm) \n> plot(XPrice, LinearR.res,  \nylab=\"Residuals\", xlab=\"XPrice\",  \nmain=\"Residual Plot\") \n\n```", "```py\n> LinearRSTD.res = rstandard(LinearR.lm) \n> plot(XPrice, LinearRSTD.res,  \nylab=\"Standardized Residuals\", xlab=\"XPrice\",  \nmain=\"Residual Plot\") \n\n```", "```py\n> qqnorm(LinearRSTD.res,  \nylab=\"Standardized Residuals\",  \nxlab=\"Normal Scores\",  \nmain=\"Error Normal Distribution plot\")  \n> qqline(LinearRSTD.res) \n\n```", "```py\n> help(summary.lm)   \n\n```", "```py\n> MultipleR.lm = lm(StockYPrice ~  StockX1Price + StockX2Price +  StockX3Price + StockX4Price,  data=DataMR) \n> summary(MultipleR.lm) \n\n```", "```py\n> StockYPrice = 88.42137 +(-0.16625)*StockX1Price  \n+ (-0.00468) * StockX2Price + (.03497)*StockX3Price+ (.02713)*StockX4Price \n\n```", "```py\n> newdata = data.frame(StockX1Price=70, StockX2Price=90, StockX3Price=60, StockX4Price=80) \n> predict(MultipleR.lm, newdata) \n\n```", "```py\n> summary(MultipleR.lm)$r.squared  \n> summary(MultipleR.lm)$adj.r.squared  \n\n```", "```py\n> predict(MultipleR.lm, newdata, interval=\"confidence\") \n\n```", "```py\n> vif(MultipleR.lm) \n\n```", "```py\n> DataANOVA = read.csv(\"C:/Users/prashant.vats/Desktop/Projects/BOOK R/DataAnova.csv\") \n>head(DataANOVA) \n\n```", "```py\n>boxplot(DataANOVA$Returns ~ DataANOVA$Stock) \n\n```", "```py\n> oneway.test(Returns ~ Stock, var.equal=TRUE) \n\n```", "```py\n>DataMR = read.csv(\"C:/Users/prashant.vats/Desktop/Projects/BOOK R/DataForMultipleRegression.csv\") \n>head(DataMR) \n\n```", "```py\n > correlationMatrix<- cor(DataMR[,1:4]) \n\n```", "```py\n> MultipleR.lm = lm(StockYPrice ~  \nStockX1Price + StockX2Price + StockX3Price + StockX4Price,  \ndata=DataMR) \n> step <- stepAIC(MultipleR.lm, direction=\"both\") \n> step$anova  \n\n```", "```py\n>library(mlbench) \n>library(caret) \n>DataVI = read.csv(\"C:/Users/prashant.vats/Desktop/Projects/BOOK R/DataForMultipleRegression1.csv\") \n>head(DataVI) \n\n```", "```py\n>control<- rfeControl(functions=rfFuncs, method=\"cv\", number=10) \n>Output <- rfe(DataVI[,1:4], DataVI[,0:1], sizes=c(1:4), rfeControl=control) \n>predictors(Output) \n>plot(Output, type=c(\"g\", \"o\")) \n\n```", "```py\n            >  install.packages('wavelets') \n\n    ```", "```py\n            > library(wavelets) \n\n    ```", "```py\n            >   par(mfrow=c(2,1)) \n            >   plot(dji,type=\"l\") \n            >   plot(ret_dji,type=\"l\") \n\n    ```", "```py\n>head (dji) \n           DJI.Close \n2010-01-04 10583.96 \n2010-01-05 10572.02 \n2010-01-06 10573.68 \n2010-01-07 10606.86 \n2010-01-08 10618.19 \n2010-01-11 10663.99 \n\n>tail (dji) \n           DJI.Close \n2015-12-23 17602.61 \n2015-12-24 17552.17 \n2015-12-28 17528.27 \n2015-12-29 17720.98 \n2015-12-30 17603.87 \n2015-12-31 17425.03 \n\n```", "```py\ndji<- as.ts (dji)  \n\n```", "```py\nmodel<- dwt (dji, filter=\"la8\", n.levels=3) \n\n```", "```py\n>model \n\n```", "```py\n>model \n\n```", "```py\n>model@W          # to extract wavelets coefficients \n>model@V          # to extract scaling coefficients \n\n```", "```py\n> model@W$W1      # to extract first level of wavelet coefficients \n> model@V$V1      # to extract first level of scaling coefficients \n\n```", "```py\n> plot (model)  \n\n```", "```py\nmodel<- dwt (dji, filter=\"haar\", n.levels=3) \n> plot (model)  \n\n```", "```py\nimodel<- idwt(model, fast=TRUE) \n\n```", "```py\n> class(model) \n[1] \"dwt\" \nattr(,\"package\") \n[1] \"wavelets\"   \n>  class(imodel) \n[1] \"ts\" \n\n```", "```py\n> model <- mra(dji, filter=\"la8\", n.levels=3) \n\n```", "```py\n> model <- modwt(dji, filter=\"la8\", n.levels=5) \n\n```", "```py\n>plot.modwt(model) \n\n```", "```py\ninstall.packages('fft') \n\n```", "```py\nlibrary(fft) \n\n```", "```py\n> model<- fft(dji)  \n\n```", "```py\n>rp = Re(model) \n>ip = Im(model) \n\n```", "```py\n>absmodel<- abs(model) \n\n```", "```py\n>plot(absmodel) \n\n```", "```py\n>norm_absmodel<- absmodel[1:(length(dji)/2)] \n\n```", "```py\nAngle = atan2(ip, rp) \n\n```", "```py\n>spec_density<- spectrum(dji, method = c(\"pgram\", \"ar\")) \n\n```", "```py\n> model <-  hilbert(dji, 1) \n\n```", "```py\n> summary(model) \n      V1          \n Length:2555 \n Class :complex \n Mode  :complex \n\n```", "```py\n>rp<- Re(model)   \n>ip<- Im(model) \n\n```", "```py\n>ifreq(dji,1,ylim=c(0,0.00001)) \n\n```", "```py\n>ifreq(dji, 1 ,phase=\"TRUE\",ylim=c(-0.5,1)) \n\n```", "```py\n> output = ifreq(dji, 1 ,plot=FALSE) \n\n```", "```py\n>freq<- output$f \n>phase<- output$p \n\n```", "```py\n>phase_difference<- phase1 - phase2 \n\n```"]