- en: Chapter 3. Asset Pricing Models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Covered in this chapter are the problem of absolute pricing (*Cochrane 2005*)
    and how the value of assets with uncertain payments is determined based on their
    risk. [Chapter 2](ch02.html "Chapter 2. Portfolio Optimization"), *Portfolio Optimization*,
    modeled the decision-making of an individual investor based on the analysis of
    the assets' return in a mean variance framework. This chapter focuses on whether
    or not equilibrium can exist in financial markets, what conditions are needed,
    and how it can be characterized. Two main approaches—**Capital Asset Pricing Model**
    and **Arbitrage Pricing Theory**—will be presented, which use completely different
    assumptions and argumentation, but give similar descriptions of the return evolution.
  prefs: []
  type: TYPE_NORMAL
- en: According to the concept of **relative pricing**, the riskiness of the underlying
    product is already involved in its price and, so, it does not play any further
    role in the pricing of the derived instrument; this will be presented in [Chapter
    6](ch06.html "Chapter 6. Derivatives Pricing"), *Derivatives Pricing*. The no-arbitrage
    argument will force consistency in the prices of the derivative and underlying
    assets there.
  prefs: []
  type: TYPE_NORMAL
- en: The objective of this chapter is to present the relationship between the asset
    return and the risk factor. We will explain how to download and clean data from
    multiple sources. **Linear regression** is used to measure the dependence and
    the connected **hypothesis test** shows the significance of the results. The one-factor
    index model is tested through a two-step regression process and the financial
    interpretation of the results is shown.
  prefs: []
  type: TYPE_NORMAL
- en: Capital Asset Pricing Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first type of model explaining asset prices uses economic considerations.
    Using the results of the portfolio selection presented in the previous chapter,
    the **Capital Asset Pricing Model** (**CAPM**) gives an answer to the question
    asking what can be said of the market by aggregating the rational investors''
    decisions and, also, by what assumption the equilibrium would evolve. *Sharpe*
    (*1964*) and *Lintner* (*1965*) prove the existence of the equilibrium subject
    to the following assumptions:'
  prefs: []
  type: TYPE_NORMAL
- en: Individual investors are price takers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Single-period investment horizon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Investments are limited to traded financial assets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No taxes and no transaction costs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Information is costless and available to all investors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Investors are rational mean-variance optimizers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Homogenous expectations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In a world where these assumptions are held, all investors will hold the same
    portfolio of risky assets, which is the market portfolio. The market portfolio
    contains all securities and the proportion of each security is its market value
    as a percentage of the total market value. The risk premium on the market depends
    on the average risk aversion of all market participants. The best-known consequence
    of the resulting equilibrium is a linear relationship between market risk premium
    and the individual security''s risk:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Capital Asset Pricing Model](img/0933OS_03_A.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '`E(r[i])` is the expected return of a certain security, `r[f]` is the risk-free
    return, `E(r[m])` is the expected return of the market portfolio. The risk in
    CAPM is measured by the beta `β[i]`, which is a function of the individual security''s
    covariance with the market and the variance of the market return:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Capital Asset Pricing Model](img/0933OS_03_B.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '`Cov[i,m]` is the covariance between the given security''s return and the market
    return, while `Var[m]` is the variance of the market return.'
  prefs: []
  type: TYPE_NORMAL
- en: Beta has numerous interpretations. On the one hand, beta shows the sensitivity
    of a stock's return to the return of the market portfolio and, on the other, a
    certain security's beta shows how much risk that security adds to the market portfolio.
    The CAPM states that the market gives a higher return only in cases of higher
    systematic risk since unsystematic risk can be diversified, so no risk premium
    can be paid after that.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we rearrange equation **(1)**, we will get a linear equation of the so called
    **Security Market Line** (**SML**):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Capital Asset Pricing Model](img/0933OS_03_C.jpg)'
  prefs: []
  type: TYPE_IMG
- en: CAPM states that in equilibrium, every security should be on the SML; so, this
    equation holds for each security or portfolio even if they are not efficient.
    If this equation is not fulfilled, there is a lack of equilibrium on the market.
    For example, if a security's return on the market is higher than it should be
    according to the CAPM, every investor has to change the composition of his/her
    portfolio in order to decrease the security's return and fulfill the above equation.
  prefs: []
  type: TYPE_NORMAL
- en: Arbitrage Pricing Theory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The **Arbitrage Pricing Theory** (**APT**) of *Ross* (*1977*) is also used
    in finance to determine the return of different securities. The APT states that,
    in equilibrium, no arbitrage opportunity can exist and, also, that the expected
    return of an asset is the linear combination of multiple random factors (*Wilmott
    2007*). These factors can be various macro-economic factors or market indices.
    In this model, each factor has a specific beta coefficient:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Arbitrage Pricing Theory](img/0933OS_03_D.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '`α[i]` is a constant denoting security `i`; `β[ij]` is the sensitivity of security
    `i` to factor `j`; `F[j]` is the systematic factor; while `e[i]` is the security''s
    unsystematic risk, with zero mean.'
  prefs: []
  type: TYPE_NORMAL
- en: 'A central notion of the APT is the **factorportfolio**. A factorportfolio is
    a well-diversified portfolio which reacts to only one of the factors, so it has
    zero beta for all other factors, and a beta of 1 to that specified factor. Assuming
    the existence of the factorportfolios, it can be shown using the arbitrage argument
    that any well-diversified portfolio''s risk premium is equal to the weighted sum
    of the factorportfolios'' risk premium (*Medvegyev-Száz 2010*). If it is to hold
    for every well-diversified portfolio, the expected return of an individual security
    will be built up by the risk premium of the factor (`RP[j]`) and its sensitivity
    to the factor (`β[ij]`):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Arbitrage Pricing Theory](img/0933OS_03_E.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In case there is only one factor in the APT model, which is the return of the
    market portfolio, we call the model the index model. Moreover, if `α[i]` is zero,
    we will get the exact pricing formula of CAPM.
  prefs: []
  type: TYPE_NORMAL
- en: 'The differences between the CAPM and APT are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: CAPM is an equilibrium model, building on economic considerations, while APT
    is a statistical model, using arbitrage arguments.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the case of APT, an expected return-beta relation can be given if one has
    a well-diversified portfolio so that this can be constructed in practice by having
    a large number of assets in the portfolio. While, in the case of CAPM, the so-called
    market portfolio cannot be constructed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CAPM states that the expected return-beta relation holds for every security,
    while APT states that this is for almost every security.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When there is mispricing on the market, in the case of APT, it is enough if
    only a few investors change the portfolio structure to get the fair price of a
    security; while, in the case of CAPM, every investor has to do so.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Beta estimation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The sensitivity of a security towards a factor can be estimated from past price
    movements. We will estimate the beta from the one-factor index model. First, we
    show the process of collecting and synchronizing data from different sources and
    then present the simple beta estimation method and, at last, a linear regression
    model is built.
  prefs: []
  type: TYPE_NORMAL
- en: Data selection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We download the time series of the price of a given stock, for example Google,
    and the time series of the price of the market index, the S&P 500, from June 1^(st)
    2009 to June 1^(st) 2013 from Quandl, as discussed in the second chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting `G` is a variable containing 6 variables, from which we only
    need the `Close` values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The same code is run for the S&P 500 data, although we deal with the `Adjusted
    Close` values now:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Adjusted closing prices are used as they have been corrected with dividends
    and splits. As Google paid no dividend and had no split in the period, such adjustment
    is unnecessary in this example. We will also need the time series of the risk-free
    return, which will be the 1 month USD LIBOR rate. Although we will be working
    with daily returns, the 1 month rates can be regarded as short-term rates and
    are less affected by random noises than the overnight rates.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see from the previous Quandl calls, each time, the series was fetched
    from different data providers. This also results in some differences in the data
    structure as we have `Close` values with Google, `Adjusted Close` values with
    S&P 500, and simply `Values` for the `LIBOR` data. The length of the vectors does
    not seem to be equal either:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'This means that some time series also include dates that are omitted from the
    others. Let us define the `intersect` function of the dates and filter the results
    to only those cells after re-downloading the values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'As the `intersect` function can only be applied to two vectors, we call the
    `Reduce` function to identify the common dates in the three time series:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let us simply filter all three data frames to the relevant cells to get
    the vectors:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'After downloading and cleaning the data, you have to calculate the log-returns
    (`r[t]`) of the stock and the market index using the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Data selection](img/0933OS_03_F.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '`S[t]` is the market price on day `t`. In R, this would be expressed as a function
    (see [Chapter 2](ch02.html "Chapter 2. Portfolio Optimization"), *Portfolio Optimization*,
    for details):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'For the next step, the risk premiums should be determined by subtracting the
    risk-free daily log-return (`r[ft]`). As the `LIBOR` rates are quoted on a money-market
    basis—actual/360 day-count convention—and the time series contains the rates in
    percentage, the following formula is to be used:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Data selection](img/0933OS_03_G.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '`t` and `t-1` refer to the dates, so the difference is the number of days between
    the two closing values, that is usually 1, in our case, or more if there are non-working
    days in-between. The results can be computed in R easily using the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'We have computed `(t+1)`—`t` by computing the `diff` between the common dates,
    just described. And the risk premium (`R[it]`) is given by:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Data selection](img/0933OS_03_H.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Simple beta estimation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once we have both time series; the individual asset''s (Google, in our case)
    and the market''s (S&P 500) risk premium, beta can be calculated based on equation
    **(2)**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'This could be also simplified by adding a new function to describe the risk
    premium:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: This way of calculating beta differs from equation **(2)**, since we've used
    the risk premiums instead of the returns. As CAPM and APT are both one-period
    models, correction with the risk-free return on both sides does not affect the
    result. On the other hand, upon estimating beta from the time series, we have
    to decide whether to use returns or risk premiums in the model as the parameters
    will differ, except for in the case of a constant risk-free return (*Medvegyev-Száz
    2010*). We follow the previously described method as we would follow the financial
    literature, but we have to add that Merryl Lynch calculates betas from returns.
  prefs: []
  type: TYPE_NORMAL
- en: Beta estimation from linear regression
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can use linear regression in order to estimate beta, where the explanatory
    variable is the **Market Risk Premium** (**MRP**), while the dependent variable
    will be the risk premium of the security. So, the regression equation has the
    following form, which is the formula for the **Security Characteristic Line**
    (**SCL**):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Beta estimation from linear regression](img/0933OS_03_I.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We will use the **Ordinary Least Squared** (**OLS**) estimation to determine
    the linear regression model of equation **(8)**. The intercept of the characteristic
    line is `α`, the part of the stock return unexplained by the market factor. The
    slope of the function (equation **(8)**) shows the sensitivity toward the market
    factor, measured by beta.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can easily compute the regression model using the built-in `lm` command
    in R:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: We have not only saved the results, but also printed them because of the extra
    braces we've added. With the help of the model, it is also easy to plot the characteristic
    line of Google on a chart that shows the risk premium of Google as a function
    of the market risk premium.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'The following figure shows the results. On the x axis there is the MRP, while
    the y axis shows the risk premium of the Google stock:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Beta estimation from linear regression](img/0933_03_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'According to CAPM, `α` equals to zero, therefore we will assume `α[i]` to be
    0, then we release this restriction. We can force `α` to be zero by passing `-1`
    in the model:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'The summary of the results of the regression model in R are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: The high `F-statistic` value shows that the model has explaining power, beta
    proves to be significant, and the null-hypothesis—beta would be zero—is to be
    rejected at any significance level. These results are in line with CAPM.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we''re running the test by releasing the assumption of zero `α`, we can
    see that the intercept does not differ significantly from zero. The high `p-value`
    value shows that we cannot reject the null-hypothesis at any usual (above 90%)
    significance level:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: We can check the residuals on a joint plot as shown in the following figure.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '![Beta estimation from linear regression](img/0933_03_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can also find built-in functions in the **PerformanceAnalytics** package,
    `CAPM.alpha` and `CAPM.beta`, that calculate the parameters alpha and beta for
    a given asset. The requested parameters are the series of the asset's and the
    benchmark asset's return and the risk-free rate.
  prefs: []
  type: TYPE_NORMAL
- en: Model testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first tests on the beta-return relationship used two-phase linear regression
    (*Lintner 1965*). The first regression estimates the security characteristic line
    and beta of the individual securities as described above. In the second regression,
    the security''s risk premium is the dependent variable, whereas beta is the explanatory
    variable. The null-hypothesis assumes the intercept to be zero and the slope of
    the curve to be the market risk premium, which is estimated as the average of
    the sample. The test can be extended by an additional explanatory variable: the
    individual variance.'
  prefs: []
  type: TYPE_NORMAL
- en: Data collection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will present the test using a sample of the US market in the pre-crisis
    period between 2003 and 2007\. As daily data includes more short-term effects,
    we will apply the test on monthly returns calculated from the daily time series.
    So, we need the time series of the daily price of more stocks; let us download
    the prices of the first 100 stocks from S&P 500 in alphabetical order between
    2003 and 2007:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Please note that the previous list includes only 96 stock names as four stocks
    had too many missing values in the referenced time interval.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us download these datasets from a uniform database with the `tseries` package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'So, we call the `get.hist.quote` function to each `symbol` to download the
    Adjusted close data from the default (Yahoo!) provider without any details about
    the progress (`quiet`). Please note that the fetching process might take some
    time and will result in a list of 96 time series. Now, let us also update `SP500`
    and `LIBOR` for the new time interval and define the new intersect for the common
    dates:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'As explained above, we need a monthly dataset instead of the downloaded daily
    values; let us pick the first values in each month. To this end, we need to save
    the list of the common dates in the `Date` format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we need to add the day of the month plus the year and month concatenated
    to the very same data frame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we simply apply the `min` function in each group of `my` (that stands for
    the same month in the same year) on the `day` variable, which stands for the day
    of the month:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'We have to merge the results with the dates again:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'And filter the `res` data frame again to the above identified dates:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, after merging the list with a time series, it is pretty straightforward
    to convert the list to the usual `data.frame` format with pretty column names:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'That would result in a data frame of 48 rows and 96 columns. We still need
    to compute the returns for each downloaded stock on a column basis, but, to this
    end, `rft` should also be updated based on the first values in each month:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Let us also filter the S&P 500 values as a monthly data set:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Modeling the SCL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using the time series of the stocks' returns, we can calculate the beta for
    each security. Consequently, we will have the vector of the risk premium as the
    average of the sample data and a vector containing the betas.
  prefs: []
  type: TYPE_NORMAL
- en: 'The second regression to be estimated is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Modeling the SCL](img/0933OS_03_J.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Computing the beta for each security and also the mean of the returns in one
    go can be done with a basic loop after computing the `riskpremium` parameter of
    each stock and coercing that to make it a `data.frame`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'So, iterating through all symbols, let us plot the returned list of computed
    betas and the averages of the risk premiums as shown in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '![Modeling the SCL](img/0933_03_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'That model can be described as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'According to the above results, the intercept is positive, but it does not
    differ significantly from zero. The slope of the SML equals to 0.5528%—on a monthly
    basis—that is slightly lower than expected, as according to the null-hypothesis,
    it should be the average of the market risk premium of the period: 0.69%. However,
    this difference is also statistically insignificant. Based on the test, the beta
    return relationship can not be rejected.'
  prefs: []
  type: TYPE_NORMAL
- en: Testing the explanatory power of the individual variance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The test can be developed further, involving the unsystematic risk tested as
    a second explanatory variable. The individual risk of a security is to be calculated
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing the explanatory power of the individual variance](img/0933OS_03_K.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'So, first we have to calculate the vector of the variances, then we get the
    vector of the individual variances. The regression equation to be estimated is
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing the explanatory power of the individual variance](img/0933OS_03_L.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Till now, we update the above loop created for computing the betas and means
    in `r`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'Although this loop is almost identical to the previous one, most of the body
    was rewritten and reformatted based on **DRY** (**Don''t Repeat Yourself**) principles.
    So, first we have stored the values of `symbol` in `stock` and also computed `beta`
    before returning the results concatenated with `c`. Now, we''ve also added the
    `na.rm = TRUE` parameter to the `mean` and `var` functions to remove possible
    missing values before computations. Our model now looks as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: Interestingly, the new parameter changed the regression coefficient of beta
    to negative. On the other hand, however, the risk parameter proved to be insignificant
    on a 95% significance level. As CAPM concludes that no risk premium is to be paid
    for diversifiable risk, the null-hypothesis assumes `β[2]` to be zero. Here, we
    cannot reject this hypothesis.
  prefs: []
  type: TYPE_NORMAL
- en: Miller and Scholes (1972) explained the first CAPM tests' results—`α` differed
    significantly from zero and the slope was much lower than the average of the market
    risk premium—with statistical reasons. As the explanatory variable of the second
    regression (betas) derived from an estimation—from the first regression—it contained
    statistical error. This estimation bias causes the observed significant intercept
    and the flatter than expected SML. This statement can be investigated on simulated
    returns. Further details on simulations can be found in the next two chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, the systematic risk of asset returns was measured by their
    contribution to the market's variance—the beta. We used linear regression to quantify
    this relationship. Hypothesis tests were run in order to confirm the statements
    of the capital assets pricing model.
  prefs: []
  type: TYPE_NORMAL
