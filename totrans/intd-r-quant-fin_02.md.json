["```py\nminvariance <- function(assets, mu = 0.005) {\n    return  <- log(tail(assets, -1) / head(assets, -1))\n    Q       <- rbind(cov(return), rep(1, ncol(assets)),\n               colMeans(return))\n    Q       <- cbind(Q, rbind(t(tail(Q, 2)), matrix(0, 2, 2)))\n    b       <- c(rep(0, ncol(assets)), 1, mu)\n    solve(Q, b)\n}\n```", "```py\n> library(Quandl)\n> IT <- Quandl('USER_1KR/1KT',\n+           start_date = '2008-01-01', end_date = '2012-12-31')\nWarning message:\nIn Quandl(\"USER_1KR/1KT\", start_date = \"2008-01-01\", end_date = \"2012-12-31\"):\n\n```", "```py\n> str(IT)\n'data.frame':  1259 obs. of  6 variables:\n $ Date: Date, format: \"2008-01-02\" \"2008-01-03\" ...\n $ AAPL: num  199 195 191 181 180 ...\n $ GOOG: num  693 685 680 654 653 ...\n $ MSFT: num  35.8 35.2 35.2 34.5 34.7 ...\n $ IBM : num  109 105 104 100 100 ...\n $ T   : num  41.5 41.2 41 41.1 41.3 ...\n\n```", "```py\n> assets <- IT[, -1]\n> return <- log(tail(assets, -1) / head(assets, -1))\n\n```", "```py\n> head(return)\n AAPL         GOOG          MSFT          IBM             T\n2 -0.019560774 -0.011044063 -0.0160544217 -0.038916144 -0.0072534167\n3 -0.020473237 -0.008161516 -0.0008521517 -0.008429976 -0.0043774389\n4 -0.054749384 -0.038621208 -0.0183544011 -0.036242948  0.0007309051\n5 -0.006142967 -0.001438475  0.0046202797 -0.001997005  0.0051014322\n6 -0.050317921 -0.035793820 -0.0396702524 -0.023154566 -0.0514590970\n7  0.036004806  0.023482511  0.0292444412 -0.003791959 -0.0123204844\n\n```", "```py\n> Q <- rbind(cov(return), rep(1, ncol(assets)), colMeans(return))\n\n```", "```py\n> round(Q, 5)\n AAPL    GOOG     MSFT     IBM        T\nAAPL 0.00063 0.00034  0.00025 0.00023  0.00022\nGOOG 0.00034 0.00046  0.00023 0.00019  0.00018\nMSFT 0.00025 0.00023  0.00034 0.00018  0.00018\nIBM  0.00023 0.00019  0.00018 0.00024  0.00016\nT    0.00022 0.00018  0.00018 0.00016  0.00028\n 1.00000 1.00000  1.00000 1.00000  1.00000\n 0.00075 0.00001 -0.00024 0.00044 -0.00018\n\n```", "```py\n> Q <- cbind(Q, rbind(t(tail(Q, 2)), matrix(0, 2, 2)))\n> round(Q, 5)\n AAPL    GOOG     MSFT     IBM        T \nAAPL 0.00063 0.00034  0.00025 0.00023  0.00022 1  0.00075\nGOOG 0.00034 0.00046  0.00023 0.00019  0.00018 1  0.00001\nMSFT 0.00025 0.00023  0.00034 0.00018  0.00018 1 -0.00024\nIBM  0.00023 0.00019  0.00018 0.00024  0.00016 1  0.00044\nT    0.00022 0.00018  0.00018 0.00016  0.00028 1 -0.00018\n 1.00000 1.00000  1.00000 1.00000  1.00000 0  0.00000\n 0.00075 0.00001 -0.00024 0.00044 -0.00018 0  0.00000\n\n```", "```py\n> mu <- 0.005\n> b  <- c(rep(0, ncol(assets)), 1, mu)\n> b\n[1] 0.000 0.000 0.000 0.000 0.000 1.000 0.005\n\n```", "```py\n> solve(Q, b)\n AAPL          GOOG          MSFT           IBM             T\n 2.3130600636 -1.0928257246 -2.7830264740  4.9871895547 -2.4243974197\n-0.0001254637 -1.2082468413\n\n```", "```py\n> minvariance(IT[, -1])\n AAPL          GOOG          MSFT           IBM             T \n 2.3130600636 -1.0928257246 -2.7830264740  4.9871895547 -2.4243974197 \n-0.0001254637 -1.2082468413\n\n```", "```py\nfrontier <- function(assets) {\n    return <- log(tail(assets, -1) / head(assets, -1))\n    Q  <- cov(return)\n    n  <- ncol(assets)\n    r  <- colMeans(return)\n    Q1 <- rbind(Q, rep(1, n), r)\n    Q1 <- cbind(Q1, rbind(t(tail(Q1, 2)), matrix(0, 2, 2)))\n    rbase <- seq(min(r), max(r), length = 100)\n    s  <- sapply(rbase, function(x) {\n        y <- head(solve(Q1, c(rep(0, n), 1, x)), n)\n        y %*% Q %*% y\n    })\n    plot(s, rbase, xlab = 'Return', ylab = 'Variance')\n}\n```", "```py\n> library(timeSeries)\n> IT <- timeSeries(IT[, 2:6], IT[, 1])\n\n```", "```py\n> log(lag(IT) / IT)\n\n```", "```py\n> IT_return <- returns(IT)\n\n```", "```py\n> chart.CumReturns(IT_return, legend.loc = 'topleft', main = '')\n\n```", "```py\n> library(fPortfolio)\n> plot(portfolioFrontier(IT_return))\n\nMake a plot selection (or 0 to exit):\n\n1:   Plot Efficient Frontier\n2:   Add Minimum Risk Portfolio\n3:   Add Tangency Portfolio\n4:   Add Risk/Return of Single Assets\n5:   Add Equal Weights Portfolio\n6:   Add Two Asset Frontiers [LongOnly Only]\n7:   Add Monte Carlo Portfolios\n8:   Add Sharpe Ratio [Markowitz PF Only]\n\n```", "```py\n> Spec = portfolioSpec()\n> setSolver(Spec) = \"solveRshortExact\"\n> Frontier <- portfolioFrontier(as.timeSeries(IT_return),\n+                 Spec, > constraints = \"Short\")\n> frontierPlot(Frontier, col = rep('orange', 2), pch = 19)\n> monteCarloPoints(Frontier, mcSteps = 1000, cex = 0.25, pch = 19)\n> grid()\n\n```", "```py\n> n <- 6; mu <- 0.005\n> Q <- cbind(cov(return), rep(0, n - 1))\n> Q <- rbind(Q, rep(0, n))\n\n```", "```py\n> r <- c(colMeans(return), rf)\n\n```", "```py\n> Q <- rbind(Q, rep(1, n), r)\n> Q <- cbind(Q, rbind(t(tail(Q, 2)), matrix(0, 2, 2)))\n> b <- c(rep(0, n), 1, mu)\n\n```", "```py\n> round(Q, 6)\n AAPL     GOOG      MSFT      IBM         T                 r\nAAPL 0.000630 0.000338  0.000249 0.000233  0.000218 0e+00 1  0.000748\nGOOG 0.000338 0.000462  0.000226 0.000186  0.000182 0e+00 1  0.000008\nMSFT 0.000249 0.000226  0.000341 0.000178  0.000177 0e+00 1 -0.000236\nIBM  0.000233 0.000186  0.000178 0.000240  0.000157 0e+00 1  0.000439\nT    0.000218 0.000182  0.000177 0.000157  0.000283 0e+00 1 -0.000179\n 0.000000 0.000000  0.000000 0.000000  0.000000 0e+00 1  0.000100\n 1.000000 1.000000  1.000000 1.000000  1.000000 1e+00 0  0.000000\nr    0.000748 0.000008 -0.000236 0.000439 -0.000179 1e-04 0  0.000000\n> b\n[1] 0.000 0.000 0.000 0.000 0.000 0.000 1.000 0.005\n\n```", "```py\n> w <- solve(Q, b)\n> w <- head(w, -3)\n> w / sum(w)\n AAPL       GOOG       MSFT        IBM          T\n-10.154891   4.990912  12.347784 -18.010579  11.826774\n\n```", "```py\n> Spec <- portfolioSpec()\n> setSolver(Spec) <- \"solveRshortExact\"\n> setTargetReturn(Spec) <- mean(colMeans(IT_return))\n> efficientPortfolio(IT_return, Spec, 'Short')\n> minvariancePortfolio(IT_return, Spec, 'Short')\n> minriskPortfolio(IT_return, Spec)\n> maxreturnPortfolio(IT_return, Spec)\n\n```"]