["```py\n>>> from pyalgotrading.broker.broker_connection_zerodha import BrokerConnectionZerodha\n```", "```py\n>>> api_key = \"<your-api-key>\"\n>>> api_secret = \"<your-api-secret>\"\n>>> broker_connection = BrokerConnectionZerodha(api_key, \n                                                api_secret)\n```", "```py\nInstalling package kiteconnect via pip...\nPlease login to this link to generate your request token: https://kite.trade/connect/login?api_key=<your-api-key>&v=3\n```", "```py\nhttps://127.0.0.1/?request_token=H06I6Ydv95y23D2Dp7NbigFjKweGwRP7&action=login&status=success\n```", "```py\n>>> request_token = \"<your-request-token>\"\n>>> broker_connection.set_access_token(request_token)\n```", "```py\n>>> instrument = broker_connection.get_instrument('NSE', \n                                                  'TATASTEEL')\n>>> historical_data = broker_connection.get_historical_data(\n                            instrument=instrument, \n                            candle_interval='minute', \n                            start_date='2020-01-01', \n                            end_date='2020-01-01')\n>>> historical_data\n```", "```py\n>>> historical_data.columns\n```", "```py\n>>> Index(['timestamp', 'open', 'high', 'low', 'close', 'volume'], \n            dtype='object')\n```", "```py\n>>> from pyalgotrading.utils.func import plot_candlestick_chart, PlotType\n```", "```py\n>>> candle_green = historical_data.iloc[:1,:]    \n# Only 1st ROW of historical data\n>>> plot_candlestick_chart(candle_green, \n                           PlotType.JAPANESE, \n                           \"A 'Green' Japanese Candle\")\n```", "```py\n# A 'Red' Japanese Candle\n>>> candle_red = historical_data.iloc[1:2,:]     \n# Only 2nd ROW of historical data\n>>> plot_candlestick_chart(candle_red, \n                           PlotType.OHLC, \n                           \"A 'Red' Japanese Candle\")\n```", "```py\n>>> plot_candlestick_chart(historical_data, \n                           PlotType.OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'NSE:TATASTEEL | 1st Jan, 2020 | '\n                           'Candle Interval: 1 Minute')\n```", "```py\n>>> instrument2 = broker_connection.get_instrument('NSE', 'INFY')\n>>> historical_data = \\\n        broker_connection.get_historical_data(instrument2, \n                                              'minute', \n                                              '2020-01-01', \n                                              '2020-01-01')\n>>> plot_candlestick_chart(historical_data, \n                           PlotType.OHLC,\n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'NSE:INFY | 1st Jan, 2020 | '\n                           'Candle Interval: 1 Minute')\n```", "```py\n>>> instrument3 = broker_connection.get_instrument('NSE',\n                                                   'ICICIBANK')\n>>> historical_data = \n            broker_connection.get_historical_data(instrument3, \n                                                  'minute', \n                                                  '2020-01-01', \n                                                  '2020-01-01')\n>>> plot_candlestick_chart(historical_data, PlotType.OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'NSE:ICICIBANK | 1st Jan, 2020 | '\n                           'Candle Size: 1 Minute')\n```", "```py\n>>> from pyalgotrading.utils.func import plot_candlestick_chart, PlotType\n```", "```py\n>>> instrument = broker_connection.get_instrument('NSE', \n                                                  'TATASTEEL')\n```", "```py\n>>> historical_data_1minute = \\\n        broker_connection.get_historical_data(instrument, \n                                              'minute', \n                                              '2020-01-01', \n                                              '2020-01-01')\n>>> plot_candlestick_chart(historical_data_1minute, \n                           PlotType.OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           '1st Jan, 2020 | '\n                           'Candle Interval: 1 Minute')\n```", "```py\n>>> historical_data_3minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '3minute', \n                                                  '2020-01-01', \n                                                  '2020-01-01')\n>>> plot_candlestick_chart(historical_data_3minutes, \n                           PlotType.OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           '1st Jan, 2020 | '\n                           'Candle Interval: 3 Minutes')\n```", "```py\n>>> historical_data_5minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '5minute', \n                                                  '2020-01-01', \n                                                  '2020-01-01')\n>>> plot_candlestick_chart(historical_data_5minutes, \n                           PlotType.OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           '1st Jan, 2020 | '\n                           'Candle Interval: 5 Minutes')\n```", "```py\n>>> historical_data_10minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '10minute', \n                                                  '2020-01-01', \n                                                  '2020-01-01')\n>>> plot_candlestick_chart(historical_data_10minutes, \n                           PlotType.OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           '1st Jan, 2020 | '\n                           'Candle Interval: 10 Minutes')\n```", "```py\n>>> historical_data_15minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '15minute', \n                                                  '2020-01-01', \n                                                  '2020-01-01')\n>>> plot_candlestick_chart(historical_data_15minutes, \n                           PlotType.OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           '1st Jan, 2020 | '\n                           'Candle Interval: 15 Minutes')\n```", "```py\n>>> historical_data_30minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '30minute', \n                                                  '2020-01-01', \n                                                  '2020-01-01')\n>>> plot_candlestick_chart(historical_data_30minutes, \n                           PlotType.OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           '1st Jan, 2020 | '\n                           'Candle Interval: 30 Minutes')\n```", "```py\n>>> historical_data_1hour = \\\n            broker_connection.get_historical_data(instrument, \n                                                  'hour', \n                                                  '2020-01-01', \n                                                  '2020-01-01')\n>>> plot_candlestick_chart(historical_data_1hour, \n                           PlotType.OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           '1st Jan, 2020 | '\n                           'Candle Interval: 1 Hour')\n```", "```py\n>>> historical_data_day = \\\n            broker_connection.get_historical_data(instrument, \n                                                  'day', \n                                                  '2020-01-01', \n                                                  '2020-01-01')\n>>> plot_candlestick_chart(historical_data_day, \n                           PlotType.OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           '1st Jan, 2020 | '\n                           'Candle Interval: Day')\n```", "```py\n>>> from pyalgotrading.utils.func import plot_candlestick_chart, PlotType\n>>> from pyalgotrading.utils.candlesticks.linebreak import Linebreak\n```", "```py\n>>> instrument = broker_connection.get_instrument('NSE', \n                                                  'TATASTEEL')\n>>> historical_data_1minute = \\\n            broker_connection.get_historical_data(instrument, \n                                                  'minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_1minute_linebreak = \\\n                              Linebreak(historical_data_1minute)\n>>> historical_data_1minute_linebreak\n```", "```py\n       close       open                   timestamp\n0     424.00     424.95   2019-12-02 09:15:00+05:30\n1     424.50     424.00   2019-12-02 09:16:00+05:30\n2     425.75     424.80   2019-12-02 09:17:00+05:30\n3     423.75     424.80   2019-12-02 09:19:00+05:30\n4     421.70     423.75   2019-12-02 09:20:00+05:30 \n        …         …                ....\n1058  474.90     474.55   2019-12-31 10:44:00+05:30\n1059  471.60     474.55   2019-12-31 11:19:00+05:30\n1060  471.50     471.60   2019-12-31 14:19:00+05:30\n1061  471.35     471.50   2019-12-31 15:00:00+05:30\n1062  471.00     471.35   2019-12-31 15:29:00+05:30\n```", "```py\n>>> candle_green_linebreak = historical_data_1minute_linebreak.iloc[1:2,:]            \n# Only 2nd ROW of historical data\n>>> plot_candlestick_chart(candle_green_linebreak, \n                           PlotType.LINEBREAK, \n                           \"A 'Green' Line Break Candle\")\n```", "```py\n>>> candle_red_linebreak = historical_data_1minute_linebreak.iloc[:1,:]            \n# Only 1st ROW of historical data\n>>> plot_candlestick_chart(candle_red_linebreak, \n                           PlotType.LINEBREAK, \n                           \"A 'Red' Line Break Candle\")\n```", "```py\n>>> plot_candlestick_chart(historical_data_1minute_linebreak, \n                           PlotType.LINEBREAK, \n                           'Historical Data | '\n                           'Line Break Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 1 Minute', True)\n```", "```py\n>>> historical_data_3minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '3minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_3minutes_linebreak = \\\n                    Linebreak(historical_data_3minutes)\n>>> plot_candlestick_chart(historical_data_3minutes_linebreak, \n                           PlotType.LINEBREAK, \n                           'Historical Data | '\n                           'Line Break Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 3 Minutes', True)\n```", "```py\n>>> historical_data_5minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '5minute', \n                                                  '2019-12-01', \n                                                  '2020-01-10')\n>>> historical_data_5minutes_linebreak = \\\n                            Linebreak(historical_data_5minutes)\n>>> plot_candlestick_chart(historical_data_5minutes_linebreak, \n                           PlotType.LINEBREAK, \n                           'Historical Data | '\n                           'Line Break Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 5 Minutes', True)\n```", "```py\n>>> historical_data_10minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '10minute', \n                                                  '2019-12-01', \n                                                  '2020-01-10')\n>>> historical_data_10minutes_linebreak = \\\n                            Linebreak(historical_data_10minutes)\n>>> plot_candlestick_chart(historical_data_10minutes_linebreak, \n                           PlotType.LINEBREAK, \n                           'Historical Data | '\n                           'Line Break Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 10 Minutes', True)\n```", "```py\n>>> historical_data_15minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '15minute', \n                                                  '2019-12-01', \n                                                  '2020-01-10')\n>>> historical_data_15minutes_linebreak = \\\n                            Linebreak(historical_data_15minutes)\n>>> plot_candlestick_chart(historical_data_15minutes_linebreak, \n                           PlotType.LINEBREAK, \n                           'Historical Data | '\n                           'Line Break Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 15 Minutes', True)\n```", "```py\n>>> historical_data_30minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '30minute', \n                                                  '2019-12-01', \n                                                  '2020-01-10')\n>>> historical_data_30minutes_linebreak = \\\n                            Linebreak(historical_data_30minutes)\n>>> plot_candlestick_chart(historical_data_30minutes_linebreak, \n                           PlotType.LINEBREAK, \n                           'Historical Data | '\n                           'Line Break Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 30 Minutes', True)\n```", "```py\n>>> historical_data_1hour = \\\n            broker_connection.get_historical_data(instrument, \n                                                  'hour', \n                                                  '2019-12-01', \n                                                  '2020-01-10')\n>>> historical_data_1hour_linebreak = \\\n                                Linebreak(historical_data_1hour)\n>>> plot_candlestick_chart(historical_data_1hour_linebreak, \n                            PlotType.LINEBREAK, \n                           'Historical Data | '\n                           'Line Break Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 1 Hour', True)\n```", "```py\n>>> historical_data_day = \\\n            broker_connection.get_historical_data(instrument, \n                                                  'day', \n                                                  '2019-12-01', \n                                                  '2020-01-10')\n>>> historical_data_day_linebreak = \\\n                                Linebreak(historical_data_day)\n>>> plot_candlestick_chart(historical_data_day_linebreak, \n                           PlotType.LINEBREAK, \n                           'Historical Data | '\n                           'Line Break Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 1 Day', True)\n```", "```py\n>>> from pyalgotrading.utils.func import plot_candlestick_chart, PlotType\n>>> from pyalgotrading.utils.candlesticks.renko import Renko\n```", "```py\n>>> instrument = broker_connection.get_instrument('NSE', \n                                                  'TATASTEEL')\n>>> historical_data_1minute = \\\n            broker_connection.get_historical_data(instrument, \n                                                  'minute', \n                                                  '2019-12-01', \n                                                  '2020-01-10')\n>>> historical_data_1minute_renko = Renko(historical_data_1minute)\n>>> historical_data_1minute_renko\n```", "```py\n      close     open                     timestamp\n0     424.0   424.95     2019-12-02 09:15:00+05:30\n1     422.0   424.00     2019-12-02 09:20:00+05:30\n2     426.0   424.00     2019-12-02 10:00:00+05:30\n3     422.0   424.00     2019-12-02 10:12:00+05:30\n4     420.0   422.00     2019-12-02 15:28:00+05:30\n       ...     ...          ...        ...\n186   490.0   488.00     2020-01-10 10:09:00+05:30\n187   492.0   490.00     2020-01-10 11:41:00+05:30\n188   488.0   490.00     2020-01-10 13:31:00+05:30\n189   486.0   488.00     2020-01-10 13:36:00+05:30\n190   484.0   486.00     2020-01-10 14:09:00+05:30\n```", "```py\n>>> candle_green_renko = historical_data_1minute_renko.iloc[2:3,:]            \n# Only 3rd ROW of historical data\n>>> plot_candlestick_chart(candle_green_renko, \n                           PlotType.RENKO, \n                           \"A Green 'Renko' Candle\")\n```", "```py\n>>> plot_candlestick_chart(historical_data_1minute_renko, \n                           PlotType.RENKO, \n                           'Historical Data | '\n                           'Renko Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 1 Minute', True)\n```", "```py\n>>> historical_data_3minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '3minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_3minutes_renko = \\\n                                Renko(historical_data_3minutes)\n>>> plot_candlestick_chart(historical_data_3minutes_renko, \n                           PlotType.RENKO, \n                           'Historical Data | '\n                           'Renko Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 3 Minutes', True)\n```", "```py\n>>> historical_data_5minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '5minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_5minutes_renko = \\\n                                Renko(historical_data_5minutes)\n>>> plot_candlestick_chart(historical_data_5minutes_renko, \n                           PlotType.RENKO, \n                           'Historical Data | '\n                           'Renko Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 5 Minutes', True)\n```", "```py\n>>> historical_data_10minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '10minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_10minutes_renko = \\\n                                Renko(historical_data_10minutes)\n>>> plot_candlestick_chart(historical_data_10minutes_renko, \n                           PlotType.RENKO, \n                           'Historical Data | '\n                           'Renko Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 10 Minutes', True)\n```", "```py\n>>> historical_data_15minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '15minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_15minutes_renko = \\\n                               Renko(historical_data_15minutes)\n>>> plot_candlestick_chart(historical_data_15minutes_renko, \n                           PlotType.RENKO, \n                           'Historical Data | '\n                           'Renko Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 15 Minutes', True)\n```", "```py\n>>> historical_data_15minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '15minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_15minutes_renko = \\\n                                Renko(historical_data_15minutes)\n>>> plot_candlestick_chart(historical_data_15minutes_renko, \n                           PlotType.RENKO, \n                           'Historical Data | '\n                           'Renko Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 15 Minutes', True)\n```", "```py\n>>> historical_data_30minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '30minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_30minutes_renko = \\\n                                Renko(historical_data_30minutes)\n>>> plot_candlestick_chart(historical_data_30minutes_renko, \n                           PlotType.RENKO, \n                           'Historical Data | '\n                           'Renko Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 30 Minutes', True)\n```", "```py\n>>> historical_data_1hour = \\\n            broker_connection.get_historical_data(instrument, \n                                                  'hour', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_1hour_renko = Renko(historical_data_1hour)\n>>> plot_candlestick_chart(historical_data_1hour_renko, \n                           PlotType.RENKO, \n                           'Historical Data | '\n                           'Renko Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 1 Hour', True)\n```", "```py\n>>> historical_data_day = \\\n            broker_connection.get_historical_data(instrument, \n                                                  'day', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_day_renko = Renko(historical_data_day)\n>>> plot_candlestick_chart(historical_data_day_renko, \n                           PlotType.RENKO, \n                           'Historical Data | '\n                           'Renko Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: Day', True)\n```", "```py\n>>> from pyalgotrading.utils.func import plot_candlestick_chart, PlotType\n>>> from pyalgotrading.utils.candlesticks.heikinashi import HeikinAshi\n```", "```py\n>>> instrument = broker_connection.get_instrument('NSE', \n                                                  'TATASTEEL')\n>>> historical_data_1minute = \\\n            broker_connection.get_historical_data(instrument, \n                                                  'minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_1minute_heikinashi = \\\n                            HeikinAshi(historical_data_1minute)\n>>> historical_data_1minute_heikinashi\n```", "```py\n>>> candle_green_heikinashi = \\\n            historical_data_1minute_heikinashi.iloc[2:3,:]            \n# Only 3rd ROW of historical data\n>>> plot_candlestick_chart(candle_green_heikinashi, \n                           PlotType.HEIKINASHI, \n                           \"A 'Green' HeikinAshi Candle\")\n```", "```py\n# A 'Red' HeikinAshi Candle\n>>> candle_red_heikinashi = \\\n            historical_data_1minute_heikinashi.iloc[4:5,:]            \n# Only 1st ROW of historical data\n>>> plot_candlestick_chart(candle_red_heikinashi, \n                           PlotType.HEIKINASHI, \n                           \"A 'Red' HeikinAshi Candle\")\n```", "```py\n>>> plot_candlestick_chart(historical_data_1minute_heikinashi, \n                           PlotType.HEIKINASHI, \n                           'Historical Data | '\n                           'Heikin-Ashi Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 1 minute', True)\n```", "```py\n>>> historical_data_3minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '3minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_3minutes_heikinashi = \\\n                            HeikinAshi(historical_data_3minutes)\n>>> plot_candlestick_chart(historical_data_3minutes_heikinashi, \n                           PlotType.HEIKINASHI, \n                           'Historical Data | '\n                           'Heikin-Ashi Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 3 minutes', True)\n```", "```py\n>>> historical_data_5minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '5minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_5minutes_heikinashi = \\\n                           HeikinAshi(historical_data_5minutes)\n>>> plot_candlestick_chart(historical_data_5minutes_heikinashi, \n                            PlotType.HEIKINASHI, \n                           'Historical Data | '\n                           'Heikin-Ashi Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 5 minutes', True)\n```", "```py\n>>> historical_data_10minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '10minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_10minutes_heikinashi = \\\n                            HeikinAshi(historical_data_10minutes)\n>>> plot_candlestick_chart(historical_data_10minutes_heikinashi, \n                           PlotType.HEIKINASHI, \n                           'Historical Data | '\n                           'Heikin-Ashi Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 10 minutes', True)\n```", "```py\n>>> historical_data_15minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '15minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_15minutes_heikinashi = \\\n                           HeikinAshi(historical_data_15minutes)\n>>> plot_candlestick_chart(historical_data_15minutes_heikinashi, \n                           PlotType.HEIKINASHI, \n                           'Historical Data | '\n                           'Heikin-Ashi Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 15 minutes', True)\n```", "```py\n>>> historical_data_30minutes = \\\n            broker_connection.get_historical_data(instrument, \n                                                  '30minute', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_30minutes_heikinashi = \\\n                           HeikinAshi(historical_data_30minutes)\n>>> plot_candlestick_chart(historical_data_30minutes_heikinashi, \n                           PlotType.HEIKINASHI, \n                           'Historical Data | '\n                           'Heikin-Ashi Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 30 minutes', True)\n```", "```py\n>>> historical_data_1hour = \n        broker_connection.get_historical_data(instrument, \n                                              'hour', \n                                              '2019-12-01', \n                                              '2019-12-31')\n>>> historical_data_1hour_heikinashi = \\\n                           HeikinAshi(historical_data_1hour)\n>>> plot_candlestick_chart(historical_data_1hour_heikinashi, \n                           PlotType.HEIKINASHI, \n                           'Historical Data | '\n                           'Heikin-Ashi Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: 1 Hour', True)\n```", "```py\n>>> historical_data_day = \\\n            broker_connection.get_historical_data(instrument, \n                                                  'day', \n                                                  '2019-12-01', \n                                                  '2019-12-31')\n>>> historical_data_day_heikinashi = \\\n                                HeikinAshi(historical_data_day)\n>>> plot_candlestick_chart(historical_data_day_heikinashi, \n                           PlotType.HEIKINASHI, \n                           'Historical Data | '\n                           'Heikin-Ashi Candlesticks Pattern | '\n                           'NSE:TATASTEEL | '\n                           'Dec, 2019 | '\n                           'Candle Interval: Day', True)\n```", "```py\n$ pip install quandl \n```", "```py\n>>> from pyalgotrading.utils.func import plot_candlestick_chart, PlotType\n>>> import quandl\n```", "```py\n>>> facebook = quandl.get('WIKI/FB', \n                           start_date='2015-1-1', \n                           end_date='2015-3-31')\n>>> plot_candlestick_chart(facebook, \n                           PlotType.QUANDL_OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'FACEBOOK | '\n                           'Jan-March 2015 | '\n                           'Candle Interval: Day', True)\n```", "```py\n>>> amazon = quandl.get('WIKI/AMZN', \n                         start_date='2015-1-1', \n                         end_date='2015-3-31')\n>>> plot_candlestick_chart(amazon, \n                           PlotType.QUANDL_OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'AMAZON | '\n                           'Jan-March 2015 | '\n                           'Candle Interval: Day', True)\n```", "```py\n>>> apple = quandl.get('WIKI/AAPL', \n                        start_date='2015-1-1', \n                        end_date='2015-3-31')\n>>> plot_candlestick_chart(apple, \n                           PlotType.QUANDL_OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'APPLE | '\n                           'Jan-March 2015 | '\n                           'Candle Interval: Day', True)\n```", "```py\n>>> microsoft = quandl.get('WIKI/MSFT', \n                            start_date='2015-1-1', \n                            end_date='2015-3-31')\n>>> plot_candlestick_chart(microsoft, \n                           PlotType.QUANDL_OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'MICROSOFT | '\n                           'Jan-March 2015 | '\n                           'Candle Interval: Day', True)\n```", "```py\n>>> google = quandl.get('WIKI/GOOGL', \n                         start_date='2015-1-1', \n                         end_date='2015-3-31')\n>>> plot_candlestick_chart(google, \n                           PlotType.QUANDL_OHLC, \n                           'Historical Data | '\n                           'Japanese Candlesticks Pattern | '\n                           'GOOGLE | '\n                           'Jan-March 2015 | '\n                           'Candle Interval: Day', True)\n```"]