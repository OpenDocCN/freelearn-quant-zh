["```py\n> library(fOptions)\n> GBSOption(TypeFlag = \"c\", S = 900, X =950, Time = 1/4, r = 0.02,\n+   sigma = 0.22, b = 0.02)\nTitle:\n Black Scholes Option Valuation\n\nCall:\n GBSOption(TypeFlag = \"c\", S = 900, X = 950, Time = 1/4, r = 0.02,\n b = 0.02, sigma = 0.22)\n\nParameters:\n Value:\n TypeFlag c \n S        900 \n X        950 \n Time     0.25 \n r        0.02 \n b        0.02 \n sigma    0.22 \n\nOption Price:\n 21.79275\n\nDescription:\n Tue Jun 25 12:54:41 2013\n\n```", "```py\n> GBSOption(TypeFlag = \"p\", S = 900, X =950, Time = 1/4, r = 0.02, sigma = 0.22, b = 0.02)@price\n[1] 67.05461\n\n```", "```py\n> CRRBinomialTreeOption(TypeFlag = \"ce\", S = 900, X = 950,\n+   Time = 1/4, r = 0.02, b = 0.02, sigma = 0.22, n = 3)@price\n[1] 20.33618\n> CRRBinomialTreeOption(TypeFlag = \"pe\", S = 900, X = 950,\n+   Time = 1/4, r = 0.02, b = 0.02, sigma = 0.22, n = 3)@price\n[1] 65.59803\n\n```", "```py\n> CRRTree <- BinomialTreeOption(TypeFlag = \"ce\", S = 900, X = 950,\n+   Time = 1/4, r = 0.02, b = 0.02, sigma = 0.22, n = 3)\n> BinomialTreePlot(CRRTree, dy = 1, xlab = \"Time steps\",\n+   ylab = \"Number of up steps\", xlim = c(0,4))\n> title(main = \"Call Option Tree\")\n\n```", "```py\n> prices <- sapply(1:200, function(n) {\n+   CRRBinomialTreeOption(TypeFlag = \"ce\", S = 900, X = 950,\n+     Time = 1/4, r = 0.02, b = 0.02, sigma = 0.22, n = n)@price\n+ })\n\n```", "```py\n> str(prices)\n num [1:200] 26.9 24.9 20.3 23.9 20.4...\n\n```", "```py\n> price <- GBSOption(TypeFlag = \"c\", S = 900, X = 950, Time = 1/4, r = 0.02, sigma = 0.22, b = 0.02)@price\n\n```", "```py\n> plot(1:200, prices, type='l', xlab = 'Number of steps',\n+     ylab = 'Prices')\n> abline(h = price, col ='red')\n> legend(\"bottomright\", legend = c('CRR-price', 'BS-price'),\n+     col = c('black', 'red'), pch = 19)\n\n```", "```py\n> sapply(c('delta', 'gamma', 'vega', 'theta', 'rho'), function(greek)\n+   GBSGreeks(Selection = greek, TypeFlag = \"c\", S = 900, X = 950,\n+     Time = 1/4, r = 0.02, b = 0.02, sigma = 0.22)\n+ )\n delta         gamma          vega         theta           rho\n0.347874404   0.003733069 166.308230868 -79.001505841  72.82355323\n\n```", "```py\n> deltas <- sapply(c(1/4, 1/20, 1/50), function(t)\n+             sapply(500:1500, function(S)\n+               GBSGreeks(Selection = 'delta', TypeFlag = \"c\",\n+      S = S, X = 950, Time = t, r = 0.02, b = 0.02, sigma = 0.22)))\n\n```", "```py\n> plot(500:1500, deltas[, 1], ylab = 'Delta of call option',\n+    xlab = \"Price of the underlying (S)\", type = 'l')\n> lines(500:1500, deltas[, 2], col='blue')\n> lines(500:1500, deltas[, 3], col='red')\n> legend(\"bottomright\", legend = c('t=1/4', 't=1/20', 't=1/50'),\n+   col = c('black', 'blue', 'red'), pch = 19)\n\n```", "```py\n> straddles <- sapply(c('c', 'p'), function(type)\n+                sapply(500:1500, function(S)\n+                  GBSGreeks(Selection = 'delta', TypeFlag = type, S = S, X = 950, Time = 1/4, r = 0.02, b = 0.02, sigma = 0.22)))\n\n```", "```py\n> plot(500:1500, rowSums(straddles), type='l',\n+  xlab='Price of the underlying (S)', ylab = 'Delta of straddle')\n\n```", "```py\n> goog <- read.csv('goog_calls.csv')\n\n```", "```py\n> volatilites <- sapply(seq_along(goog$Strike), function(i)\n+  GBSVolatility(price = goog$Ask.Price[i], TypeFlag = \"c\",\n+  S = 866.2, X = goog$Strike[i], Time = 88/360, r = 0.02, b = 0.02))\n\n```", "```py\n> str(volatilites)\n num [1:76] 0.258 0.253 0.269 0.267 0.257...\n\n```", "```py\n> plot(x = goog$Strike, volatilites, type = 'p',\n+    ylab = 'Implied volatiltiy', xlab = 'Strike price (X)')\n\n```"]