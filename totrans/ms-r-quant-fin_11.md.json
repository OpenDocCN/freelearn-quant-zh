["```py\nportfolio <- read.csv(\"portfolio.csv\")\nmarket <- read.csv(\"market.csv\")\n\n```", "```py\nportfolio$issue <- as.Date(portfolio$issue, format = \"%m/%d/%Y\")\nportfolio$maturity <- as.Date(portfolio$maturity, format = \"%m/%d/%Y\")\nmarket$date <- as.Date(market$date, format = \"%m/%d/%Y\")\n\n```", "```py\nhead(portfolio)\n id account                        account_name volume\n1  1    cb_1 Cash and balances with central bank    930\n2  2   mmp_1             Money market placements   1404\n3  3   mmp_1             Money market placements    996\n4  4    cl_1                     Corporate loans    515\n5  5    cl_1                     Corporate loans    655\n6  6    cl_1                     Corporate loans    560\n ir_binding reprice_freq spread      issue   maturity\n1        FIX           NA      5 2014-09-30 2014-10-01\n2        FIX           NA      7 2014-08-30 2014-11-30\n3        FIX           NA     10 2014-06-15 2014-12-15\n4      LIBOR            3    301 2014-05-15 2016-04-15\n5      LIBOR            6    414 2014-04-15 2016-04-15\n6      LIBOR            3    345 2014-03-15 2018-02-15\n repayment payment_freq yieldcurve\n1    BULLET            1      EUR01\n2    BULLET            1      EUR01\n3    BULLET            1      EUR01\n4    LINEAR            3      EUR01\n5    LINEAR            6      EUR01\n6    LINEAR            3      EUR01\n\n```", "```py\nlevels(portfolio$account_name)\n [1] \"Available for sale portfolio\" \n [2] \"Cash and balances with central bank\" \n [3] \"Corporate loans\" \n [4] \"Corporate sight deposit\" \n [5] \"Corporate term deposit\" \n [6] \"Money market placements\" \n [7] \"Other non-interest bearing assets\" \n [8] \"Other non-interest bearing liabilities\"\n [9] \"Own issues\" \n[10] \"Repurchase agreements\" \n[11] \"Retail overdrafts\" \n[12] \"Retail residential mortgage\" \n[13] \"Retail sight deposit\" \n[14] \"Retail term deposit\" \n[15] \"Unsecured money market funding\" \n\n```", "```py\nhead(market)\n type       date       rate comment\n1 EUR01 2014-09-01  0.3000000      1M\n2 EUR01 2014-12-01  0.3362558      3M\n3 EUR01 2015-03-01 -2.3536463      6M\n4 EUR01 2015-09-01 -5.6918763      1Y\n5 EUR01 2016-09-01 -5.6541774      2Y\n6 EUR01 2017-09-01  1.0159576      3Y\n\n```", "```py\nNOW <- as.Date(\"09/30/2014\", format = \"%m/%d/%Y\")\n\n```", "```py\nsource(\"bankALM.R\")\n\n```", "```py\ncf(rate = 0.10, maturity = 3, volume = 100, type = \"BULLET\")\n$cashflow\n[1]  10  10 110\n$interest\n[1] 10 10 10\n$capital\n[1]   0   0 100\n$remaining\n[1] 100 100   0\n\n```", "```py\ntest.date <- seq(from = as.Date(\"09/30/2015\", format = \"%m/%d/%Y\"), to = as.Date(\"09/30/2035\", format = \"%m/%d/%Y\") , by = \"1 year\")\n\n```", "```py\nget.yieldcurve.spot(market, test.date, type = \"EUR01\", now = NOW, showplot = TRUE)\n\n```", "```py\ntest.reprice.date <- test.date[seq(from = 1,to = 20, by = 2)]\n\n```", "```py\ntest.forward <- get.yieldcurve.forward(market, test.reprice.date,type = \"EUR01\", now = NOW)\n\n```", "```py\ntest.floating<-get.floating(test.date, test.reprice.date, market, type = \"EUR01\", now = NOW, shoplot = TRUE)\n\n```", "```py\ncashflow.table <- do.call(rbind, lapply(1:NROW(portfolio), function(i) cf.table(portfolio, market, now = NOW, id = i)))\n\n```", "```py\nhead(cashflow.table)\n id account       date        cf interest capital remaining\n1  1    cb_1 2014-10-01  930.0388  0.03875     930         0\n2  2   mmp_1 2014-10-30    0.0819  0.08190       0      1404\n3  2   mmp_1 2014-11-30 1404.0819  0.08190    1404         0\n4  3   mmp_1 2014-10-15    0.0830  0.08300       0       996\n5  3   mmp_1 2014-11-15    0.0830  0.08300       0       996\n6  3   mmp_1 2014-12-15  996.0830  0.08300     996         0\n\n```", "```py\npresentvalue.table <- do.call(rbind, lapply(1:NROW(portfolio), function (i) pv.table(cashflow.table[cashflow.table$id == portfolio$id[i],], market, now = NOW)))\n\n```", "```py\nhead(presentvalue.table)\n id account       date presentvalue\n1  1    cb_1 2014-09-30     930.0384\n2  2   mmp_1 2014-09-30    1404.1830\n3  3   mmp_1 2014-09-30     996.2754\n4  4    cl_1 2014-09-30     530.7143\n5  5    cl_1 2014-09-30     689.1311\n6  6    cl_1 2014-09-30     596.3629\n\n```", "```py\nsum(presentvalue.table$presentvalue)\n[1] 14021.19\n\n```", "```py\nnii <- nii.table(cashflow.table, now = NOW)\n\n```", "```py\nround(nii[,1:7], 2)\n 2014    2015    2016    2017    2018   2019   2020\nafs_1      6.99    3.42    0.00    0.00    0.00   0.00   0.00\ncb_1       0.04    0.00    0.00    0.00    0.00   0.00   0.00\ncl_1     134.50  210.04   88.14   29.38    0.89   0.00   0.00\ncor_sd_1  -3.20  -11.16   -8.56   -5.96   -3.36  -0.81   0.00\ncor_td_1  -5.60   -1.99    0.00    0.00    0.00   0.00   0.00\nis_1     -26.17  -80.54  -65.76  -48.61  -22.05  -1.98   0.00\nmmp_1      0.41    0.00    0.00    0.00    0.00   0.00   0.00\nmmt_1     -0.80   -1.60    0.00    0.00    0.00   0.00   0.00\noth_a_1    0.00    0.00    0.00    0.00    0.00   0.00   0.00\noth_l_1    0.00    0.00    0.00    0.00    0.00   0.00   0.00\nrep_1     -0.05    0.00    0.00    0.00    0.00   0.00   0.00\nret_sd_1  -8.18  -30.66  -27.36  -24.06  -20.76 -17.46 -14.16\nret_td_1 -10.07  -13.27    0.00    0.00    0.00   0.00   0.00\nrm_1     407.66 1532.32 1364.32 1213.17 1062.75 908.25 751.16\nro_1     137.50  187.50    0.00    0.00    0.00   0.00   0.00\ntotal    633.04 1794.05 1350.78 1163.92 1017.46 888.00 736.99 \n\n```", "```py\nbarplot(nii, density = 5*(1:(NROW(nii)-1)), xlab = \"Maturity\", cex.names = 0.8, Ylab = \"EUR\", cex.axis = 0.8, args.legend = list(x = \"right\"))\ntitle(main = \"Net interest income table\", cex = 0.8, sub = paste(\"Actual date: \",as.character(as.Date(NOW))) )par (fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0),mar = c(0, 0, 0, 0),new = TRUE)\nplot(0, 0, type = \"n\", bty = \"n\", xaxt = \"n\", yaxt = \"n\")\nlegend(\"right\", legend = row.names(nii[1:(NROW(nii)-1),]), density = 5*(1:(NROW(nii)-1)), bty = \"n\", cex = 1)\n\n```", "```py\n(repgap <- repricing.gap.table(portfolio, now = NOW))\n 1M   2M  3M   4M   5M   6M   7M   8M   9M  10M  11M  12M\nvolume 6100 9283 725 1787 7115 6031 2450 5919 2009 8649 6855 2730\nbarplot(repgap, col = \"gray\", xlab = \"Months\", ylab = \"EUR\")\ntitle(main = \"Repricing gap table\", cex = 0.8, sub = paste(\"Actual date: \",as.character(as.Date(NOW))))\n\n```", "```py\nhead(aggregate(. ~ date, FUN = sum, data = subset(cashflow.table,select = -c(id, account))))\n date            cf    interest    capital remaining\n1 2014-10-01   930.0387500   0.0387500   930.0000      0.00\n2 2014-10-14     0.6246667   0.6246667     0.0000   3748.00\n3 2014-10-15  2604.2058990 127.5986646  2476.6072  13411.39\n4 2014-10-28   390.7256834 124.6891519   266.0365  23444.96\n5 2014-10-30 -3954.2638670  52.6149502 -4006.8788 -33058.12\n6 2014-10-31    -0.1470690  -0.1470690     0.0000  -2322.00\n\n```", "```py\nlq <- lq.table(cashflow.table, now = NOW)\nround(lq[,1:5],2)\n 1M    2-3M     3-6M    6-12M     1-2Y\nafs_1        2.48 3068.51 14939.42     0.00     0.00\ncb_1       930.04    0.00     0.00     0.00     0.00\ncl_1      3111.11    0.00   649.51  2219.41  2828.59\ncor_sd_1  -217.75 -217.73  -653.09 -1305.69 -2609.42\ncor_td_1    -1.90 -439.66 -6566.03     0.00     0.00\nis_1        -8.69  -17.48 -2405.31  -319.80  -589.04\nmmp_1        0.16 2400.25     0.00     0.00     0.00\nmmt_1       -0.12   -0.54    -0.80 -1201.94     0.00\noth_a_1      0.00    0.00     0.00     0.00     0.00\noth_l_1      0.00    0.00     0.00     0.00     0.00\nrep_1     -500.05    0.00     0.00     0.00     0.00\nret_sd_1  -186.08 -186.06  -558.04 -1115.47 -2228.46\nret_td_1 -4038.96   -5.34 -5358.13 -3382.91     0.00\nrm_1       414.40  808.27  1243.86  2093.42  4970.14\nro_1       466.67  462.50  1362.50  2612.50   420.83\ntotal      -28.69 5872.72  2653.89  -400.48  2792.63\n\n```", "```py\nplot.new()\npar.backup <- par()\npar(oma = c(1, 1, 1, 6), new = TRUE)\nbarplot(nii, density=5*(1:(NROW(nii)-1)), xlab=\"Maturity\", cex.names=0.8, ylab = \"EUR\", cex.axis = 0.8, args.legend = list(x = \"right\"))\ntitle(main = \"Net interest income table\", cex = 0.8, sub = paste(\"Actual date: \",as.character(as.Date(NOW))) )\npar(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0),mar = c(0, 0, 0, 0), new = TRUE)\nplot(0, 0, type = \"n\", bty = \"n\", xaxt = \"n\", yaxt = \"n\")\nlegend(\"right\", legend = row.names(nii[1:(NROW(nii)-1),]), density = 5*(1:(NROW(nii)-1)), bty = \"n\", cex = 1)\npar(par.backup)\n\n```", "```py\nnmd <- read.csv(\"ecb_nmd_data.csv\")\nnmd$date <- as.Date(nmd$date, format = \"%m/%d/%Y\")\n\n```", "```py\nlibrary(car)\nplot(nmd$eur1m ~ nmd$date, type = \"l\", xlab=\"Time\", ylab=\"Interest rate\")\nlines(nmd$cpn~ nmd$date, type = \"l\", lty = 2)\ntitle(main = \"Deposit coupon vs 1-month Euribor\", cex = 0.8 )\nlegend(\"topright\", legend = c(\"Coupon\",\"EUR 1M\"), bty = \"n\", cex = 1, lty = c(2, 1))\n\n```", "```py\nlibrary(urca)\nattach(nmd)\n#Unit root test (ADF)\ncpn.ur <- ur.df(cpn, type = \"none\", lags = 2)\ndcpn.ur <- ur.df(diff(cpn), type = \"none\", lags = 1)\neur1m.ur <- ur.df(eur1m, type = \"none\", lags = 2)\ndeur1m.ur <- ur.df(diff(eur1m), type = \"none\", lags = 1)\nsumtbl <- matrix(cbind(cpn.ur@teststat, cpn.ur@cval,\n dcpn.ur@teststat, dcpn.ur@cval,\n eur1m.ur@teststat, eur1m.ur@cval,\n deur1m.ur@teststat, deur1m.ur@cval), nrow=4)\ncolnames(sumtbl) <- c(\"cpn\", \"diff(cpn)\", \"eur1m\", \"diff(eur1m)\")\nrownames(sumtbl) <- c(\"Test stat\", \"1pct CV\", \"5pct CV\", \"10pct CV\")\n#Stationarty test (KPSS)\ncpn.kpss <- ur.kpss(cpn, type = \"mu\")\neur1m.kpss <- ur.kpss(eur1m, type = \"mu\")\nsumtbl <- matrix(cbind( cpn.kpss@teststat, cpn.kpss@cval, eur1m.kpss@teststat, eur1m.kpss@cval), nrow = 5)\ncolnames(sumtbl) <- c(\"cpn\", \"eur1m\")\nrownames(sumtbl) <- c(\"Test stat\", \"10pct CV\", \"5pct CV\", \"2.5pct CV\", 1pct CV\")\nprint(cpn.ur@test.name)\nprint(sumtbl)\nprint(cpn.kpss@test.name)\nprint(sumtbl)\n\n```", "```py\nAugmented Dickey-Fuller Test\n\n cpn diff(cpn)     eur1m diff(eur1m)\nTest stat -0.9001186 -5.304858 -1.045604    -5.08421\n1pct CV   -2.5800000 -2.580000 -2.580000    -2.58000\n5pct CV   -1.9500000 -1.950000 -1.950000    -1.95000\n10pct CV  -1.6200000 -1.620000 -1.620000    -1.62000\n\nKPSS\n\n cpn    eur1m\nTest stat 0.8982425 1.197022\n10pct CV  0.3470000 0.347000\n5pct CV   0.4630000 0.463000\n2.5pct CV 0.5740000 0.574000\n1pct CV   0.7390000 0.739000\n\n```", "```py\nlr <- lm(cpn ~ eur1m)\nres <- resid(lr)\nlr$coefficients\n(Intercept)       eur1m \n 0.3016268   0.3346139\n\n```", "```py\nres.ur <- ur.df(res, type = \"none\", lags = 1)\nsummary(res.ur)\n############################################### \n# Augmented Dickey-Fuller Test Unit Root Test # \n############################################### \n\nTest regression none \n\nCall:\nlm(formula = z.diff ~ z.lag.1 - 1 + z.diff.lag)\n\nResiduals:\n Min        1Q    Median        3Q       Max \n-0.286780 -0.017483 -0.002932  0.019516  0.305720 \n\nCoefficients:\n Estimate Std. Error t value Pr(>|t|) \nz.lag.1    -0.14598    0.04662  -3.131  0.00215 **\nz.diff.lag -0.06351    0.08637  -0.735  0.46344 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.05952 on 131 degrees of freedom\nMultiple R-squared:  0.08618,   Adjusted R-squared:  0.07223 \nF-statistic: 6.177 on 2 and 131 DF,  p-value: 0.002731\n\nValue of test-statistic is: -3.1312 \n\nCritical values for test statistics:\n 1pct  5pct 10pct\ntau1 -2.58 -1.95 -1.62\n\n```", "```py\ninstall.packages('dynlm')\nlibrary(dynlm)\nres <- resid(lr)[2:length(cpn)]\ndy <- diff(cpn)\ndx <- diff(eur1m)\ndetach(nmd)\necmdata <- c(dy, dx, res)\necm <- dynlm(dy ~ L(dx, 1) + L(res, 1), data = ecmdata)\nsummary(ecm)\n\nTime series regression with \"numeric\" data:\nStart = 1, End = 134\n\nCall:\ndynlm(formula = dy ~ L(dx, 1) + L(res, 1), data = ecmdata)\n\nResiduals:\n Min       1Q   Median       3Q      Max \n-0.36721 -0.01546  0.00227  0.02196  0.16999 \n\nCoefficients:\n Estimate Std. Error t value Pr(>|t|) \n(Intercept) -0.0005722  0.0051367  -0.111    0.911 \nL(dx, 1)     0.2570385  0.0337574   7.614 4.66e-12 ***\nL(res, 1)    0.0715194  0.0534729   1.337    0.183 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.05903 on 131 degrees of freedom\nMultiple R-squared:  0.347,\tAdjusted R-squared:  0.337 \nF-statistic:  34.8 on 2 and 131 DF,  p-value: 7.564e-13\n\n```", "```py\necb.yc <- read.csv(\"ecb_yc_data.csv\")\necb.yc$date <- as.Date(ecb.yc$date, format = \"%d/%m/%Y\")\n\n```", "```py\nmatplot(ecb.yc$date, ecb.yc[,2:6], type = \"l\", lty = (1:5), lwd = 2, col = 1, xlab = \"Time\", ylab = \"Yield\", ylim = c(0,6), xaxt = \"n\")\nlegend(\"topright\", cex = 0.8, bty = \"n\", lty = c(1:5), lwd = 2, legend = colnames(ecb.yc[,2:6])) \ntitle(main = \"ECB yield curve\", cex = 0.8)\naxis.Date(1,ecb.yc$date)\n\n```", "```py\nlibrary(quadprog)\nb <- nmd$cpn[21:135]\nA <- cbind(ecb.yc$EUR1M, ecb.yc$EUR3M, ecb.yc$EUR1Y, ecb.yc$EUR5Y, ecb.yc$EUR10Y)\nm <- c(1, 3, 12, 60, 120)\nl <- 60\nstat.opt <- solve.QP( t(A) %*% A, t(b) %*% A, cbind( matrix(1, nr = 5, nc = 1), matrix(m, nr = 5, nc = 1), diag(5)), c(1, l, 0,0,0,0,0), meq=2 )\nsumtbl <- matrix(round(stat.opt$solution*100, digits = 1), nr = 1)\ncolnames(sumtbl) <- c(\"1M\", \"3M\", \"1Y\", \"5Y\", \"10Y\")\ncat(\"Portfolio weights in %\")\nPortfolio weights in % > print(sumtbl)\n 1M   3M 1Y 5Y  10Y\n[1,]  0 51.3  0  0 48.7\n\n```", "```py\nmrg <- nmd$cpn[21:135] - stat.opt$solution[2]*ecb.yc$EUR3M + stat.opt$solution[5]*ecb.yc$EUR10Y\nplot(mrg ~ ecb.yc$date, type = \"l\", col = \"black\", xlab=\"Time\", ylab=\"%\")\ntitle(main = \"Margin of static replication\", cex = 0.8 )\n\n```"]