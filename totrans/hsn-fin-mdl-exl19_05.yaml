- en: Formulas and Functions - Completing Modeling Tasks with a Single Formula
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the first things that makes Excel more than a glorified electronic calculator
    is its use of functions and formulas. This feature allows Excel to combine a number
    of mathematical tasks—some of which can be quite complex—into a single function.
    In this chapter, you will learn how to use formulas and will understand a selection
    of the most widely used functions.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Understanding functions and formulas
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with lookup functions
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Utility functions
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pivot tables and charts
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pitfalls to avoid
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding functions and formulas
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to enter either a formula or a function, you must first type `=`. A
    **formula** is a statement that includes one or more operands (+, -, /, *, and
    ^), such as `=34+7` or `=A3-G5` (this formula subtracts the contents of cell `G5`
    from the contents of cell `A3`). A function can also be included as part of a
    formula, such as `=SUM(B3:B7)*A3`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: A **function** is a command that contains a series of instructions for Excel
    to carry out. A function contains one or more arguments, inviting the user to
    specify the input cell or range of cells on which the instructions are to be carried
    out, for example, `MATCH(A5, F4:F23,false)`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: A function can include a formula as part of an argument, such as `=IF(A4*B4>C4,D4,E4)`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: However, the distinction between them is often ignored and the term formula
    is used to indicate either a formula or function.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: To enter a formula, we start with the `=` sign followed by the name of a function
    and then open brackets. While in edit mode, an on-screen guide is displayed just
    below the text, showing the arguments to be specified. Each argument is separated
    from the next with a comma and the first argument appears in bold font as it is
    the active argument. Once you have specified the input for an argument, press
    the comma (*,*) key. The bold highlight moves onto the next argument as that is
    now the active argument. When all inputs have been specified, we close the brackets
    to end the formula.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Working with lookup functions
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Lookup functions are some of the most widely used functions in Excel. Generally,
    the intention is to fetch a value from one table (the source) to the active cell
    in which you are typing the formula (the target). Essentially, the function guides
    Excel to identify a row and column in the source table. The intersection of that
    row and column will give you the source cell whose value you want to extract.
    For example, say you have a sales report that includes data for various products
    sold within a specified period and you wish to populate a field, `Product Cost`,
    with the cost of each of the products in your report.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot is a sample sales report showing details of daily
    sales including `Product`, `Salesperson`, and other details:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dc2b348c-2839-4b36-8cde-9e7a249f556e.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
- en: '`Unit Cost` for each product can be obtained from a products database.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: 'You could use a lookup function to locate the individual products in the products
    database and then retrieve the associated cost. We will also refer to this table,
    `Products Database`, as our source table. The following screenshot is a sample
    `Products Database` table showing the product codes and unit costs of each product:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6bff9976-d417-4a43-a5d4-a047176605c6.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
- en: In order to ensure that your lookup selects the correct item, you must use a
    unique lookup value that appears in both tables, a value that will uniquely identify
    each record. People could have the same name, so you would use employee IDs rather
    than employee names; similarly, product names could be duplicated, so you would
    use `Product Code` instead.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: There are a number of lookup functions, each of them having particular scenarios
    to which they are best suited. We will have a look at some of the more popular
    ones.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: The VLOOKUP function
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The arguments for `VLOOKUP` are shown in the following screenshot:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b2fc7b77-55ca-435b-9e48-09e82d9cb945.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
- en: Any argument enclosed in square brackets, `[]`, is optional; therefore, if no
    value is entered for that argument, a default value is taken. Values must be entered
    for all other arguments; otherwise, the formula will result in an error.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: For the `VLOOKUP` function, the optional argument is `range_lookup`. This requires
    you to select `True` if you are looking for an approximate match for your lookup
    value or `False` if you are looking for an exact match. Excel allows you to substitute
    `1` for `True` and `0` for `False`. If no value is selected, then the argument
    defaults to `False`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: This function tells Excel to find the lookup value in the first column from
    the left of the lookup array that you specify. Note that this may not be the first
    column of the source table.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: 'In our example, the lookup value is a product code; therefore, for the first
    record in our sales report, the lookup value is `BN001`, which is in cell **D5**. The
    following screenshot shows the construction of the `VLOOKUP` formula in the `Sales
    Report` table:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1e6d3587-70ec-4921-922d-d82d4d73a07b.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
- en: 'Our lookup array must start from column **C** in the `Products Database` table
    as this is where the `Product Code` field lies—note that this is the second column
    of the `Products Database` table. Excel will then locate the position of the lookup
    value in this first column, as shown in the following screenshot:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/466d78a8-02cf-41d2-a9ba-a88c97445980.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
- en: From the preceding screenshot, we can see that product `BN001` is in row **11**
    of the `Products Database` table, in the `Product Code` field.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: 'The next argument is the `column_index_num` (column index number) value, which
    refers to the position of the source field in the lookup array, starting from
    the unique field as column **1**. The **source field** is the field from which
    you want to retrieve data. In our example, the source field is `Unit Cost`, which
    is column **D**, the second column of our lookup array. This gives us `col_index_num`
    of `2`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c4e4ec7b-9472-4784-bd45-2e759040cbec.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
- en: 'In this way, we have identified column **D** and row **11** for the source
    cell. Excel will then retrieve the data from cell **D11** (`65,000`) and place
    it in our target cell in the `Sales Report` table:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e5670fc6-ffc3-4dc9-82f8-fa60e81bf45f.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
- en: Once you have completed your formula and successfully extracted the unit cost for
    the first record in our `Sales Report` table, copy the formula down the column
    for the other records in the `Sales Report` table.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: The INDEX function
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `INDEX` and `MATCH` functions are usually used together. The `INDEX` function
    has the arguments to specify the row and column of the source cell. In order to
    make the formula dynamic, you substitute `MATCH` for the `INDEX` argument, for
    the row, column, or both. This is a very powerful formula that has arguments for
    both arrays and simple formulas:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8e6034e9-edc7-4f1c-b8db-999490989795.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
- en: The first line of arguments of the `INDEX` formula is for the array range. Array
    formulas return a range of values as opposed to just one—as is the case with simple
    formulas. We will touch on array formulas later in this book, but for now, we
    will concentrate on simple formulas.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: The second line of arguments is for the reference form. The first argument requires
    the reference that is similar to the lookup array in `VLOOKUP`. In simple index
    formulas, this could be restricted to a range of cells within one column (or within
    one row).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: 'If you restrict the index reference to one column, you have effectively identified
    the column of the source cell. In our example, we have selected cells `D5` to
    `D13` as our reference:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/60699711-ede2-4e32-9420-111dfb3257d1.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
- en: The next argument is `row_num`. In order to substitute it for the `row` argument,
    you will need to embed the `MATCH` function within the `INDEX` function, which
    is still active. To do this, just start typing the new function after the comma.
    As long as you have not yet entered the final parentheses for a function, Excel
    recognizes that the formula is still active, so there is no need to type `=` again.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: The MATCH function
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first argument in the `MATCH` function is the `lookup_value` argument, which
    you look for in the lookup array. In this case, however, there is no restriction
    as to the location of the lookup array. We are using the same lookup value as
    in the `VLOOKUP` example, `BN001`, in cell **D5** of the `Sales Report` worksheet.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, again, as shown in the following screenshot, you can restrict the lookup
    array to one column. In our example, we know that the match for our lookup values
    are under the `Product Code` field in column **C** of the `Products Database`
    worksheet. We therefore select cells `C5` to `C13` as our lookup array:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 再次在以下截图中显示，您可以将查找数组限制为一列。在我们的示例中，我们知道我们的查找值的匹配项在“产品数据库”工作表的第 **C** 列的`产品代码`字段下。因此，我们选择单元格
    `C5` 到 `C13` 作为我们的查找数组：
- en: '![](img/ee564412-ae6a-4074-9f60-5b4b05a94948.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ee564412-ae6a-4074-9f60-5b4b05a94948.png)'
- en: Note that the `MATCH` lookup array must start from the same worksheet row as
    the reference in the `INDEX` function. In our example, they both start from worksheet
    row **5**. You end the match formula with `match_type`, which is the same as `range_lookup`
    in the `VLOOKUP` function. You need to specify whether you want an approximate
    match, less than (`1`), greater than the lookup value (`-1`), or an exact match
    (`0`).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`MATCH` 查找数组必须从与 `INDEX` 函数中的引用相同的工作表行开始。在我们的示例中，它们都从工作表行 **5** 开始。您用 `match_type`
    结束匹配公式，其与 `VLOOKUP` 函数中的 `range_lookup` 相同。您需要指定是否要近似匹配、小于（`1`）、大于查找值（`-1`）或精确匹配（`0`）。
- en: The `MATCH` function returns an integer that corresponds to the position of
    the row within the lookup array in which the lookup value is found. This should
    not be mistaken for the worksheet row number.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`MATCH` 函数返回一个整数，该整数对应于在查找数组中找到查找值的行的位置。这不应与工作表行号混淆。'
- en: In our example, the `MATCH` function will return the number `7` because the
    lookup value, `BN001`, is found in the 7^(th) row of our lookup array—worksheet
    row **11**. As soon as you close the final bracket of the `MATCH` formula, Excel
    takes you back to the `INDEX` function.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，`MATCH` 函数将返回数字 `7`，因为查找值 `BN001` 在我们的查找数组——工作表行 **11** 的第 7 行中找到。一旦您关闭
    `MATCH` 公式的最后一个括号，Excel 就会带您回到 `INDEX` 函数。
- en: The next argument is `column_num`. As we have already determined the column
    number by restricting our reference to one column, we can ignore this argument.
    The final argument, `area_num`, is for more complex situations where we introduce
    a third dimension after row and column, such as multiple tables with the same
    field layouts. Again, we can ignore this argument as we will not be using it.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个参数是 `column_num`。由于我们已经通过限制我们的引用到一列来确定了列号，因此我们可以忽略此参数。最后一个参数 `area_num` 用于更复杂的情况，例如在行和列之后引入第三维，比如具有相同字段布局的多个表。同样，我们可以忽略此参数，因为我们不会使用它。
- en: Having identified row **7** and column **D**, we now have the source cell, **D11**,
    which returns the value of `65000`. You will note that `INDEX` and `MATCH` overcome
    the restriction in `VLOOKUP`, where the unique field must be the first column
    of the lookup array.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 找到了第 **7** 行和第 **D** 列后，现在我们有了源单元格 **D11**，其返回值为 `65000`。您会注意到 `INDEX` 和 `MATCH`
    克服了 `VLOOKUP` 中的限制，其中唯一字段必须是查找数组的第一列。
- en: As a result, many users prefer to use `INDEX` and `MATCH`, even where `VLOOKUP`
    would work. Those who are intimidated by the function combination of `INDEX` and
    `MATCH` prefer to stick to `VLOOKUP` and would rather change the order of table
    columns to make it suitable for `VLOOKUP`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 结果，许多用户更喜欢使用 `INDEX` 和 `MATCH`，即使 `VLOOKUP` 也可以工作。那些被 `INDEX` 和 `MATCH` 的函数组合吓倒的人更喜欢坚持使用
    `VLOOKUP`，他们宁愿改变表列的顺序以使其适用于 `VLOOKUP`。
- en: The CHOOSE function
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`CHOOSE` 函数'
- en: 'The `CHOOSE` function allows you to create a list of values or actions to perform
    and then select which value to use or action to perform, by choosing a number
    corresponding to the position of the values or actions in the list. The syntax
    for `CHOOSE`—as shown in the following screenshot—has two arguments: `index_num`,
    then the list of values or actions shown as `value1`, `value2`, and so on.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`CHOOSE` 函数允许您创建一个值或要执行的操作列表，然后通过选择列表中值或操作的位置来选择要使用的值或要执行的操作。`CHOOSE` 的语法如下截图所示，有两个参数：`index_num`，然后是作为
    `value1`、`value2` 等显示的值或操作的列表。'
- en: 'This screenshot shows the arguments of the `CHOOSE` function:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 此截图显示了 `CHOOSE` 函数的参数：
- en: '![](img/3ff352b8-3034-4a55-b1e7-569a51682d75.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3ff352b8-3034-4a55-b1e7-569a51682d75.png)'
- en: 'In the example shown here, we want to show the results separately from the
    average and median of the product unit costs in the `Products Database` worksheet.
    We first set up data validation in an empty cell, so that the values of `1` or
    `2` can be selected by clicking the drop-down arrow that appears beside the cell.
    The cell with the data validation will be `index_num` of the `CHOOSE` formula.
    This is a screenshot of the data validation:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/332851f0-fc38-4b48-b4bd-83b6fe1a7223.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
- en: 'We then list the actions to choose from. In this case, we have the average
    or the median. If we list them in that order, then if `index_num` shows `1`, the
    average will be selected, and if it shows `2`, then median will be selected. The
    following screenshot shows the complete `CHOOSE` formula:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0943a2fe-fb65-43dc-ac62-bdcc6e1f2286.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
- en: 'When the index number is `1`, the `AVERAGE` function is selected, and it returns
    the value `43,444.44`. This is a screenshot of the `CHOOSE` function with `Index_Num`
    as `1`:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2f951ce8-2884-4b96-9641-e2699cbe8fbe.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
- en: 'When the index number is `2`, the `MEDIAN` function is selected, and it returns
    the value `45,000.00`. This is a screenshot of the `CHOOSE` function with `Index_Num`
    as `2`:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0dc323a8-9f54-4f3b-bf5a-485c774610ac.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
- en: Implementing the CHOOSE function
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's assume that you are tracking the financial records of your company and
    your boss wants you to deliver two reports every week, containing the total amount
    of sales that you made for a particular week and the total amount of purchases
    you made toward the company's stores. How would you go about it?
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: 'You can always select all of the instances of sales and then calculate the
    sum of them. Once that is done, you have to again select all instances of purchases
    made and find the sum of purchases too. Having to do so frequently would be really
    time-consuming and boring. Here''s where the `CHOOSE` function comes into play!
    We can implement a simple model that does everything for you in one click, using
    the following steps:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: 'Load all of the required values that you need to account for and compile them
    into a table, as seen here:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f11400ae-fbd1-4910-9d50-552f213993f1.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
- en: 'We will now start writing the `CHOOSE` function:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8b73489c-8ead-49bb-8b56-406ee1c90be5.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
- en: 'The first value we need to enter is the cell where we have put the options,
    which, in our case, is `F4`:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/80b6ae9c-b0ed-46db-bfbb-5c6eb9e595b8.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
- en: 'Now, we will assign two options to `F4`, `1` and `2`, using data validation.
    We will now edit the formula so that if we select `1`, the cell where the formula
    is input will display the sum of all of the sales made for that week, and if we
    select `2`, it will display the sum of all of the purchases. So, first we will
    select all of the cells in the `Sales` column, `C6` to `C14`, and input it into
    the formula cell as `SUM(C6:C14)`, as seen here:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00b805d0-57fa-4435-9af5-03ec789cd996.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
- en: 'Next, we will select all of the cells in the `Purchases` column and input those
    into the next field of the formula as `SUM(D6:D14)`, as follows:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/914ff6b7-0cd4-42b4-9e5f-b265ba164761.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
- en: 'This results in the following output:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3e183e29-4bc1-4bc1-9c39-8286ac740884.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
- en: Now, as seen in the preceding screenshot, when `1` is selected, the cost of
    sales becomes visible, which, in our case, is `315,455.00`.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: 'If we select `2`, we will get the cost of purchases, as seen here:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1bfeaf48-b523-4654-813e-3ff10410dc27.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
- en: This is just a basic scenario in which the function can come in handy. This
    will be particularly useful when you have large amounts of data that needs to
    be filtered and sorted.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: Utility functions
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Utility functions can be used on their own. However, they come into their own
    when embedded in other, more complex functions. In such cases, they expand the
    scope and functionality of the enclosing function by providing access to more
    conditions or variables.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: Some examples of utility functions are `IF`, `AND`, `OR`, `MAX`, `MIN`, and `MATCH`.
    We will now look at a few of them here.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: The IF function
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This is one of the most widely used functions in Excel. It can be used on its
    own or as part of another formula. The `IF` function checks whether a condition
    is met, then returns one value if it is and another value if it isn''t. The syntax
    contains three arguments:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '`logical_test`: The logical test is a statement that returns a value of `true`
    if the condition is met, or `false` if the condition is not met.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value_if_true`: This argument allows you to specify which value you wish to
    be returned if the condition is met and the result of the logical test is `true`.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value_if_false`: This argument allows you to specify which value you wish
    to be returned if the condition is not met and the result of the logical test
    is `false`.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Say you want to reward your salespersons with `2%` of sales whenever the profit
    exceeds `300,000`. You could write an `IF` formula to automate this. The logical
    test would be the statement—profit is greater than `300,000`. In the following
    example, for the first record, this is `K5>K2`. The statement will either be `true`
    or `false`. If the result is `true`, the value to return is then `Sales` × `Commission`
    (`2%`). In our example, this is `H5*H2`. If the result is `false`, then the value
    returned will be `0`. The following screenshot is an illustration of the `IF`
    formula:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/704e5d46-0e56-43b1-b6b4-613727813bb3.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
- en: The MAX and MIN functions
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These functions are used to select either the maximum (`MAX`) or minimum (`MIN`)
    from a list of values. With a bit of imagination, you can put the `MAX` or `MIN` formulas
    to very efficient use.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: For example, in your financial model, `Cash Balance` can turn out to be positive
    or negative. A positive balance would be posted to the `Cash In Hand` account
    on the asset side of the balance sheet, while a negative balance would be shown
    as `Overdraft` under current liabilities. If we simply related `Cash In Hand`
    or `Overdraft` to `Cash Balance`, then we could either have a negative balance
    displayed as `Cash In Hand` or a positive balance displayed as `Overdraft`.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'A way around this is to use the `MAX` and `MIN` formulas as shown in the following
    screenshot:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c8e3384a-e5f0-4545-8afc-aa9d796f5431.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
- en: In the preceding screenshot, we are asking the `MAX` formula to display the
    greater value of `Cash Balance` and `0`. A positive cash balance will always be
    greater than `0` and will hence be displayed as `Cash In Hand`. However, whenever
    the cash balance is negative, since this will always be less than `0`, `Cash In
    Hand` will display `0`.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot is an illustration of the `MIN` function:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/479cbc93-ef16-4523-b9b2-b787b8428b88.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
- en: In this case, we use the `MIN` formula to ensure that only negative cash balances
    will be displayed as `Overdraft`, since a negative cash balance will always be
    less than `0`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: 'By copying the formulas, we can see how the cash balances have been neatly
    and accurately classified as `Cash In Hand` and `Overdraft`, as shown in the following
    screenshot, which shows the full result after applying the `MAX` and `MIN` formulas:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8fde2d17-cb1e-4ebb-8111-1f6db349471e.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
- en: Implementing the functions
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will now implement the `MAX` and `MIN` functions to the `Marks.xlsx` file used
    in [Chapter 4](e28955dc-8534-4e5a-b235-2973ac690e86.xhtml), *Applying the Referencing
    Framework in Excel*. We will use the `MAX` function to find the highest score
    in the class and the `MIN` function to find the lowest using the following steps:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we will create two independent cells that we will use to display the
    highest and lowest scores, as follows:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6ea3287e-629c-4702-8069-ee6dfb1ee964.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
- en: 'Now, to find the student with the highest score, we will find the biggest value
    in the `Percentage` column, by using the following formula:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/df2a2153-c00a-4d58-8002-1abdc83a7e42.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
- en: 'This results in the following output:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a4087180-7c7e-4bce-88ee-f5b1629fa6a0.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
- en: 'Similarly, we need to find the minimum marks scored by a student by using the
    following formula:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a3b08655-390d-4e70-9d37-a4eb9dadd1f8.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
- en: 'This results in the following output:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/161b9eae-a42c-4c4f-99b5-d22fc1d5d3b2.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
- en: This shows how useful these functions can be, especially when you have a huge
    number of entries to sort through.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: Pivot tables and charts
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pivot tables are one of the most powerful tools in Excel. A pivot table can
    summarize little or large amounts of data into a compact form, which reveals trends
    and relationships that were not apparent from looking at the original data.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: The pivot table allows you to introduce conditions based on the original data
    so that you can view the summarized data from different perspectives. It does
    all of this without you having to type any formulas. Most users are under the
    impression that pivot table reports are complex and difficult to prepare; but
    in reality, the complexity is behind the scenes and taken care of by Excel. All
    you have to do is follow a few simple guidelines and you will be able to produce
    complex pivot tables with ease.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 透视表允许您根据原始数据引入条件，以便您可以从不同角度查看汇总数据。它所有这些都不需要您输入任何公式。大多数用户认为透视表报告复杂且难以准备；但实际上，复杂性在幕后由
    Excel 处理。您只需要遵循一些简单的指导方针，就能轻松生成复杂的透视表。
- en: The first step is to ensure that your data is in the proper Excel table format,
    bearing in mind that you may have to work with data prepared by someone else.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是确保您的数据处于正确的 Excel 表格格式中，要记住您可能需要处理由他人准备的数据。
- en: 'Excel identification and navigation shortcuts depend on your table being in
    the proper format. Most actions require the specification of the target range.
    Excel can correctly identify the required range and isolate the field headers,
    but only if the data is in the proper table format, which can be seen in the following
    screenshot:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Excel 的识别和导航快捷键取决于您的表格是否处于正确的格式中。大多数操作都需要指定目标范围。Excel 可以正确识别所需范围并分离字段标题，但前提是数据必须处于正确的表格格式中，如下图所示：
- en: '![](img/30f514da-6c3f-41db-8d7b-d56575f7d5ad.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/30f514da-6c3f-41db-8d7b-d56575f7d5ad.png)'
- en: In database terminology, each column of the table represents a field, and each
    row (apart from the first row) represents a record. The first row of the table
    should contain the field headers. There should be no empty cells in the table
    and no duplicate records.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据库术语中，表的每一列代表一个字段，每一行（除了第一行）代表一条记录。表的第一行应包含字段标题。表中不应该有空单元格，也不应该有重复记录。
- en: Excel is very efficient at detecting data types and handling different forms
    of date format, including `15/01/2019`, `15-Jan-19`, `15-01-2019`, `01-15-2019`,
    and `2019-01-15`, among others. However, Excel is very sensitive and any slight
    anomaly in the data may produce erratic results. For example, if you inadvertently
    type a leading space before the date—as in the image on the left-hand side of
    the following screenshot—Excel treats it as a `General` data type.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Excel 在检测数据类型和处理不同形式的日期格式方面非常高效，包括`15/01/2019`、`15-Jan-19`、`15-01-2019`、`01-15-2019`和`2019-01-15`等。然而，Excel
    非常敏感，数据中的任何轻微异常都可能导致不稳定的结果。例如，如果您在日期之前无意中键入一个前导空格—就像以下截屏图左侧的图像一样—Excel 会将其视为`General`数据类型。
- en: 'The image on the right-hand side of the following screenshot shows the same
    text without the leading space; therefore, Excel correctly recognizes it as a
    date and automatically assigns the `Date` format to the cell:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 下图右侧的图像显示了相同的文本，没有前导空格；因此，Excel 正确识别它为日期，并自动将`Date`格式分配给单元格：
- en: '![](img/cd765230-a9ec-46f6-99cf-f8ebe3f84dc1.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd765230-a9ec-46f6-99cf-f8ebe3f84dc1.png)'
- en: The reason for explaining this in detail is because pivot tables have a special
    relationship with date and other data types. If a date field is included in your
    table, the pivot table will recognize it and allow you to group the dates into
    days, months, quarters, and years. However, if just one cell of the date field
    has an anomaly—like in the preceding example—the pivot table will not recognize
    it as a date and the group option will be unavailable. Once your data has been
    cleaned up and prepared, you are ready to create a pivot table. Ensure that the
    cursor is in any cell within the table, then press *Insert* and select PivotTable
    from the Tables group. The Create PivotTable dialog box is launched. You will
    be required to select a range and then a location for the pivot table report.
    Excel will usually intelligently guess the correct range for the pivot table;
    but if it doesn't, you can manually select the required range.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 详细解释这一点的原因是透视表与日期和其他数据类型有特殊关系。如果表中包含日期字段，透视表将识别它并允许您将日期分组为日、月、季度和年。然而，如果日期字段中只有一个单元格有异常—就像前面的例子一样—透视表将不会将其识别为日期，并且组选项将不可用。一旦您的数据已经清理和准备好，您就可以创建一个透视表。确保光标在表中的任何单元格中，然后按下*插入*并从“表”组中选择“透视表”。创建透视表对话框会被启动。您将需要选择一个范围，然后选择透视表报告的位置。Excel
    通常会智能猜测透视表的正确范围；但如果没有，您可以手动选择所需的范围。
- en: 'Although you can place the pivot table on the same sheet as the source data,
    this can sometimes become congested. By default, Excel will create the pivot table
    on a new worksheet. Again, you can override this, if you wish, and specify a location
    on either the same or another worksheet:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9a22f642-5052-4848-934a-0ed0ff780620.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
- en: When you press OK, a pivot table will be created. Initially, only the field
    list will be populated with the names of all of the fields in your table, which
    will be arranged vertically with checkboxes beside them. Below that, there are
    four boxes, titled **Filters**, **Columns**, **Rows**, and **Values**. You build
    the table by dragging the field names to the boxes as desired.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: 'Before you start building your table, it would help if you try and envisage
    the layout you desire. The **Values** box is best suited for numerical fields,
    so you would drag the `Sales` field to this box, resulting in the updated table
    shown in the following screenshot, which shows how the **Values** field is displayed
    in the pivot table:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/10e54fa6-9ce1-4be6-a87a-a2fd3b63b73f.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
- en: 'As you have not yet specified a condition or criteria, Excel simply totals
    the **Values** field and calls it `Sum of Sales`. You may then wish to display
    the sales per salesperson for each product. The following screenshot shows sales
    per salesperson:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c380e04f-d7de-4f79-bd62-f43be2c392f4.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
- en: 'For the previous screenshot, the field list would look like this:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/409daabb-eab8-43ac-8b36-90dd55701676.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
- en: 'Alternatively, you may wish to show the sales of products per salesperson,
    as shown in the following screenshot:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f50f0b1a-fffd-40f7-b254-ed0736acd04a.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
- en: 'Notice that the positions of the `Product` and `Salesperson` fields are reversed
    in the rows box, as shown in the following screenshot:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a3398334-dec6-4d86-ad17-965da1edab1d.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
- en: 'An alternative layout could be achieved by displaying the products horizontally.
    This can be done by dragging the product field to the **Columns** box instead
    of the **Rows** box:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f3b234c6-74c5-4a08-ad0d-3eb61f81c31c.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
- en: 'Doing that results in this:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/72a926f1-a29d-4db4-9be8-b270d1e85d82.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
- en: 'Another variation to the layout is to show sales by product, then show the
    salesperson as a filter:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/46090795-1ef8-441b-99b2-c0a42b2ce08b.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
- en: 'This results in the following:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a011ee5e-a3cd-4b1c-97d6-9c5567800ac8.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
- en: By clicking the drop-down arrow beside the `Salesperson (All)` filter, you can
    selectively display the results for any of the salespersons, any combination of
    them, or all of the salespersons.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Apart from showing the sales totals, you can also show sales as a percentage
    of the overall total or of average sales. In this way, you can show the contribution
    of a product or salesperson to the overall sales.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows product sales in total and as percentages of
    gross sales. In order to achieve this, simply drag the `Sales` field to the **Values**
    box again so that it now appears twice. Right-click on the `Sum of Sales 2` column
    to reveal a drop-down menu, then select **Show Values**, and then finally select
    **Grand Total** from the second menu that appears. An illustration of product
    sales in total and as percentages of gross sales is shown in the following screenshot:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/73c0c5e0-826f-4a43-b920-bef2d93e3ba0.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
- en: The previous table shows sales by salespersons and as percentages of gross sales.
    This is actually a second pivot table that uses the same range but using the table
    on cell `E3` of the sheet housing the original pivot table. The **Show Values
    as...** menu has a wide range of options demonstrating the flexibility of pivot
    tables.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: If, in trying out the various options, you mess up your table, you can simply
    discard it and create another one. Hopefully, this time, you would have learned
    from your mistakes and shifted up a notch in your experience of creating and working
    with pivot tables. Sometimes, people understand reports better when they are supported
    by diagrams and charts.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a pivot chart, select your pivot table, select **Analyze** from the
    pivot table tools context-sensitive menu, then select **Pivot Chart**. A wide
    range of chart types will be displayed. Select one and a pivot chart appears beside
    your pivot table:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bfd1cacd-2ba6-4e69-b518-0ab3a5ec9533.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
- en: 'The chart is dynamic so that if you filter your table to reflect, say, one
    salesperson, `Iyabo`, the chart automatically updates to reflect only Iyabo''s
    results. This screenshot shows a pivot table and a pivot chart that have been
    filtered to show just Iyabo''s sales:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/be201944-1988-4375-ad67-89d6a075c59b.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
- en: Implementing pivot tables
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the `Marks.xlsx` file, we have the percentages of all of the students. Now,
    let''s say we want to find out who the top 10 students are, so that we can award
    them during our class function. Enter the pivot table using the following steps:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the `Top scores` worksheet in the file, which contains all of the
    students and their percentages in a table.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, to create a pivot table, we will select all of the columns in the table
    and create a pivot table using the **PivotTable** option in the menu:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7986c9ab-8bc0-4579-ba76-b61241676972.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
- en: 'This results in the following table:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/27e09561-fb8d-4905-9123-83bb5afcbad4.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
- en: 'Since we want to find out the top 10 scores, we can use a built-in filter in
    the **PivotTable** filters. To reveal the following drop-down list, click on the
    filter icon in the corner of the **Row Labels** column:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0e8d2567-9905-4152-a087-69b8cbc0aafd.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
- en: 'Navigate to **Value filters** and select the **Top 10...** option from there,
    as follows:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6f5a0338-56b1-4215-9d59-f428afc994d5.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
- en: 'This reveals the following window:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1a15fb36-e9dc-47bc-ba20-a5eadcc92257.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
- en: Here, you can choose how many values you want to display, from which column
    you want to filter the top 10, and many more options.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: 'Make sure that everything in the window looks similar to the preceding screenshot
    and click on **OK**. Doing so leads to the following output:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b50fd30d-a880-48c2-9a57-07ae31fc5dcd.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
- en: As seen here, we can see the students who scored the highest grades. But we
    need them in descending order of their percentages, so that the highest scorer
    is displayed first.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: 'For this, we will again click on the filter icon and navigate to **More Sort
    Options...**, as shown here:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c4744b99-391d-46d9-af11-273ce10dc240.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
- en: 'This results in the following window:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2a9ed612-9a95-4f0f-b3c6-bb1c62d15b71.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
- en: 'Here, we will now sort the students into descending order, based on the sum
    of percentages, as shown here:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6370ee69-0f88-4d12-802c-2c5e70268874.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
- en: 'This results in the following output:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8e7a41e9-6415-4499-ad06-1b72f260b04d.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
- en: Hence, we have the results of the top 10 students in the class! This shows how
    powerful a pivot table can be when used right.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: Pitfalls to avoid
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In constructing your formulas, it is easy to get carried away and, very soon,
    the formula becomes very complex and unfriendly. While it is desirable to keep
    formulas compact, they should be simple and easy for a third party to follow.
    If necessary, break up the formula into two or more parts so that it becomes easier
    to follow while retaining the original effect.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, you can use *Alt + Enter* to force part of the formula to the
    next line. This will not affect the result of the formula, but it will make the
    formula easier to understand. Consider the following example:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This complex formula can be broken down to three parts with the use of *Alt
    + Enter*, as follows:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As we can see, this makes it easier to decipher.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: Protect sheets
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are going to share your model with others, it is important that you protect
    your formulas against inadvertent modifications that can render the model useless.
    In order to do this, first highlight the cells without formulas that you want
    to modify, press *Ctrl + 1* to open the **Format Cells** dialog box, go to the
    Protection tab, check Locked, and click OK. This will unlock the cells that may
    be modified.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: Now, go to the Review tab, then select Protect Sheet. The Protect Sheet dialog
    box appears. Enter a password to unprotect it if desired, then click OK. Now,
    the cells with formulas, which are protected, can only be viewed but not modified.
    You should enter a particular value only once. If you need to enter the same value
    in another location, simply refer to the original cell where the first entry was
    made. Any subsequent occurrences of the same value should also refer to the original
    entry rather than to any of the secondary cells containing the same value.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: For example, an interest rate of 15% is first entered on sheet 1, cell **B5**.
    If interest is required in sheet 2, cell **D16**, rather than typing 15% again,
    you simply refer to sheet 1, cell **B5**, by typing `=`, then entering sheet 1, cell
    **B5**. If interest appears again on sheet 3, cell **J13**, theoretically, you
    could refer to sheet 2, cell **D16**. However, in order to preserve a simple audit
    trail, the reference should be to the original entry of that value, sheet 1, cell **B5**.
    Try and use only one formula per row.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，15%的利率首先输入到表1的单元格**B5**中。如果在表2的单元格**D16**中需要利息，而不是再次输入15%，您只需引用表1的单元格**B5**，键入`=
    `，然后输入表1的单元格**B5**。如果利息再次出现在表3的单元格**J13**中，理论上，您可以引用表2的单元格**D16**。然而，为了保持一个简单的审计追踪，应该将引用指向该值的原始输入，即表1的单元格**B5**。尽量每行只使用一个公式。
- en: Use your knowledge of relative, absolute, and mixed cell referencing to construct
    your formulas so that you can enter it in one cell, then copy or fill the formulas
    across the other years. The fewer times you have to enter a formula, the lower
    the chances of making a mistake are.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 利用您对相对、绝对和混合单元格引用的了解，构建您的公式，以便您可以在一个单元格中输入它，然后将公式复制或填充到其他年份中。您输入公式的次数越少，出错的机会就越低。
- en: Summary
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about the power of formulas and functions and how
    we can use them to speed up our modeling and make it more interesting. We also
    worked through examples of some of the more common functions such as the `VLOOKUP`,  `MATCH`,
    and `CHOOSE` functions.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了公式和函数的威力，以及如何利用它们加快建模速度并使其更加有趣。我们还通过一些常见函数的示例进行了演示，例如`VLOOKUP`、`MATCH`和`CHOOSE`函数。
- en: In the next chapter, we will look at one of the features that forms the backbone
    of Excel—the referencing framework. Understanding this framework and knowing how
    to apply its principles will help you to speed up your work and improve your productivity.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将研究 Excel 中构成其支柱的功能之一——引用框架。了解这个框架并知道如何应用其原则将有助于加快您的工作速度并提高您的生产力。
