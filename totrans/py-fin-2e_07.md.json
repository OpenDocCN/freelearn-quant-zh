["```py\nfrom pandas.stats.api import ols\nimport pandas as pd\ny = [0.065, 0.0265, -0.0593, -0.001,0.0346] \nx1 = [0.055, -0.09, -0.041,0.045,0.022]\nx2 = [0.025, 0.10, 0.021,0.145,0.012]\nx3=  [0.015, -0.08, 0.341,0.245,-0.022]\ndf=pd.DataFrame({\"y\":y,\"x1\":x1, 'x2':x2,'x3':x3})\nresult=ols(y=df['y'],x=df[['x1','x2','x3']])\nprint(result)\n```", "```py\nfrom pandas.stats.api import ols\nhelp(ols) \n```", "```py\nimport scipy.stats as stats\nalpha=0.05\ndfNumerator=3\ndfDenominator=1\nf=stats.f.ppf(q=1-alpha, dfn=dfNumerator, dfd=dfDenominator)\nprint(f)\n215.70734537\n```", "```py\nimport pandas as pd\nimport numpy as np\nimport statsmodels.api as sm\ninFile='http://canisius.edu/~yany/data/ibm.csv'\ndf = pd.read_csv(inFile, index_col=0)\nx = df[['Open', 'High', 'Volume']]\ny = df['Adj.Close']\nx = sm.add_constant(x)\nresult = sm.OLS(y, x).fit()\nprint(result.summary())\n```", "```py\nimport pandas as pd\nx=pd.read_pickle(\"c:/temp/ffMonthly.pkl\")\nprint(x.head())\nprint(x.tail())\n```", "```py\nfrom matplotlib.finance import quotes_historical_yahoo_ochl as getData\nimport numpy as np\nimport pandas as pd\nimport scipy as sp\nimport statsmodels.api as sm\n\nticker='IBM'\nbegdate=(2012,1,1)\nenddate=(2016,12,31)\n\np= getData(ticker, begdate, enddate,asobject=True, adjusted=True)\nlogret = sp.log(p.aclose[1:]/p.aclose[:-1])\n\nddate=[]\nd0=p.date\n\nfor i in range(0,sp.size(logret)):\n    x=''.join([d0[i].strftime(\"%Y\"),d0[i].strftime(\"%m\"),\"01\"])\n    ddate.append(pd.to_datetime(x, format='%Y%m%d').date())\n\nt=pd.DataFrame(logret,np.array(ddate),columns=[''RET''])\nret=sp.exp(t.groupby(t.index).sum())-1\nff=pd.read_pickle('c:/temp/ffMonthly.pkl')\nfinal=pd.merge(ret,ff,left_index=True,right_index=True)\ny=final[''RET'']\nx=final[[''MKT_RF'',''SMB'',''HML'']]\nx=sm.add_constant(x)\nresults=sm.OLS(y,x).fit()\nprint(results.summary())\n```", "```py\nimport pandas as pd\nx=pd.read_pickle(\"c:/temp/ffcMonthly.pkl\")\nprint(x.head())\nprint(x.tail())\n```", "```py\nimport pandas as pd\nx=pd.read_pickle(\"c:/temp/ffMonthly5.pkl\")\nprint(x.head())\nprint(x.tail())\n```", "```py\nimport pandas as pd\nimport scipy as sp\n\nprice=[10,11,12.2,14.0,12]\nx=pd.DataFrame({'Price':price})\nx['diff']=x.diff()\nx['Ret']=x['Price'].diff()/x['Price'].shift(1)\nx['RetLag']=x['Ret'].shift(1)\nx['RetLead']=x['Ret'].shift(-1)\nprint(x)\n```", "```py\nimport pandas as pd\nimport numpy as np\nfrom pandas.stats.api import ols\n\ndf=pd.read_pickle(\"c:/temp/yanMonthly.pkl\")\nsp500=df[df.index=='^GSPC']\nsp500['retMkt']=sp500['VALUE'].diff()/sp500['VALUE'].shift(1)\nsp500['retMktLag']=sp500['retMkt'].shift(1)\nsp500['retMktLead']=sp500['retMkt'].shift(-1)\n\nibm=df[df.index=='IBM']\nibm['RET']=ibm['VALUE'].diff()/ibm['VALUE'].shift(1)\ny=pd.DataFrame(ibm[['DATE','RET']])\nx=pd.DataFrame(sp500[['DATE','retMkt','retMktLag','retMktLead']])\ndata=pd.merge(x,y)\n\nresult=ols(y=data['RET'],x=data[['retMkt','retMktLag','retMktLead']])\nprint(result)\n```", "```py\nimport pandas as pd\nimport scipy as sp\ndf=pd.read_pickle(\"c:/temp/yanMonthly.pkl\")\nrf=0.01\nibm=df[df.index=='IBM']\nibm['RET']=ibm['VALUE'].diff()/ibm['VALUE'].shift(1)\nret=ibm['RET']\nsharpe=sp.mean((ret)-rf)/sp.std(ret)\nprint(sharpe)\n```", "```py\nimport scipy as sp\nfrom matplotlib.finance import quotes_historical_yahoo_ochl as getData\nbegdate=(2012,1,1)\nenddate=(2016,12,31)\ndef ret_f(ticker,begdate,enddate):\n     p = getData(ticker,begdate, enddate,asobject=True,adjusted=True)\n     return(p.aclose[1:]/p.aclose[:-1]-1)\ny=ret_f('IBM',begdate,enddate)\nsharpe=sp.mean(y)/sp.std(y)\nprint(sharpe)\n```", "```py\nimport scipy as sp\nimport numpy as np\n\nmean=0.10;\nRf=0.02\nstd=0.20\nn=100\nsp.random.seed(12456)\nx=sp.random.normal(loc=mean,scale=std,size=n)\nprint(\"std=\", sp.std(x))\n\ny=x[x-Rf<0]  \nm=len(y)\ntotal=0.0\nfor i in sp.arange(m):\n    total+=(y[i]-Rf)**2\n\nLPSD=total/(m-1)\nprint(\"y=\",y)\nprint(\"LPSD=\",LPSD)\n```", "```py\nimport pandas as pd\nimport scipy as s\nx= pd.DataFrame({'key': ['K0', 'K1', 'K2', 'K3'],\n                 'A': ['A0', 'A1', 'A2', 'A3'],\n                 'B': ['B0', 'B1', 'B2', 'B3']})\ny = pd.DataFrame({'key': ['K0', 'K1', 'K2', 'K6'],\n                 'C': ['C0', 'C1', 'C2', 'C3'],\n                 'D': ['D0', 'D1', 'D2', 'D3']})\n```", "```py\nprint(sp.shape(x))\nprint(x)\n```", "```py\nprint(sp.shape(y))\nprint(y)\n```", "```py\nresult = pd.merge(x,y, on='key')\nprint(result)\n```", "```py\nresult2 = pd.merge(x,y)\nprint(result2)\n```", "```py\npd.merge(left, right, how='inner', on=None, left_on=None, right_on = None,left_index=False, right_index=False, sort=True,suffixes=('_x', '_y'), copy=True, indicator=False)\n```", "```py\nimport pandas as pd\nimport scipy as sp\nx= pd.DataFrame({'YEAR': [2010,2011, 2012, 2013],\n'IBM': [0.2, -0.3, 0.13, -0.2],\n'WMT': [0.1, 0, 0.05, 0.23]})\ny = pd.DataFrame({'YEAR': [2011,2013,2014, 2015],\n'C': [0.12, 0.23, 0.11, -0.1],\n'SP500': [0.1,0.17, -0.05, 0.13]})\n\nprint(pd.merge(x,y, on='YEAR'))\nprint(pd.merge(x,y, on='YEAR',how='outer'))\nprint(pd.merge(x,y, on='YEAR',how='left'))\nprint(pd.merge(x,y, on='YEAR',how='right'))\n```", "```py\nimport pandas as pd\nimport scipy as sp\nx= pd.DataFrame({'YEAR': [2010,2011, 2012, 2013],\n                 'IBM': [0.2, -0.3, 0.13, -0.2],\n                 'WMT': [0.1, 0, 0.05, 0.23]})\ny = pd.DataFrame({'date': [2011,2013,2014, 2015],\n                 'C': [0.12, 0.23, 0.11, -0.1],\n                 'SP500': [0.1,0.17, -0.05, 0.13]})\nprint(pd.merge(x,y, left_on='YEAR',right_on='date'))\n```", "```py\nimport pandas as pd\nimport scipy as sp\nx= pd.DataFrame({'YEAR': [2010,2011, 2012, 2013],\n                 'IBM': [0.2, -0.3, 0.13, -0.2],\n                 'WMT': [0.1, 0, 0.05, 0.23]})\ny = pd.DataFrame({'date': [2011,2013,2014, 2015],\n                 'C': [0.12, 0.23, 0.11, -0.1],\n                 'SP500': [0.1,0.17, -0.05, 0.13]})\nprint(pd.merge(x,y, right_index=True,left_index=True))\n```", "```py\nimport pandas as pd\nff=pd.read_pickle(\"c:/temp/ffMonthly.pkl\")\nprint(ff.head(2))\nmom=pd.read_pickle(\"c:/temp/ffMomMonthly.pkl\")\nprint(mom.head(3))\nx=pd.merge(ff,mom,left_index=True,right_index=True)\nprint(x.head(2))\n```", "```py\nresult = pd.merge(left, right, how='left', on=['key1', 'key2'])\n```", "```py\nimport pandas as pd\nx= pd.DataFrame({'ID': ['IBM', 'IBM', 'WMT', 'WMT'],\n'date': [2010, 2011, 2010, 2011],\n'SharesOut': [100, 40, 60, 90],\n'Asset': [20, 30, 10, 30]})\n\ny = pd.DataFrame({'ID': ['IBM', 'IBM', 'C', 'WMT'],\n'date': [2010, 2014, 2010, 2010],\n'Ret': [0.1, 0.2, -0.1,0.2],\n'ROA': [0.04,-0.02,0.03,0.1]})\n\nz= pd.merge(x,y, on=['ID', 'date'])\n```", "```py\nimport pandas as pd\nGDP=pd.read_pickle(\"c:/temp/usGDPquarterly.pkl\")\nff=pd.read_pickle(\"c:/temp/ffMonthly.pkl\")\nfinal=pd.merge(ff,GDP,left_index=True,right_index=True,how='left') \ntt=final['AdjustedGDPannualBillion']\nGDP2=pd.Series(tt).interpolate()\nfinal['GDP2']=GDP2\n\nprint(GDP.head())\nprint(ff.head())\nprint(final.tail(10))\n```", "```py\nimport pandas as pd\nx=pd.read_pickle(\"c:/temp/ffMonthly.pkl\")\nprint(x.head())\nprint(x.tail())\n```", "```py\nimport scipy as sp\nimport numpy as np\nimport pandas as pd\nfile=open(\"c:/temp/ffMonthly.txt\",\"r\")\ndata=file.readlines()\nf=[]\nindex=[]\nfor i in range(4,sp.size(data)):\nprint(data[i].split())\nt=data[i].split()\nindex.append(pd.to_datetime(t[0]+'01', format='%Y%m%d').date())\n#index.append(int(t[0]))\nfor j in range(1,5):\nk=float(t[j])\nf.append(k/100)\nn=len(f) \nf1=np.reshape(f,[n/4,4])\nff=pd.DataFrame(f1,index=index,columns=['MKT_RF','SMB','HML','Rf'])\nff.to_pickle(\"c:/temp/ffMonthly.pkl\")\n```", "```py\ndef sharpeRatio(ticker,begdate=(2012,1,1),enddate=(2016,12,31)):\n    Objective: estimate Sharpe ratio for stock\n        ticker  : stock symbol \n        begdate : beginning date\n        enddate : ending date\n\n       Example #1: sharpeRatio(\"ibm\")\n                     0.0068655583807256159\n\n       Example #2: date1=(1990,1,1)\n                   date2=(2015,12,23)\n                   sharpeRatio(\"ibm\",date1,date2)\n                     0.027831010497755326\n\n    import scipy as sp\n    from matplotlib.finance import quotes_historical_yahoo_ochl as getData\n    p = getData(ticker,begdate, enddate,asobject=True,adjusted=True)\n    ret=p.aclose[1:]/p.aclose[:-1]-1\n    return sp.mean(ret)/sp.std(ret) \n```", "```py\n    x = sm.add_constant(x)\n    ```", "```py\n    import scipy as sp\n    import numpy as np\n    mean=0.08;Rf=0.01;std=0.12;n=100\n    x=sp.random.normal(loc=mean,scale=std,size=n)\n    y=x[x-Rf<0]  \n    m=len(y)\n    for i in sp.arange(m):\n        total=0.0\n        total+=(y[i]-Rf)**2\n    LPSD=total/(m-1)\n    ```"]