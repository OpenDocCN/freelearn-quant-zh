- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Implementation in Quantum Clouds
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在量子云中的实现
- en: This chapter will dig deeper into the options for executing our algorithms in
    quantum devices or at least solutions that will go beyond the capabilities of
    our classical devices. For the sake of simplicity, most of the algorithms you
    have seen so far used some kind of local simulation to mimic how the outcome would
    look when running on a real quantum computer.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将深入探讨在量子设备上执行算法的选项，或者至少是超越我们经典设备能力的解决方案。为了简化，迄今为止你所看到的大多数算法都使用了某种本地模拟，来模仿在真实量子计算机上运行时的结果。
- en: When developing our approaches, we have the means to locally simulate the behavior
    of an ideal quantum computer while taking from the mathematical description each
    operation requires. But at the end of the day, the goal is to be able to send
    our work to a quantum device that will leverage the potential of actual quantum
    computing.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开发方法时，我们有手段在本地模拟理想量子计算机的行为，同时参考每个操作所需的数学描述。但最终的目标是能够将我们的工作发送到量子设备上，从而利用实际量子计算的潜力。
- en: Given that owning a quantum computer is something very few privileged people
    will be able to do, we will highlight how cloud access has been an important way
    of leveraging those still experimental resources.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于拥有量子计算机是极少数特权人士能够做到的事情，我们将重点介绍如何通过云访问成为利用这些仍处于实验阶段资源的重要途径。
- en: We will also illustrate several examples demonstrating how to utilize cloud
    resources and cloud-hosted quantum devices to execute the previously mentioned
    examples from *Chapters 4*, *5*, and *6*. By doing so, you will not only become
    familiar with the distinct workflow it may entail but also understand the advantages
    of employing these resources when working on the scale that most companies demand
    for their proof-of-concept or innovation projects.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将展示几个示例，演示如何利用云资源和云托管的量子设备来执行[*第4章*]、[*第5章*]和[*第6章*]中提到的示例。通过这样做，你不仅会熟悉它可能涉及的不同工作流程，还将理解在大多数公司进行概念验证或创新项目时，使用这些资源的优势。
- en: Lastly, considering that the cloud operates on a pay-per-use model, we will
    examine the financial implications of utilizing cloud services for our project.
    We will also explore intriguing approaches to initiate quantum projects and implementations
    on cloud-hosted services, even with a limited budget.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，考虑到云服务是基于按需付费模式运营的，我们将探讨利用云服务进行项目开发的财务影响。我们还将探索一些有趣的方法，即使预算有限，仍然可以启动基于云托管服务的量子项目和实现。
- en: '*Chapters 8* and *9* will dig deeper into different types of devices and simulators
    we might be using, as well as how to deal with the noise most devices will introduce
    into our abstracted circuits. Finally, [*Chapter 10*](B19146_10.xhtml#_idTextAnchor181)
    will get us into the strategies we can utilize to start using quantum computing
    as an added value asset in our organization and grow with a sensible adoption
    strategy that will not harm our corporation’s finances, nor the pace at which
    the institution may be adopting these disruptive but promising new paradigms as
    part of their business processes.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*第8章*和*第9章*将深入探讨我们可能使用的不同类型的设备和模拟器，以及如何应对大多数设备在我们抽象电路中引入的噪声。最后，[*第10章*](B19146_10.xhtml#_idTextAnchor181)将带我们了解可以利用的策略，以便开始将量子计算作为增值资产纳入我们的组织，并通过一个合理的采纳策略来成长，这样既不会伤害公司财务，也不会影响机构采用这些具有颠覆性但充满潜力的新范式的步伐，将其作为商业流程的一部分。'
- en: 'This chapter will cover the following topics:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Challenges of accessing the cloud quantum computing platform and implementing
    an algorithm
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问云量子计算平台并实现算法的挑战
- en: Major quantum technology providers
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要量子技术提供商
- en: Cost estimation when using a cloud provider
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用云服务提供商时的成本估算
- en: Challenges of quantum implementations on cloud platforms
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在云平台上实现量子计算的挑战
- en: 'As we mentioned previously, most of the examples shown previously leverage
    the fact that quantum computing can be mimicked by our classical resources (using
    simulators). As an example, in [*Chapter 5*](B19146_05.xhtml#_idTextAnchor100),
    we used the following routine:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，大多数之前展示的示例利用了量子计算可以通过我们的经典资源（使用模拟器）来模拟的事实。举例来说，在[*第5章*](B19146_05.xhtml#_idTextAnchor100)中，我们使用了以下例程：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We utilized a `qasm_simulator`, an implementation that can execute the operations
    defined in our quantum circuit and provide the expected outcome as dictated by
    the mathematical principles governing quantum computing.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了一个 `qasm_simulator`，它是一个可以执行我们量子电路中定义的操作并根据量子计算的数学原理提供预期结果的实现。
- en: We would like to take this very same circuit to a quantum computer, but it is
    not as easy as purchasing one on Amazon. We can purchase commercially available
    devices, but the price might be too high for most organizations.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望将这同一个电路带到量子计算机上，但这并不像在亚马逊上购买一个那样简单。我们可以购买市售的设备，但对大多数组织来说，价格可能过于昂贵。
- en: D-Wave
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: D-Wave
- en: 'In 2011, D-Wave Systems announced the world’s first commercially available
    quantum computer – a 128-qubit quantum annealing device. They have been able to
    scale their Chimera topology up to 2,000 qubits, and the new architectures have
    surpassed this barrier, with up to 8,000 qubits promised for late 2023/early 2024\.
    Considering that the cost of their initial device reached a seven-zero figure
    ([https://www.engadget.com/2011-05-18-d-wave-one-claims-mantle-of-first-commercial-quantum-computer.html](https://www.engadget.com/2011-05-18-d-wave-one-claims-mantle-of-first-commercial-quantum-computer.html))
    and its chassis reminds us of old mainframe infrastructures, as can be seen in
    *Figure 7**.1*, which requires a data center to put it in, it was clear it was
    not going to be mass-produced:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 2011 年，D-Wave Systems 宣布推出世界上首款商业化量子计算机——一台 128 量子比特的量子退火设备。他们已经能够将其 Chimera
    拓扑结构扩展至 2,000 量子比特，而新架构突破了这一瓶颈，预计到 2023 年末或 2024 年初将推出最多 8,000 量子比特的设备。考虑到其初期设备的成本达到了七位数（[https://www.engadget.com/2011-05-18-d-wave-one-claims-mantle-of-first-commercial-quantum-computer.html](https://www.engadget.com/2011-05-18-d-wave-one-claims-mantle-of-first-commercial-quantum-computer.html)），且其外壳让人联想到老式大型机基础设施，正如在*图
    7.1*中所示，这些设备需要数据中心来安置，因此显然它不会进行大规模生产：
- en: '![Figure 7.1 – A technician working on a D-Wave Systems machine](img/B19146_07_001.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.1 – 一名技术员正在操作 D-Wave Systems 机器](img/B19146_07_001.jpg)'
- en: Figure 7.1 – A technician working on a D-Wave Systems machine
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1 – 一名技术员正在操作 D-Wave Systems 机器
- en: IBM Quantum
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IBM Quantum
- en: 'Something similar happened to IBM when they started creating their initial
    chips. In 2018, they released their first commercial product, IBM Q System One,
    as shown in *Figure 7**.2*, which is a 20-qubit commercially available quantum
    computer:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: IBM 在创建其初期芯片时也经历了类似的情况。2018 年，他们发布了首款商业化产品 IBM Q System One，如*图 7.2*所示，这是一台
    20 量子比特的商业化量子计算机：
- en: '![Figure 7.2 – IBM’s Q System One device](img/B19146_07_002.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.2 – IBM 的 Q System One 设备](img/B19146_07_002.jpg)'
- en: Figure 7.2 – IBM’s Q System One device
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2 – IBM 的 Q System One 设备
- en: But before this achievement, they were already aware of the needs of many research
    institutions and universities already working in the field of quantum computers.
    They wanted to use an actual device, but they would need to build their own to
    run their experiments.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 但在此成就之前，他们已经意识到许多在量子计算领域工作的研究机构和大学的需求。它们希望使用实际设备，但需要自己建造设备来进行实验。
- en: That is why, in early 2016, IBM decided to connect one of their experimental
    devices to a cloud service so that independent organizations could submit their
    experiments to their first available quantum computer. This milestone gave birth
    to the rich cloud quantum computing ecosystem we know today.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 正因如此，IBM 在 2016 年初决定将其中一台实验设备连接到云服务，使得独立组织可以将他们的实验提交到首台可用的量子计算机上。这一里程碑标志着今天我们所知道的丰富的云量子计算生态系统的诞生。
- en: In early 2017, a team at Rigetti Computing was able to program a set of instructions
    into IBM’s device using the pyQuil Python wrapper of the Quil Quantum Instruction
    Set Architecture (*Smith et* *al., 2016*).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 2017 年初，Rigetti Computing 的一个团队成功地将一组指令编程到 IBM 的设备中，使用的是 pyQuil Python 封装的 Quil
    量子指令集架构（*Smith 等人，2016*）。
- en: Like in many emergent industries, several standards can still be found. IBM
    decided to leverage its own. We have made reference to it in previous chapters.
    Still, **Open Quantum Assembly Language** (**OpenQASM**), which is already on
    its third version, was initially referenced in a publication (*Cross et al., 2017*)
    and the code of IBM’s Quantum Information Software Toolkit (*Qiskit - Anis, Md
    Sajid, et al., 2021*), becoming one of the most mature frameworks for implementing
    quantum programs and communicating with a wide variety of cloud-available devices.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 和许多新兴行业一样，仍然可以找到多个标准。IBM决定利用其自有标准。我们在前面的章节中提到过它。尽管如此，**开放量子汇编语言**（**OpenQASM**）已经进入第三个版本，最初在一篇出版物中被提及（*Cross等，2017*），以及IBM的量子信息软件工具包（*Qiskit
    - Anis, Md Sajid等，2021*）的代码，成为实现量子程序并与各种云端可用设备通信的最成熟框架之一。
- en: Qiskit can abstract our quantum code from the final device it will run on, but
    given this quite diverse landscape of devices, we might need to remember that
    certain frameworks will fit our needs better, depending on the final hardware
    meant to be used.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Qiskit可以将我们的量子代码从最终运行的设备中抽象出来，但鉴于设备的多样化，我们可能需要记住，根据最终使用的硬件，某些框架更能满足我们的需求。
- en: One of the most evident examples is when D-Wave Systems’ devices were the ones
    to be used. These are quantum annealing devices. Therefore, gate operations do
    not apply to them yet ([https://techcrunch.com/2021/10/05/d-wave-plans-to-build-a-gate-model-quantum-computer](https://techcrunch.com/2021/10/05/d-wave-plans-to-build-a-gate-model-quantum-computer)).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一个最明显的例子是，当使用D-Wave Systems的设备时。这些是量子退火设备。因此，门操作目前尚不适用（[https://techcrunch.com/2021/10/05/d-wave-plans-to-build-a-gate-model-quantum-computer](https://techcrunch.com/2021/10/05/d-wave-plans-to-build-a-gate-model-quantum-computer)）。
- en: 'Their devices are freely accessible via their service offering, known as Leap
    (*Figure* *7**.3*; [https://cloud.dwavesys.com/leap/login](https://cloud.dwavesys.com/leap/login)):'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的设备可以通过他们的服务平台Leap自由访问（*图7.3*；[https://cloud.dwavesys.com/leap/login](https://cloud.dwavesys.com/leap/login)）：
- en: '![Figure 7.3 – D-Wave Systems’ cloud-accessible service, Leap](img/B19146_07_003.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图7.3 – D-Wave Systems的云访问服务Leap](img/B19146_07_003.jpg)'
- en: Figure 7.3 – D-Wave Systems’ cloud-accessible service, Leap
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.3 – D-Wave Systems的云访问服务Leap
- en: 'You can simply sign up, and you will be granted monthly time to run your experiments.
    In fact, within the different plans, you can access the Developer Plan (*Figure
    7**.4*), which only requires a GitHub account to be synchronized with D-Wave’s
    Leap service – it provides recurrent usage of their devices for up to 20 minutes
    a month. Considering that the running time of their solver only requires milliseconds,
    it allows for quite a few experiments to be run before you run out of time:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你只需注册，便可以获得每月一定的时间来运行你的实验。事实上，在不同的计划中，你可以访问开发者计划（*图7.4*），该计划只需要将GitHub账户与D-Wave的Leap服务同步——它提供每月最多20分钟的设备使用时间。考虑到他们的求解器运行时间只需要毫秒级，允许你在时间用尽前进行相当多的实验：
- en: '![Figure 7.4 – D-Wave’s cloud service usage plans](img/B19146_07_004.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图7.4 – D-Wave云服务使用计划](img/B19146_07_004.jpg)'
- en: Figure 7.4 – D-Wave’s cloud service usage plans
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4 – D-Wave云服务使用计划
- en: 'Two main options are available when interacting with Leap. The simplest one
    is directly using their cloud-based development environment. By providing the
    URL to an existing GitHub repository where the code will be taken from and committed
    to guarantee it is not lost, an ephemeral browser-accessible IDE will be created
    where your account credentials will be made available. This enables a ready-to-work
    environment for any registered user:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 与Leap交互时有两个主要选项。最简单的一种是直接使用他们基于云的开发环境。通过提供现有GitHub仓库的URL，从中提取代码并提交以确保代码不会丢失，系统将创建一个临时的浏览器可访问的IDE，并提供你的账户凭证。这为任何注册用户提供了一个即刻可用的工作环境：
- en: '![Figure 7.5 – A Leap workspace with an airline example loaded in an example
    IDE](img/B19146_07_005.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图7.5 – 一个包含航空公司示例的Leap工作区，加载在示例IDE中](img/B19146_07_005.jpg)'
- en: Figure 7.5 – A Leap workspace with an airline example loaded in an example IDE
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5 – 一个包含航空公司示例的Leap工作区，加载在示例IDE中
- en: This will also ensure that D-Wave’s Ocean Software Development Kit is installed
    and ready to use.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这也将确保D-Wave的Ocean软件开发工具包已安装并准备就绪。
- en: 'Of course, you could install the SDK on a local Python setup and log into the
    account by using a Leap-provided token that should be accessible via the Leap
    interface, as shown in *Figure 7**.6*:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您也可以在本地 Python 环境中安装 SDK，并通过 Leap 提供的令牌登录账户，该令牌应通过 Leap 界面可访问，如 *图 7.6* 所示：
- en: '![Figure 7.6 – Leap dashboard, where you can find the token for remote authentication](img/B19146_07_006.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.6 – Leap 控制面板，在这里可以找到远程身份验证令牌](img/B19146_07_006.jpg)'
- en: Figure 7.6 – Leap dashboard, where you can find the token for remote authentication
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.6 – Leap 控制面板，在这里可以找到远程身份验证令牌
- en: Ocean SDK’s documentation already provides instructions on how this can be done
    locally so that interaction with the cloud service is done programmatically ([https://docs.ocean.dwavesys.com/en/latest/overview/install.html](https://docs.ocean.dwavesys.com/en/latest/overview/install.html)).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Ocean SDK 的文档已经提供了如何在本地进行操作的说明，这样与云服务的交互就能通过编程完成 ([https://docs.ocean.dwavesys.com/en/latest/overview/install.html](https://docs.ocean.dwavesys.com/en/latest/overview/install.html))。
- en: This is how we remotely solved our portfolio optimization in [*Chapter 5*](B19146_05.xhtml#_idTextAnchor100)
    using a non-owned D-Wave device, free of charge.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们如何通过远程方式在 [*第 5 章*](B19146_05.xhtml#_idTextAnchor100) 中使用非自有的 D-Wave 设备免费解决投资组合优化问题。
- en: Like D-Wave, IBM offers free access to some of their devices via their cloud-accessible
    service ([https://quantum-computing.ibm.com/](https://quantum-computing.ibm.com/)).
    You can register using a wide variety of credentials so that if you’re using a
    LinkedIn or GitHub account, you have a simplistic way to access their solutions
    (free or pay-as-you-go).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 与 D-Wave 类似，IBM 通过其云服务提供对部分设备的免费访问 ([https://quantum-computing.ibm.com/](https://quantum-computing.ibm.com/))。您可以使用多种凭据进行注册，因此如果您使用的是
    LinkedIn 或 GitHub 账户，您可以轻松访问他们的解决方案（免费或按需付费）。
- en: 'Once registered, a set of services will be shown so that you can choose the
    appropriate one according to your level of expertise. *Figure 7**.7* shows all
    the different services available:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 注册后，会显示一组服务，您可以根据自己的专业水平选择合适的服务。*图 7.7* 展示了所有可用的不同服务：
- en: '![Figure 7.7 – IBM Quantum dashboard showing the different available services](img/B19146_07_007.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.7 – IBM Quantum 控制面板，展示了不同的可用服务](img/B19146_07_007.jpg)'
- en: Figure 7.7 – IBM Quantum dashboard showing the different available services
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.7 – IBM Quantum 控制面板，展示了不同的可用服务
- en: One of the first things we will realize is that there is also a token option,
    so remote job submission is also available – in this case, using IBM’s Qiskit
    framework. This is often the token that’s referred to when the instructions are
    set to a local setup ([https://github.com/Qiskit/qiskit-ibmq-provider#configure-your-ibm-quantum-credentials](https://github.com/Qiskit/qiskit-ibmq-provider#configure-your-ibm-quantum-credentials)).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先会注意到，还有一个令牌选项，因此也可以提交远程作业——在这种情况下，使用 IBM 的 Qiskit 框架。这通常就是指令设置为本地环境时提到的令牌
    ([https://github.com/Qiskit/qiskit-ibmq-provider#configure-your-ibm-quantum-credentials](https://github.com/Qiskit/qiskit-ibmq-provider#configure-your-ibm-quantum-credentials))。
- en: 'IBM also provides a tool for creating quantum circuits: Quantum Composer. It’s
    probably the easiest way to start *coding* our first examples. *Figure 7**.8*
    shows how, by dragging and dropping gate figures into Quantum Composer’s central
    console, different plots or even Qiskit and OpenQASM codes are shown. It simplifies
    the transition from the graphical designer to code-based implementations, which
    will be useful when you’re aiming for more complex examples or projects like the
    ones we covered in *Chapters 4* to *6*:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: IBM 还提供了一个创建量子电路的工具：Quantum Composer。这可能是开始 *编写代码* 第一个示例的最简单方式。*图 7.8* 展示了如何通过拖放门图形到
    Quantum Composer 的中央控制台，显示不同的图表，甚至是 Qiskit 和 OpenQASM 代码。它简化了从图形设计师到基于代码的实现的过渡，这在您需要更复杂的示例或项目时会非常有用，比如我们在
    *第 4 章* 到 *第 6 章* 中涵盖的内容：
- en: '![Figure 7.8 – IBM’s Quantum Composer graphical interface for starting quantum
    algorithm programming](img/B19146_07_008.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.8 – IBM 的 Quantum Composer 图形界面，用于开始量子算法编程](img/B19146_07_008.jpg)'
- en: Figure 7.8 – IBM’s Quantum Composer graphical interface for starting quantum
    algorithm programming
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.8 – IBM 的 Quantum Composer 图形界面，用于开始量子算法编程
- en: 'On the top left-hand side of the preceding figure, we can see that it also
    allows us to submit our circuit to a device. We can select the device according
    to the number of qubits we might require and the waiting queue (many people will
    be sending circuits to the same shared device), so we can choose the least busy
    one (*Figure 7**.9*):'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在前图的左上角，我们可以看到它还允许我们将电路提交到设备上。我们可以根据可能需要的量子比特数量和等待队列来选择设备（许多人将向同一个共享设备发送电路），因此我们可以选择最不繁忙的设备（*图
    7**.9*）：
- en: '![Figure 7.9 – Circuit submission from Quantum Composer to one of the available
    devices](img/B19146_07_009.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.9 – 从量子作曲器提交电路到可用设备](img/B19146_07_009.jpg)'
- en: Figure 7.9 – Circuit submission from Quantum Composer to one of the available
    devices
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.9 – 从量子作曲器提交电路到可用设备
- en: 'Once the job is sent to the device, the queue will progress, and our results
    will be made available. Within the same console, the set of jobs we have sent
    can be listed, and more information can be requested if we click on the job itself
    (*Figure 7**.10*):'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦作业发送到设备，队列将继续推进，我们的结果将会变得可用。在同一个控制台中，我们可以列出已发送的作业集，如果点击具体的作业本身，还可以请求更多信息（*图
    7**.10*）：
- en: '![Figure 7.10 – Actual results obtained from the ibm_nairobi device](img/B19146_07_010.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.10 – 从 ibm_nairobi 设备获得的实际结果](img/B19146_07_010.jpg)'
- en: Figure 7.10 – Actual results obtained from the ibm_nairobi device
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.10 – 从 ibm_nairobi 设备获得的实际结果
- en: IBM keeps a list of all the jobs we have submitted; therefore, old results can
    be recovered from the cloud service. A really useful feature is when someone has
    to send a set of examples so that they can be later analyzed. Most of our examples
    will take time to run, not only because they might be variationally trained and
    therefore need to call the device many times, but because the queue for the device
    may increase and take quite some time until our circuit runs on the device (the
    priority in the queue is determined by the number of requests you make in a certain
    time).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: IBM会保留我们提交的所有作业列表，因此，旧的结果可以从云服务中恢复。一个非常有用的功能是，当某人必须发送一组示例以便后续分析时，我们可以利用这一功能。我们的许多示例需要一定的时间来运行，不仅因为它们可能经过变分训练，因此需要多次调用设备，而且因为设备的排队可能会增加，并且可能需要相当长的时间才能让我们的电路在设备上运行（队列中的优先级由你在某段时间内发出的请求数量决定）。
- en: Two interesting things we would like to highlight at this point are that if
    we look at the plots in *Figure 7**.10*, the one from the devices shows values
    on states that were not present when we simulated the results (the right-hand
    side plot in *Figure 7**.10*). This is because of the effect of noise and the
    different types of errors that are introduced when running on real devices. We
    will cover this in more detail in *Chapters 8* and *9*. Still, it is interesting
    that we highlight that real devices will not behave like the ideal simulators
    we have been using in some of the examples and will introduce results that are
    not supposed to be there.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要强调的两件有趣的事情是，如果我们查看*图 7**.10*中的图表，设备上的图表显示了在我们模拟结果时并不存在的状态值（*图 7**.10*中的右侧图表）。这是因为噪声效应和在真实设备上运行时引入的不同类型的错误。我们将在*第8章*和*第9章*中更详细地讨论这一点。尽管如此，值得强调的是，真实设备的表现不会像我们在某些示例中使用的理想模拟器那样，且会引入本不应存在的结果。
- en: Another interesting fact is that, if we get to the details of the job we just
    submitted, the circuit we sent and the one that runs are not the same, as can
    be seen in *Figure 7**.11*. Computationally speaking, they are, because the composition
    of *Z* rotations and square root *X* provides the same effect as the Hadamard
    gate, but this is changed because the H operation is unavailable on the device.
    Not all operations performed in the theoretical setup are available on the devices.
    There are even more qubits than the ones we want to use. Therefore, there is always
    a step we cannot omit when moving to the real device; this is called *transpilation*.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的事实是，如果我们查看刚刚提交的作业的细节，所发送的电路与实际运行的电路并不相同，正如*图 7**.11*中所见。从计算角度来看，它们是相同的，因为*Z*旋转和平方根*X*的组合提供了与Hadamard门相同的效果，但这是因为设备上无法使用H操作而有所改变。在理论设置中执行的并非所有操作都能在设备上执行。甚至有比我们想要使用的更多的量子比特。因此，在转向真实设备时，总是有一个步骤是我们无法省略的，这个过程叫做*转换*。
- en: Transpilation is the process of adapting our theoretical algorithm to the specific
    gates and topology of a chip that may not perfectly map what we require. This
    process tries to find the best way to map the quantum circuit using some heuristics
    and different optimization levels. By doing this programmatically, we can balance
    the time it takes to fit the algorithm and the depth or the number of operations
    it will be translated into. Simply put, the transpile job will reduce complex
    gates into basic ones to map the hardware architecture.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 转译是将我们的理论算法适配到可能无法完全映射所需内容的芯片的特定门和拓扑结构的过程。这个过程试图使用一些启发式方法和不同的优化级别找到最佳的量子电路映射方式。通过程序化的方式，我们可以平衡适配算法所需的时间与其所转换的深度或操作次数。简而言之，转译作业将把复杂的门简化为基本门，以便映射到硬件架构上。
- en: 'The more operations we introduce, the more noise the circuit will be subjected
    to, and more inaccurate results may appear in our final reading. That is why this
    step is so important for researchers; they invest so much time in finding better
    ways to improve it. In [*Chapter 9*](B19146_09.xhtml#_idTextAnchor165), we will
    look at some of the latest advances in this process, which is known as *error
    mitigation*:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们引入的操作越多，电路所承受的噪声也就越大，最终读取的结果可能会更加不准确。这就是为什么这一步骤对研究人员如此重要；他们投入大量时间寻找更好的改进方法。在
    [*第 9 章*](B19146_09.xhtml#_idTextAnchor165) 中，我们将看到这一过程的一些最新进展，这一过程被称为 *错误缓解*：
- en: '![Figure 7.11 – Submitted circuit and the actual circuit that runs on ibm_nairobi](img/B19146_07_011.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.11 – 提交的电路与在 ibm_nairobi 上运行的实际电路](img/B19146_07_011.jpg)'
- en: Figure 7.11 – Submitted circuit and the actual circuit that runs on ibm_nairobi
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.11 – 提交的电路与在 ibm_nairobi 上运行的实际电路
- en: 'Within the options available in IBM’s cloud offering, there’s the option to
    deploy a workspace so that we can work from there without worrying about local
    installations and account settings. The Quantum Lab option (*Figure 7**.12*) allows
    us to deploy a hosted JupyterLab environment that’s already configured with the
    latest Qiskit version and our account loaded so that submitting jobs becomes easy:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在 IBM 的云服务选项中，有一个部署工作区的选项，让我们可以从那里工作，而无需担心本地安装和账户设置。Quantum Lab 选项（*图 7**.12*）允许我们部署一个已经配置好最新
    Qiskit 版本并加载我们账户的托管 JupyterLab 环境，这样提交作业就变得容易了：
- en: '![Figure 7.12 – IBM Quantum Lab workspace creation and available tutorials](img/B19146_07_012.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.12 – IBM Quantum Lab 工作区创建及可用教程](img/B19146_07_012.jpg)'
- en: Figure 7.12 – IBM Quantum Lab workspace creation and available tutorials
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.12 – IBM Quantum Lab 工作区创建及可用教程
- en: 'Any of the examples we have previously coded can be easily transferred to this
    workspace, given that Jupyter notebooks can be transferred just by clicking on
    the upload option (up-facing arrow in *Figure 7**.12*). Suppose we click on the
    first **Notebook** option available that says **Python 3** under Qiskit’s logo.
    In that case, a new Jupyter notebook instance will be shown where some common
    libraries and the way we can load our account credentials will appear:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前编写的任何示例都可以轻松地转移到这个工作区，因为 Jupyter 笔记本只需点击上传选项（*图 7**.12* 中的向上箭头）即可转移。假设我们点击可用的第一个
    **Notebook** 选项，该选项在 Qiskit 的标志下显示 **Python 3**。在这种情况下，将显示一个新的 Jupyter 笔记本实例，其中会显示一些常见的库以及我们如何加载账户凭证：
- en: '![Figure 7.13 – Default cell made available when Qiskit-supporting notebooks
    are created](img/B19146_07_013.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.13 – 创建 Qiskit 支持的笔记本时提供的默认单元格](img/B19146_07_013.jpg)'
- en: Figure 7.13 – Default cell made available when Qiskit-supporting notebooks are
    created
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.13 – 创建 Qiskit 支持的笔记本时提供的默认单元格
- en: '*Figure 7**.13* shows the code to load the default provider to access all the
    available backends. They can then be requested:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7**.13* 显示了加载默认提供程序以访问所有可用后端的代码。然后可以请求这些后端：'
- en: '![Figure 7.14 – Freely available device and simulator options within IBM’s
    Quantum Lab](img/B19146_07_014.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.14 – IBM Quantum Lab 内部自由提供的设备和模拟器选项](img/B19146_07_014.jpg)'
- en: Figure 7.14 – Freely available device and simulator options within IBM’s Quantum
    Lab
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.14 – IBM Quantum Lab 内部自由提供的设备和模拟器选项
- en: '*Figure 7**.14* shows the output of the backend function and lists devices
    and simulators. These are classical resources mimicking an available quantum computer,
    so we can choose the backend that best fits our requirements.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7**.14* 显示了后端函数的输出，并列出了设备和模拟器。这些是模拟可用量子计算机的经典资源，因此我们可以选择最符合要求的后端。'
- en: Having covered two of the most popular cloud-based resources for quantum computing,
    you may think that going provider by provider and testing different device types
    may become a nightmare of tokens, configurations, and frameworks to be used.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在介绍了两种最受欢迎的基于云的量子计算资源后，你可能会认为逐个提供商地测试不同的设备类型可能会变成一个关于令牌、配置和要使用的框架的噩梦。
- en: That is the reason why key players have also started enabling cloud-based quantum
    computing but from a slightly different perspective. AWS and Azure, being the
    cloud providers for the majority of corporations around the globe, aim to make
    it easier to access technology in general. That is the way they primarily joined
    the quantum community – as hubs providing access not only to their actual offering
    but also to third-party providers so that you can access a plethora of options
    via their services.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么主要的参与者也开始启用基于云的量子计算，但从稍微不同的角度来看。作为全球大多数企业的云服务提供商，AWS 和 Azure 旨在使技术更容易访问。这也是它们主要加入量子社区的方式——作为枢纽，不仅提供自身的服务，还提供对第三方提供商的访问，让你通过它们的服务访问众多选项。
- en: This is why, in the next two sections, we will concentrate on AWS and Azure
    while showcasing the different options and ways to access those computational
    means so that any quantum developer can make the most out of the existing broad
    offerings.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么在接下来的两部分中，我们将专注于 AWS 和 Azure，并展示如何访问这些计算资源的不同选项和方式，以便任何量子开发者都能最大程度地利用现有的广泛资源。
- en: Amazon Braket
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon Braket
- en: '**Amazon Web Services** (**AWS**) decided to create both a service and a framework
    for quantum computation under the same name.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚马逊网络服务**（**AWS**）决定为量子计算创建一个既是服务又是框架的统一平台。'
- en: The Amazon Braket service, like in previous examples, makes quantum computing
    devices that go beyond the actual offering of AWS available to any user. As far
    as we know, AWS is not working on any hardware device of its own. So, how can
    they offer a quantum computing platform? Well, they partnered with some key niche
    players providing said hardware that decided to give access through a third party
    instead of adding that extra workload of maintaining a customer-accessed platform
    to their business model.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Braket 服务，像之前的例子一样，使得超出 AWS 实际提供的量子计算设备也能对任何用户开放。据我们所知，AWS 并未开发自己的硬件设备。那么，它们是如何提供量子计算平台的呢？事实上，它们与一些提供硬件的关键细分市场公司合作，这些公司选择通过第三方提供访问，而不是将维护客户访问平台的额外工作量纳入其商业模式。
- en: 'Anybody with an AWS account can access the Braket service within their account,
    though not all regions currently offer this option, as shown here:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 任何拥有 AWS 账户的人都可以在其账户内访问 Braket 服务，尽管并非所有区域目前都提供此选项，如下所示：
- en: '![Figure 7.15 – Amazon Braket shown within the AWS service console, highlighting
    region options](img/B19146_07_015.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.15 – 显示在 AWS 服务控制台中的 Amazon Braket，突出显示区域选项](img/B19146_07_015.jpg)'
- en: Figure 7.15 – Amazon Braket shown within the AWS service console, highlighting
    region options
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.15 – 显示在 AWS 服务控制台中的 Amazon Braket，突出显示区域选项
- en: 'The console resembles the ones we saw previously as it also provides an overview
    of available devices, notebooks that can be run on a workspace created for remote
    development, and a list of jobs that were previously running within the service:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 该控制台类似于我们之前看到的控制台，因为它同样提供了可用设备的概览、可在为远程开发创建的工作区上运行的笔记本，以及之前在服务中运行的作业列表：
- en: '![Figure 7.16 – Amazon Braket’s main console and available devices](img/B19146_07_016.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.16 – Amazon Braket 的主控制台和可用设备](img/B19146_07_016.jpg)'
- en: Figure 7.16 – Amazon Braket’s main console and available devices
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.16 – Amazon Braket 的主控制台和可用设备
- en: One of the key benefits of using AWS Braket instead of independent direct access
    services provided by any quantum hardware company is that it acts as a hub. So,
    by using the same connectivity interface, a customer can directly access a plethora
    of services of many different types.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 AWS Braket 而不是任何量子硬件公司提供的独立直接访问服务的关键优势之一是，它充当了一个枢纽。因此，通过使用相同的连接界面，客户可以直接访问许多不同类型的服务。
- en: 'It also provides a set of libraries containing implementations of some canonical
    algorithms that we reviewed in [*Chapter 2*](B19146_02.xhtml#_idTextAnchor032).
    As shown in *Figure 7**.17*, they are provided via Amazon Braket’s Python SDK,
    an open source framework provided by AWS:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 它还提供了一组库，其中包含我们在 [*第 2 章*](B19146_02.xhtml#_idTextAnchor032) 中回顾过的一些经典算法的实现。如
    *图 7.17* 所示，它们通过 Amazon Braket 的 Python SDK 提供，这是 AWS 提供的开源框架：
- en: '![Figure 7.17 – Amazon Braket’s algorithm library and Berstein Vazirani implementation
    example](img/B19146_07_017.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.17 – Amazon Braket的算法库和Berstein Vazirani实现示例](img/B19146_07_017.jpg)'
- en: Figure 7.17 – Amazon Braket’s algorithm library and Berstein Vazirani implementation
    example
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.17 – Amazon Braket的算法库和Berstein Vazirani实现示例
- en: This framework is more general, given the technologies Amazon Braket is meant
    to support beyond the superconducting chip IBM is focusing on. It makes sense
    that IBM’s framework is mostly thought to help increase device usage. Still, Amazon
    is forced to cover a much wider spectrum within its offering. Here, we can find
    neutral atoms, photonic devices, and trapped-ion services that require different
    ways to interact and impose the computation to be done.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这个框架更为通用，因为Amazon Braket旨在支持的技术不仅仅是IBM专注的超导芯片。IBM的框架主要是为了增加设备的使用，但Amazon不得不在其服务中涵盖更广泛的技术领域。在这里，我们可以找到中性原子、光子设备和陷阱离子服务，它们需要不同的交互方式并对计算过程提出不同要求。
- en: 'To understand why this is important, many restrictions associated with the
    process of transpiling the logical circuit initially coded into a specific device
    setup depend on particular aspects of the device. One of the most basic ones is
    qubit connectivity, which forces different translations. This connectivity differs
    from provider to provider (and also backends), as shown here:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解为什么这很重要，许多与逻辑电路转换过程相关的限制最初编码到特定设备设置中的都取决于设备的特定方面。最基本的限制之一是量子比特（qubit）的连通性，这会导致不同的转换方式。这种连通性因供应商（以及后端）而异，如下所示：
- en: '![Figure 7.18 – Superconducting chip topology for IBM Washington (below) and
    Rigetti Aspen-M-3 (above)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.18 – IBM Washington（下）和Rigetti Aspen-M-3（上）的超导芯片拓扑图'
- en: '](img/B19146_07_018a.jpg)![Figure 7.18 – Superconducting chip topology for
    IBM Washington (below) and Rigetti Aspen-M-3 (above)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B19146_07_018a.jpg)![图 7.18 – IBM Washington（下）和Rigetti Aspen-M-3（上）的超导芯片拓扑图'
- en: '](img/B19146_07_018b.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B19146_07_018b.jpg)'
- en: Figure 7.18 – Superconducting chip topology for IBM Washington (below) and Rigetti
    Aspen-M-3 (above)
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.18 – IBM Washington（下）和Rigetti Aspen-M-3（上）的超导芯片拓扑图
- en: 'There are also some differences, such as the native quantum gates that the
    provider will accept. For example, Hadamard gates, which are used for state superposition,
    can hardly be achieved if you don’t combine other actions that can be realized
    in hardware, as shown in *Figure 7**.11*. But it has more profound implications
    when the underlying technology changes. For example, ion-trapped devices can connect
    “many-to-many” qubits arbitrarily (*Figure 7**.19* – connections representation)
    and are better suited for problems that show all-to-all connectivity schemes.
    This is, for example, the case for portfolio optimization, which requires you
    to evaluate the covariance between all potential assets ([*Chapter 5*](B19146_05.xhtml#_idTextAnchor100)):'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些差异，比如供应商接受的本地量子门。例如，用于状态叠加的Hadamard门，如果不结合其他硬件实现的操作几乎无法实现，如*图 7.11*所示。但当基础技术发生变化时，这会产生更深远的影响。例如，陷阱离子设备可以任意连接“多对多”的量子比特（*图
    7.19* – 连接表示），更适合显示全互联结构的问题。例如，投资组合优化就是这种情况，它要求你评估所有潜在资产之间的协方差（[*第 5 章*](B19146_05.xhtml#_idTextAnchor100)）：
- en: '![Figure 7.19 – IonQ trapped-ion device topology](img/B19146_07_019.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.19 – IonQ 陷阱离子设备拓扑图](img/B19146_07_019.jpg)'
- en: Figure 7.19 – IonQ trapped-ion device topology
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.19 – IonQ 陷阱离子设备拓扑图
- en: Or in the case of neutral atom devices, similar to what happens in D-Wave systems,
    analog coding has to be submitted instead of gate-based algorithms, which requires
    some specific knowledge on how this needs to be done ([https://docs.aws.amazon.com/braket/latest/developerguide/braket-quera-submitting-analog-program-aquila.html](https://docs.aws.amazon.com/braket/latest/developerguide/braket-quera-submitting-analog-program-aquila.html)).
    This is also one of the reasons why Amazon Braket was developed as it allows us
    to extend those specific requirements as new services are enabled within the platform.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 或者在中性原子设备的情况下，类似于D-Wave系统中发生的情况，必须提交模拟编码而非基于门的算法，这需要一些特定的知识来执行这些操作（[https://docs.aws.amazon.com/braket/latest/developerguide/braket-quera-submitting-analog-program-aquila.html](https://docs.aws.amazon.com/braket/latest/developerguide/braket-quera-submitting-analog-program-aquila.html)）。这也是Amazon
    Braket开发的原因之一，因为它使我们能够在平台内启用新服务时扩展这些特定需求。
- en: Given the usage and maturity of Qiskit within the quantum computing community,
    Amazon also released a plugin so that any Qiskit-encoded routine can be sent to
    Amazon Braket-enabled devices. This helps us interface with some of those devices
    that offer gate-based computation without the need to learn about a third framework.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于Qiskit在量子计算社区的使用和成熟，亚马逊还发布了一个插件，使得任何Qiskit编码的例程都可以发送到支持Amazon Braket的设备。这帮助我们与一些提供门控计算的设备对接，而无需学习第三方框架。
- en: 'You can use the following code to install the Amazon provider-enabling plugin:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下代码来安装亚马逊提供商启用插件：
- en: '[PRE1]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Qiskit circuits can be sent to Amazon devices. Similar to what we did in the
    case of the IBM-enabled provider in *Figure 7**.14*, we can instantiate Amazon
    Braket as a provider:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Qiskit电路可以发送到亚马逊设备。类似于我们在*图7.14*中的IBM启用提供商的做法，我们可以将Amazon Braket实例化为提供商：
- en: '[PRE2]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can also ask for available devices to be used as backends:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以请求使用可用设备作为后端：
- en: '[PRE3]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It is important to pause here. As we mentioned previously, our circuit may need
    to be translated into the specifics of the final device. So, depending on each
    case, certain adaptations may need to be performed.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里暂停非常重要。正如我们之前提到的，我们的电路可能需要根据最终设备的具体要求进行转换。因此，根据每种情况，可能需要进行某些适配。
- en: Also, consider that each device has a different cost scheme, but they will all
    require a billing structure so that the cost of running any example will be charged
    at the end of the billing period.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，考虑到每个设备的定价方案不同，但它们都需要一个计费结构，以便在计费周期结束时收取运行任何示例的费用。
- en: It is particularly relevant that we pay attention to the pricing of each device
    because, when using variational algorithms, the number of interactions required
    to fit the parameters could increase dramatically, which will directly affect
    the cost of each job.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 特别重要的是，我们需要关注每个设备的定价，因为在使用变分算法时，拟合参数所需的交互次数可能会急剧增加，这将直接影响每个任务的成本。
- en: To figure out how much a specific algorithm could cost on a given device, we
    must be aware of the resources and operations required to run our candidate quantum
    circuit.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 要弄清楚特定算法在给定设备上的成本，我们必须了解运行候选量子电路所需的资源和操作。
- en: 'PennyLane, given its role when dealing with variational algorithms, has a really
    useful resource called a tracker that can keep track of the jobs being sent to
    the device. We could leverage this resource to perform our estimations in combination
    with AWS’s SDK and the PennyLane plugin:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 由于PennyLane在处理变分算法时的作用，它有一个非常有用的资源，称为跟踪器，可以跟踪发送到设备的任务。我们可以利用这个资源，通过AWS的SDK和PennyLane插件结合进行我们的估算：
- en: '[PRE4]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We would proceed as usual and create a circuit, but in this case, using the
    `bracket.local.qubit` device as our target device:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将照常进行，并创建一个电路，但在这种情况下，使用`bracket.local.qubit`设备作为我们的目标设备：
- en: '[PRE5]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, we can call the circuit to perform the operation surrounding it with the
    `qml.Tracker` object, as shown here:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以调用电路，通过`qml.Tracker`对象执行围绕它的操作，如下所示：
- en: '[PRE6]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We can use `qml.Tracker(dev)` as the tracker:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`qml.Tracker(dev)`作为跟踪器：
- en: '[PRE7]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Apart from producing the expected result via the tracker, we can request the
    tasks that were sent to the device:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 除了通过跟踪器产生预期结果外，我们还可以请求已发送到设备的任务：
- en: '[PRE8]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'For example, if we perform a gradient calculation, which, for a parameter-shift
    routine, will require executions of the circuit, we will see that this is encapsulated
    within different batch calls:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们执行梯度计算，对于参数偏移例程，将需要多次执行电路，我们将看到这被封装在不同的批量调用中：
- en: '[PRE9]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Remote devices offer more information to the tracker object, and therefore for
    executions. The computation time is obtained in milliseconds. The bill can then
    be expressed in milliseconds and can be obtained from the `history` field. Of
    course, you must do the final calculations according to the target device and
    its pricing scheme.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 远程设备向跟踪器对象提供更多信息，因此也能为执行提供更多信息。计算时间以毫秒为单位。账单可以用毫秒表示，并可以从`history`字段中获取。当然，您必须根据目标设备及其定价方案进行最终计算。
- en: Task tracking becomes the key. When translating a task into a device-specific
    execution, the cost schemes will be obtained accordingly. When pushed to the device,
    we can realize the implications of different algorithms and training schemes and
    their associated costs.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 任务跟踪成为关键。当将任务转换为特定设备的执行时，成本方案将相应地获得。当推送到设备时，我们可以实现不同算法和训练方案的意义以及相关成本。
- en: Figuring out our cloud costs is one of the most challenging tasks for quantum
    computers and classical resources. That is why Microsoft considered this a core
    part of their service and tried to provide simpler ways so that their users could
    access this billing information at any time.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 了解我们的云成本是量子计算机和经典资源面临的最具挑战性的任务之一。这就是为什么微软将此视为他们服务的核心部分，并试图提供更简单的方式，使用户能够随时访问这些计费信息。
- en: Azure
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure
- en: Microsoft has a wide corporate market size and is well aware of how quantum
    computing technology may disrupt some operational workloads of business users.
    Given their cloud offering, they decided to compete with AWS in a similar setup
    via their Quantum Workspace offering.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 微软拥有广泛的企业市场，并且非常清楚量子计算技术可能会颠覆某些业务用户的操作工作负载。考虑到他们的云产品，他们决定通过 Quantum Workspace
    服务以类似的设置与 AWS 竞争。
- en: In this case, Microsoft decided to also create a framework according to their
    needs, Q#, that follows a similar approach to previous C# and J# proprietary languages
    within the more general .NET framework ([https://learn.microsoft.com/en-us/azure/quantum/overview-what-is-qsharp-and-qdk](https://learn.microsoft.com/en-us/azure/quantum/overview-what-is-qsharp-and-qdk)).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，微软决定根据他们的需求也创建一个框架——Q#，它遵循类似于之前的 C# 和 J# 专有语言的方式，并且在更通用的 .NET 框架中（[https://learn.microsoft.com/en-us/azure/quantum/overview-what-is-qsharp-and-qdk](https://learn.microsoft.com/en-us/azure/quantum/overview-what-is-qsharp-and-qdk)）。
- en: 'To enable this service, you must create a quantum workspace from an available
    subscription, which is the billing unit Microsoft uses to bill purchased services.
    Quantum Workspace is the service that provides access to the quantum devices that
    you can use, the coding environment, which is once again a notebook-based approach
    (using the omnipresent Jupyter Notebook engine), and additional information on
    quotas, resources, and everything that might be needed to perform your quantum
    circuit executions:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用此服务，您必须从可用的订阅中创建一个量子工作区，订阅是微软用来计费已购买服务的计费单位。Quantum Workspace 是提供访问量子设备的服务，您可以使用这些设备，提供编码环境，这是一种基于笔记本的方式（使用无处不在的
    Jupyter Notebook 引擎），以及有关配额、资源和执行量子电路所需的其他信息：
- en: '![Figure 7.20 – The Azure portal and Quantum Workspace creation page](img/B19146_07_020.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.20 – Azure 门户和 Quantum Workspace 创建页面](img/B19146_07_020.jpg)'
- en: Figure 7.20 – The Azure portal and Quantum Workspace creation page
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.20 – Azure 门户和 Quantum Workspace 创建页面
- en: 'By default, a Microsoft Azure account provides free credits, different for
    each device, as part of the agreement with those hardware providers. This helps
    users test the different providers before deciding which type of plan they need.
    The plans are pay-per-use, but there are monthly service options. Similar to previous
    options and quantum devices, a notebook service is offered so that you can experiment,
    and a job list is provided so that you can retrieve any past jobs (core services
    are present on the main screen of the service, as shown in *Figure 7**.21*):'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Microsoft Azure 账户提供免费的积分，每个设备不同，作为与硬件提供商协议的一部分。这帮助用户在决定选择哪种类型的计划之前，先测试不同的服务提供商。这些计划是按使用量计费的，但也提供了月度服务选项。与先前的选项和量子设备类似，提供了一个笔记本服务，供您进行实验，并提供一个作业列表，以便您检索任何过去的作业（核心服务位于服务的主屏幕上，如*图
    7.21*所示）：
- en: '![Figure 7.21 – Azure’s Quantum Workspace main page with management options
    on the left-hand side menu](img/B19146_07_021.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.21 – Azure 的 Quantum Workspace 主页，左侧菜单提供管理选项](img/B19146_07_021.jpg)'
- en: Figure 7.21 – Azure’s Quantum Workspace main page with management options on
    the left-hand side menu
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.21 – Azure 的 Quantum Workspace 主页，左侧菜单提供管理选项
- en: 'The available options show fewer service providers than Amazon’s offering:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 可用选项显示的服务提供商少于亚马逊的提供：
- en: '![Figure 7.22 – Available Azure Quantum Workspace service providers](img/B19146_07_022.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.22 – 可用的 Azure Quantum Workspace 服务提供商](img/B19146_07_022.jpg)'
- en: Figure 7.22 – Available Azure Quantum Workspace service providers
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.22 – 可用的 Azure Quantum Workspace 服务提供商
- en: Apart from actual hardware devices, Azure also offers services for optimization
    routines. The user avoids the procedure needed to encode and solve a given problem.
    This is a trend we have seen before in the case of D-Wave’s Hybrid solver or IBM’s
    Qiskit Runtime. The level of abstraction for the user is increased, so they only
    have to worry about the problem to be solved. Quite an interesting trend indeed.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 除了实际的硬件设备，Azure 还提供了优化例程的服务。用户无需处理编码和解决给定问题所需的过程。这是我们在 D-Wave 的 Hybrid 求解器或
    IBM 的 Qiskit Runtime 中曾经见过的趋势。用户的抽象层级提高了，他们只需要关注要解决的问题。确实是一个相当有趣的趋势。
- en: 'Being aware of the maturity of frameworks such as Qiskit instead of forcing
    users to learn about yet another quantum computing framework, Microsoft released
    a Qiskit plugin so that any Qiskit circuit could be sent to enabled devices:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 微软意识到像 Qiskit 这样的框架的成熟度，而不是强迫用户学习另一个量子计算框架，因此发布了 Qiskit 插件，使得任何 Qiskit 电路都可以发送到启用的设备上：
- en: '[PRE10]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Once it has been installed, we need to register our Quantum Workspace as the
    provider from which we want to obtain the backend. This can be done using the
    following code. These lines need to be added to the beginning of any experiment:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，我们需要将我们的量子工作区注册为我们希望从中获取后端的提供者。这可以通过以下代码完成。以下代码行需要添加到任何实验的开始部分：
- en: '[PRE11]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The backend information is obtained from the main window of Quantum Workspace
    (browser) and is meant to identify the region and subscription it has been deployed
    to:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 后端信息是从量子工作区的主窗口（浏览器）获取的，旨在识别它已部署到的区域和订阅：
- en: '![Figure 7.23 – Azure Quantum Workspace main window with access information
    highlighted](img/B19146_07_023.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.23 – Azure 量子工作区主窗口，突出显示访问信息](img/B19146_07_023.jpg)'
- en: Figure 7.23 – Azure Quantum Workspace main window with access information highlighted
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.23 – Azure 量子工作区主窗口，突出显示访问信息
- en: 'Thanks to this, all devices that were seen in *Figure 7**.22* can be invoked
    so that our candidate circuit can be submitted to run on those:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 借助此功能，所有在*图 7.22*中看到的设备都可以被调用，从而使我们的候选电路能够在这些设备上运行：
- en: '[PRE12]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Before running any circuit, it might be relevant to check the cost that running
    the circuit involves. To make it accessible via code, we can use Azure Resource
    Estimator, which only requires the circuit and backend it will be running on to
    assess the potential costs of our execution:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行任何电路之前，检查运行电路所涉及的成本可能是有意义的。为了通过代码访问这一信息，我们可以使用 Azure 资源估算器，它只需要电路和将要运行的后端，即可评估执行的潜在成本：
- en: '[PRE13]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Microsoft offers a solid view of how they envision their services to be used
    (*Figure 7**.24*), including resource estimation, which will become key information
    for longer-term and cost-efficient usage of quantum resources:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 微软提供了一个坚实的视角，展示了他们设想如何使用他们的服务（*图 7.24*），其中包括资源估算，这将成为量子资源长期高效使用的关键信息：
- en: '![Figure 7.24 – Quantum development pipeline envisioned by Microsoft](img/B19146_07_024.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.24 – 微软设想的量子开发管道](img/B19146_07_024.jpg)'
- en: Figure 7.24 – Quantum development pipeline envisioned by Microsoft
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.24 – 微软设想的量子开发管道
- en: 'This resource estimator, as we saw in the case of Amazon, prevents the user
    from expending substantial amounts of money before any execution is done. More
    examples of how to use Azure resources beyond the algorithm implementation can
    be found in their notebook gallery (*Figure 7**.25*):'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在 Amazon 的案例中看到的，这一资源估算器可以防止用户在任何执行之前花费大量资金。更多关于如何在算法实现之外使用 Azure 资源的示例，可以在他们的笔记本画廊中找到（*图
    7.25*）：
- en: '![Figure 7.25 – Example of available notebooks within each Quantum Workspace](img/B19146_07_025.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.25 – 每个量子工作区内可用笔记本的示例](img/B19146_07_025.jpg)'
- en: Figure 7.25 – Example of available notebooks within each Quantum Workspace
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.25 – 每个量子工作区内可用笔记本的示例
- en: Cost estimation
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 成本估算
- en: We briefly mentioned resource estimation, but we would like to highlight the
    importance of this ability when aiming for a sustainable adoption strategy.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们简要提到过资源估算，但我们想强调，在寻求可持续采用策略时，这一能力的重要性。
- en: 'Quantum computing is at an early stage, requiring continuous and complex maintenance
    tasks to provide the best possible service. This is something that classical computing
    resources have mastered for a long time. Due to the limited ecosystem of hardware
    providers and the status of the technology, specifically, when aiming for real
    hardware, we will see costs ramp up significantly, even for the simplest providers.
    That is why resource estimation is such a crucial step in any QC pipeline, particularly
    if the model’s training requires iterations:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 量子计算仍处于早期阶段，需要持续且复杂的维护任务以提供尽可能最好的服务。这是经典计算资源长期以来所掌握的技术。由于硬件供应商生态系统的局限性以及技术的现状，特别是在追求真实硬件的情况下，我们将看到成本显著上涨，即使对于最简单的供应商也是如此。这就是为什么资源估算在任何量子计算管道中都如此重要，特别是当模型训练需要多次迭代时：
- en: '![Figure 7.26 – Cost for Quantinuum on Azure (below) and IonQ in AWS (above)](img/B19146_07_026.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![图7.26 – Quantinuum在Azure上的成本（下方）与IonQ在AWS上的成本（上方）](img/B19146_07_026.jpg)'
- en: Figure 7.26 – Cost for Quantinuum on Azure (below) and IonQ in AWS (above)
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.26 – Quantinuum在Azure上的成本（下方）与IonQ在AWS上的成本（上方）
- en: 'As an example, we could take the European Call Pricing from [*Chapter 4*](B19146_04.xhtml#_idTextAnchor079)
    and extract its underlying quantum circuit, which we already know is composed
    of a block encoding, the log-normal distribution of the asset, and the block performing
    the function computing the pay-off function:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，我们可以从[*第4章*](B19146_04.xhtml#_idTextAnchor079)中提取欧洲看涨期权定价的量子电路，该电路已经知道由块编码、资产的对数正态分布和执行计算支付函数的块组成：
- en: '[PRE14]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The problem we might face is that, depending on the device we choose, we might
    not be able to understand what the P(X) and F blocks represent in terms of operations,
    as shown in Figure 7.27\. We will need to translate it into a combination of basic
    gates that the device can comprehend, as high-level abstraction blocks typically
    cannot be directly executed on a real device. Consequently, we will also estimate
    the potential cost associated with this translation process, as it is a common
    occurrence.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能面临的问题是，根据所选择的设备，我们可能无法理解P(X)和F块在操作方面的具体含义，如图7.27所示。我们需要将其转化为设备能够理解的基本门组合，因为高级抽象块通常不能直接在真实设备上执行。因此，我们还需要估算与此转换过程相关的潜在成本，因为这是一个常见的现象。
- en: '![Figure 7.27 – European Call Pricing problem circuit showing high-level abstraction
    blocks for the circuit](img/B19146_07_027.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![图7.27 – 展示高层次抽象块的欧洲看涨期权定价问题电路](img/B19146_07_027.jpg)'
- en: Figure 7.27 – European Call Pricing problem circuit showing high-level abstraction
    blocks for the circuit
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.27 – 展示高层次抽象块的欧洲看涨期权定价问题电路
- en: 'For the Quantinuum device, we could use a combination of rotations, identity,
    CNOT, and Hadamard gates and request the translation of the circuit based on those
    operations:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Quantinuum设备，我们可以使用旋转、恒等、CNOT和Hadamard门的组合，并请求基于这些操作的电路转换：
- en: '[PRE15]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Then, we can select the device so that it can perform the estimation on the
    resulting circuit:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以选择设备，以便它可以对生成的电路进行估算：
- en: '[PRE16]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In this case, a single circuit pass would consume 5.5 Quantinuum credits, which,
    for a standard subscription, would sum up close to $70\. If we consider that the
    amplitude estimation routine could require several iterations over the same circuit,
    we may need a couple of hundred dollars just for an asset pay-off evaluation.
    Of course, then comes the ability to compress this circuit so that fewer operations
    would still render the same state preparation. However, this is mostly the core
    activity of research institutions and is less likely to be something our analysts
    will invest time in.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，单次电路执行将消耗5.5个Quantinuum积分，对于标准订阅来说，总费用将接近70美元。如果我们考虑到幅度估算例程可能需要对同一电路进行多次迭代，那么仅仅为了资产支付评估，我们可能需要几百美元。当然，接下来是压缩这个电路，使得更少的操作仍能产生相同的状态准备。然而，这通常是研究机构的核心活动，不太可能是我们的分析师会投入时间的地方。
- en: This is why we must perform some calculations and thoroughly evaluate the expected
    return on investment before we naively submit our training routine to a cloud
    provider that will be happy to serve requests at those prices.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我们必须进行一些计算，并彻底评估预期的投资回报，以免在没有充分考虑的情况下，将我们的训练例程提交给一个愿意以这些价格处理请求的云服务提供商。
- en: Summary
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: The transition from on-premises to cloud-hosted has been a complicated journey
    for many organizations, including the switch to be made from owning the computing
    resources to pay-per-use modalities common today. Quantum computing made its initial
    foray directly into the cloud. Different platforms give access to services and
    providers with efficient costs. Many institutions have facilities to onboard into
    this quantum journey.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 从本地部署到云托管的过渡对许多组织来说是一个复杂的过程，包括从拥有计算资源转变为如今普遍的按需付费模式。量子计算最初直接进入了云端。不同的平台提供了高效的成本结构，给予服务和供应商的访问权限。许多机构已经有了引入量子计算的设施。
- en: Quantum hardware is problem-focused and increases the complexity and decisions
    to be made as you must decide what option, out of the plethora of devices, is
    the most convenient for your problems. Estimators help companies evaluate the
    cost of using this new type of machine, providing them with an efficient way to
    estimate the budget required per study.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 量子硬件是以问题为导向的，并且随着选择的设备种类繁多，你必须决定哪一种设备最适合你的问题，这增加了复杂性和决策的难度。估算工具帮助公司评估使用这种新型机器的成本，为他们提供了一种有效的方式来估算每项研究所需的预算。
- en: No technology has faced such a wide, almost *free-of-charge* offering to learn
    and adapt than quantum computing. Hardware providers enable their latest devices
    in those cloud services and help boost the field for researchers and business
    users. The role of the different communities around the libraries used to manipulate
    such hardware is highly important. It brings an important volume of notebooks
    and tutorials to self-learn quantum computing.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 没有任何技术像量子计算一样，面对如此广泛、几乎是*免费*的学习和适应机会。硬件提供商将他们最新的设备集成到这些云服务中，帮助推动该领域的发展，既支持研究人员也支持商业用户。围绕用于操作这些硬件的库的不同社区的角色至关重要，它为自学量子计算提供了大量的笔记本和教程。
- en: There are already providers offering 2- and 3-qubit desktop systems at competitive
    prices ([https://www.discovermagazine.com/technology/a-desktop-quantum-computer-for-just-usd5-000](https://www.discovermagazine.com/technology/a-desktop-quantum-computer-for-just-usd5-000)),
    but this will mostly remain as an educational resource, given that the cloud is
    where most organizations seem to be locating their infrastructure. It simplifies
    any integration effort to be made by your when self-hosting this type of resource.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 已经有提供2和3量子比特桌面系统的供应商，以具有竞争力的价格出售（[https://www.discovermagazine.com/technology/a-desktop-quantum-computer-for-just-usd5-000](https://www.discovermagazine.com/technology/a-desktop-quantum-computer-for-just-usd5-000)），但鉴于大多数组织似乎将其基础设施放在云端，这主要仍将作为一种教育资源。这简化了当你自托管这类资源时的任何集成工作。
- en: 'To summarize, there are several challenges associated with implementing quantum
    computing on cloud platforms, including the following:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，实施量子计算到云平台上面临几个挑战，包括以下几个方面：
- en: '**Accessibility**: Quantum computing resources are currently only available
    through specialized cloud providers, which can be difficult for some users to
    access. General cloud providers are already easing this with their early adoption
    of QC hubs.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可访问性**：目前量子计算资源仅通过专业的云提供商提供，这对于一些用户来说可能较为难以访问。一般云提供商已经通过早期采用量子计算中心来缓解这一问题。'
- en: '**Scalability**: Quantum computing systems require specialized hardware and
    infrastructure, which can be difficult to scale up as demand for quantum computing
    resources increases.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：量子计算系统需要专门的硬件和基础设施，随着量子计算资源需求的增加，扩展这些系统可能会变得困难。'
- en: '**Interoperability**: Different quantum computing platforms have different
    programming languages and interfaces, making it difficult for developers to work
    with multiple systems.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**互操作性**：不同的量子计算平台有不同的编程语言和接口，这使得开发人员在多个系统之间协作时遇到困难。'
- en: '**Security**: Quantum computing systems are vulnerable to certain types of
    attacks, such as quantum hacking, which can expose sensitive information.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全性**：量子计算系统容易受到某些类型的攻击，例如量子黑客攻击，这可能会暴露敏感信息。'
- en: '**Noise and errors**: Quantum computers are more susceptible to noise and errors
    than classical computers, making it difficult to obtain accurate results from
    quantum algorithms.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**噪声与错误**：量子计算机比经典计算机更容易受到噪声和错误的影响，这使得从量子算法中获得准确结果变得更加困难。'
- en: '**Cost**: Quantum computing resources are still relatively expensive, making
    it difficult for some organizations to afford the necessary hardware and infrastructure.'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本**：量子计算资源仍然相对昂贵，这使得一些组织难以负担所需的硬件和基础设施。'
- en: In any case, this high-paced technology has just started being useful, and the
    applications that bring competitive advantage will uncover the paths those resources
    will end up adopting.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，这项高速发展的技术刚刚开始发挥作用，而那些带来竞争优势的应用将揭示出这些资源最终将采用的路径。
- en: Further reading
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: Many providers are already shaping their offerings so that new as-a-service
    paradigms will emerge in the following years.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 许多供应商已经开始塑造他们的产品，以便在未来几年中出现新的即服务范式。
- en: Oxford Quantum Circuits has already embraced the concept of **Quantum Computing
    as a Service** (**QCaaS**) ([https://www.techradar.com/news/quantum-computing-as-a-service-is-going-mainstream](https://www.techradar.com/news/quantum-computing-as-a-service-is-going-mainstream)),
    whereas other companies like QCentroid are targeting a wider audience by offering
    off-the-shelf solutions tailored to industry-specific applications through their
    **Quantum-as-a-Service** (**QaaS**) platform ([https://marketplace.qcentroid.xyz/](https://marketplace.qcentroid.xyz/)).
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 牛津量子电路公司已经接受了**量子计算即服务**（**QCaaS**）的概念（[https://www.techradar.com/news/quantum-computing-as-a-service-is-going-mainstream](https://www.techradar.com/news/quantum-computing-as-a-service-is-going-mainstream)），而像QCentroid这样的公司通过其**量子即服务**（**QaaS**）平台（[https://marketplace.qcentroid.xyz/](https://marketplace.qcentroid.xyz/)）为行业特定应用提供现成的解决方案，目标是吸引更广泛的受众。
- en: When thinking about cloud-accessible resources, one of the most interesting
    cases is the one posed by the variational quantum algorithm, where a constant
    interchange between classical and quantum resources must be sorted out. Given
    the queue times we have seen, we must be aware that any remote training of the
    ansatz will face important delays per iteration if we attempt to train on an actual
    device remotely.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 当考虑云访问资源时，最有趣的案例之一是变分量子算法的案例，在这种算法中，经典资源和量子资源之间需要不断交换。鉴于我们已看到的排队时间，我们必须意识到，如果我们尝试在实际设备上远程训练ansatz，每次迭代的远程训练都将面临重要的延迟。
- en: Given the existing benefits that companies derive from classical machine learning
    models, Quantum Computing is likely to be integrated as an auxiliary tool for
    addressing difficult-to-solve problems. Doing so in competent architectures is
    what will require senior roles to step up over the hype in the field and make
    sensible decisions regarding the adoption and long-term strategy. Companies are
    already doing their part to ease the decision process for these early adopters.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于公司从经典机器学习模型中获得的现有收益，量子计算很可能会作为辅助工具来解决那些难以解决的问题。在合适的架构中这样做，需要高级岗位的人员站出来，超越领域中的炒作，做出关于采纳与长期战略的明智决策。公司们已经在为这些早期采用者简化决策过程。
- en: 'To solve that issue, IBM decided to create Qiskit Runtime. Runtimes are routines
    with some well-known algorithms where additional information is sent to the remote
    execution engine, which takes charge of both the classical and the quantum parts.
    It provides closer interaction between two sides of the algorithm, thus rendering
    much more efficient running times. An example workflow can be seen in *Figure
    7**.28*:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，IBM决定创建Qiskit Runtime。Runtime是一些包含知名算法的程序，其中附加信息被发送到远程执行引擎，后者负责经典部分和量子部分的执行。它提供了算法两部分之间更紧密的交互，从而实现了更高效的运行时间。一个示例工作流程见于*图
    7.28*：
- en: '![Figure 7.28 – Qiskit Runtime as envisioned by IBM for efficient workload
    balancing](img/B19146_07_028.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.28 – IBM设想的Qiskit Runtime用于高效的工作负载平衡](img/B19146_07_028.jpg)'
- en: Figure 7.28 – Qiskit Runtime as envisioned by IBM for efficient workload balancing
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.28 – IBM设想的Qiskit Runtime用于高效的工作负载平衡
- en: 'This offering comes with a cost scheme that you need to consider, even though
    a lite option is available with up to 3 hours of free access:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这个服务提供了一个成本方案，尽管有一个免费选项，最多提供3小时的免费访问，但你仍然需要考虑费用问题：
- en: '![Figure 7.29 – IBM Qiskit Runtime pricing as of January 2023](img/B19146_07_029.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.29 – 截至2023年1月的IBM Qiskit Runtime定价](img/B19146_07_029.jpg)'
- en: Figure 7.29 – IBM Qiskit Runtime pricing as of January 2023
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.29 – 截至2023年1月的IBM Qiskit Runtime定价
- en: D-Wave also realized that by combining classical and quantum operations on their
    end, they could extend their portfolio and reduce the time needed to solve certain
    problems that required intermediate classical steps. This is what is hidden behind
    their Hybrid solver – classical routines interacting with a quantum annealer so
    that the combination of both creates a broader range of problems to be solved.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: D-Wave还意识到，通过在其端结合经典和量子操作，他们可以扩展其产品组合，并减少解决某些需要中间经典步骤的问题所需的时间。这就是他们的混合求解器背后的秘密——经典例程与量子退火器交互，从而通过两者的结合创建了更广泛的问题求解范围。
- en: By definition, their solver efficiently solves binary quadratic models but adds
    classical routines. Discrete and constrained models can also be solved by allocating
    quantum and classical resources to each process step ([https://docs.dwavesys.com/docs/latest/doc_leap_hybrid.html](https://docs.dwavesys.com/docs/latest/doc_leap_hybrid.html)).
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 根据定义，他们的求解器高效地解决二次二进制模型，但添加了经典例程。离散和受约束的模型也可以通过为每个过程步骤分配量子和经典资源来解决（[https://docs.dwavesys.com/docs/latest/doc_leap_hybrid.html](https://docs.dwavesys.com/docs/latest/doc_leap_hybrid.html)）。
- en: In all probability, the progression of these remote solvers will eventually
    manifest as a streamlined service, wherein problems are submitted and the service
    provider’s engine determines the optimal combination of resources. If not for
    the advancements that quantum devices can offer in specific problem domains, it
    would be challenging to discern their involvement in the process. Nevertheless,
    this approach will simplify usability and abstraction for business users who are
    primarily focused on finding solutions and may not be as concerned with the technical
    intricacies employed to achieve them.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能，这些远程求解器的进展最终会表现为一个简化的服务，其中问题被提交，服务提供商的引擎确定最佳的资源组合。如果不是量子设备在特定问题领域提供的进展，可能很难察觉它们在过程中的作用。然而，这种方法将简化商业用户的可用性和抽象，他们的主要关注点是寻找解决方案，而可能不太关心为实现这些解决方案所采用的技术细节。
- en: References
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '*Cross, A. W., Bishop, L. S., Smolin, J. A., & Gambetta, J. M. (2017). Open
    quantum assembly language. arXiv* *preprint arXiv:1707.03429.*'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '*Cross, A. W., Bishop, L. S., Smolin, J. A., & Gambetta, J. M. (2017). 开放量子汇编语言。arXiv*
    *预印本 arXiv:1707.03429。*'
- en: '*Anis MS, Abraham H, AduOffei RA, Agliardi G, Aharoni M, Akhalwaya IY, Aleksandrowicz
    G, Alexander T, Amy M, Anagolum S. (2021). Qiskit: An open-source framework for
    quantum* *computing. Qiskit/qiskit.*'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '*Anis MS, Abraham H, AduOffei RA, Agliardi G, Aharoni M, Akhalwaya IY, Aleksandrowicz
    G, Alexander T, Amy M, Anagolum S. (2021). Qiskit：一个开源的量子* *计算框架。Qiskit/qiskit。*'
- en: '*Smith, R. S., Curtis, M. J., & Zeng, W. J. (2016). A practical quantum instruction
    set architecture. arXiv* *preprint arXiv:1608.03355.*'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '*Smith, R. S., Curtis, M. J., & Zeng, W. J. (2016). 一个实用的量子指令集架构。arXiv* *预印本
    arXiv:1608.03355。*'
