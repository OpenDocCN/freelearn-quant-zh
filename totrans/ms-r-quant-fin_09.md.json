["```py\nd <- read.table(\"file_name\", header = T, sep = \",\")\n\n```", "```py\ninstall.packages(\"gdata\")\nlibrary(gdata)\n\n```", "```py\nd <- read.xls(\"file_name\", n)\n\n```", "```py\nd <- read.csv2(\"data.csv\", stringsAsFactors = F)\nfor (i in c(3:17,19)){d[,i] = as.numeric(d[,i])}\nboxplot_data <- split( d$Total.Return.YTD..I., d$BICS.L1.Sect.Nm )\nwindows()\npar(mar = c(10,4,4,4))\nboxplot(boxplot_data, las = 2, col = \"grey\")\n\n```", "```py\nmodel <- lm(\" Total.Return.YTD..I. ~ Market.Cap.Y.1\", data = d)\na <- model$coefficients[1]\nb <- model$coefficients[2]\nwindows()\nplot(d$Market.Cap.Y.1,d$Total.Return.YTD..I., xlim = c(0, 400000000000), xlab = \"Market Cap Y-1\", ylab = \"Total Return YTD (I).\")\nabline(a,b, col = \"red\")\n\n```", "```py\nd_filt <- na.omit(d)[,setdiff(1:19, c(1,2,18))]\ncor_mtx <- cor(d_filt)\nround(cor_mtx, 3)\n\n```", "```py\nlibrary(MASS)\nvars <- colnames(d_filt)\nm <- length(vars)\nlin_formula <- paste(vars[m], paste(vars[-m], collapse = \" + \"), sep = \" ~ \")\nfit <- lm(formula = lin_formula, data = d_filt)\nfit <- stepAIC(object = fit, direction = \"backward\", k = 4)\nsummary(fit)\n\nCoefficients:\n Estimate Std. Error t value Pr(>|t|) \n(Intercept)                         6.77884    1.11533   6.078  1.4e-09 ***\nCash.Assets.Y.1                    -0.08757    0.03186  -2.749 0.006022 ** \nNet.Fixed.Assets.to.Tot.Assets.Y.1  0.07153    0.01997   3.583 0.000346 ***\nR.D.Net.Sales.Y.1                   0.30689    0.07888   3.891 0.000102 ***\nP.E.Y.1                            -0.09746    0.02944  -3.311 0.000943 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 19.63 on 2591 degrees of freedom\nMultiple R-squared:  0.01598,   Adjusted R-squared:  0.01446 \nF-statistic: 10.52 on 4 and 2591 DF,  p-value: 1.879e-08\n\n```", "```py\nlibrary(stats)\nlibrary(matrixStats)\nh_clust <- hclust(dist(d[,19]))\nplot(h_clust, labels = F, xlab = \"\")\n\n```", "```py\nk_clust <- kmeans(d[,19], 3)\nK_means_results <- cbind(k_clust$centers, k_clust$size)\ncolnames(K_means_results) = c(\"Cluster center\", \"Cluster size\")\nK_means_results\n\n```", "```py\n Cluster center Cluster size\n1       9.405869         3972\n2      48.067540          962\n3     -16.627188         2264\n\n```", "```py\nfor(i in c(3,4,6,10,12,14,16,17)) { print(colnames(d)[i]); print(summary(\naov(d[,i]~k_clust$cluster  , d))) }\n\n```", "```py\n[1] \"Cash.Assets.Y.1\"\n Df  Sum Sq Mean Sq F value Pr(>F) \nk_clust$cluster    1    7491    7491   41.94  1e-10 ***\nResiduals       7195 1285207     179 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n1 observation deleted due to missingness\n[1] \"Net.Fixed.Assets.to.Tot.Assets.Y.1\"\n Df  Sum Sq Mean Sq F value   Pr(>F) \nk_clust$cluster    1   19994   19994   40.26 2.36e-10 ***\nResiduals       7106 3529208     497 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n90 observations deleted due to missingness\n[1] \"P.CF.5Yr.Avg.Y.1\"\n Df   Sum Sq Mean Sq F value Pr(>F)\nk_clust$cluster    1    24236   24236     1.2  0.273\nResiduals       4741 95772378   20201 \n2455 observations deleted due to missingness\n[1] \"Asset.Turnover.Y.1\"\n Df Sum Sq Mean Sq F value  Pr(>F) \nk_clust$cluster    1      7   6.759   11.64 0.00065 ***\nResiduals       7115   4133   0.581 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n81 observations deleted due to missingness\n[1] \"OI...Net.Sales.Y.1\"\n Df  Sum Sq Mean Sq F value  Pr(>F) \nk_clust$cluster    1    1461  1461.4   10.12 0.00147 **\nResiduals       7196 1038800   144.4 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n[1] \"LTD.Capital.Y.1\"\n Df  Sum Sq Mean Sq F value Pr(>F) \nk_clust$cluster    1    1575  1574.6   4.134 0.0421 *\nResiduals       7196 2740845   380.9 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n[1] \"Market.Cap.Y.1\"\n Df    Sum Sq   Mean Sq F value Pr(>F)\nk_clust$cluster    1 1.386e+08 138616578   2.543  0.111\nResiduals       7196 3.922e+11  54501888 \n[1] \"P.E.Y.1\"\n Df  Sum Sq Mean Sq F value  Pr(>F) \nk_clust$cluster    1    1735  1735.3   8.665 0.00325 **\nResiduals       7196 1441046   200.3 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n```", "```py\nf <- function(x) c(mean = mean(x, na.rm = T), N = length(x[!is.na(x)]), sd = sd(x, na.rm = T))\noutput <- aggregate(d[c(19,3,4,6,10,12,14,16,17)], list(k_clust$cluster), f)\nrownames(output) = output[,1]; output[,1] <- NULL\noutput <- t(output)\noutput <- output[,order(output[1,])]\noutput <- cbind(output, as.vector(apply(d[c(19,3,4,6,10,12,14,16,17)], 2, f)))\ncolnames(output) <- c(\"Underperformers\", \"Midrange\", \"Overperformers\", \"Total\")\noptions(scipen=999)\nprint(round(output,3))\n\n```", "```py\nd_tree <- d[,c(3:17,19)]\nvars <- colnames(d_tree)\nm <- length(vars)\ntree_formula <- paste(vars[m], paste(vars[-m], collapse = \" + \"), sep = \" ~ \")\nlibrary(rpart)\ntree <- rpart(formula = tree_formula, data = d_tree, maxdepth = 5 ,cp = 0.001)\ntree <- prune(tree, cp = 0.003)\npar(xpd = T)\nplot(tree)\ntext(tree, cex = .5, use.n = T, all = T)\n\n```", "```py\nd$condition1 <- (d[,3]  >   1.6) \nd$condition2 <- (d[,4]  >  12.3) \nd$condition3 <- (d[,5]  <   398) \nd$condition4 <- (d[,10] <  1.66) \nd$condition5 <- (d[,13] >  43.5)\nd$selected1 <- d$condition1 & d$condition2 & d$condition3 & d$condition4 & d$condition5\nd$condition6 <- (d[,3]  <   1.6)\nd$condition7 <- (d[,5]  >  2156) \nd$selected2  <- d$condition6 & d$condition7\nd$tree <- d$selected1 | d$selected2\n\n```", "```py\nf <- function(x) c(mean(x), length(x), sd(x), median(x))\nreport <- aggregate( x = d[,19], by = list(d$tree), FUN = f )$x\ncolnames(report) = c(\"mean\",\"N\",\"standard deviation\",\"median\")\nreport <- rbind(report, f(d[,19]))\nrownames(report) <- c(\"Not selected\",\"Selected\",\"Total\")\nprint(report)\n\n```", "```py\n mean    N standard deviation    median\nNot selected  5.490854 6588           22.21786  3.601526\nSelected     19.620651  260           24.98839 15.412807\nTotal         6.384709 7198           23.08327  4.245684\n\n```", "```py\nd$cluster = k_clust$cluster\nz <- round(cbind(t(aggregate(d[,c(19,3,4,6,10,12,14,16,17)], list(d$selected) ,function(x) mean(x, na.rm = T))),\nt(aggregate(d[,c(19,3,4,6,10,12,14,16,17)], list(d$selected) ,function(x) median(x, na.rm = T))))[-1,], 2)\n> colnames(z) = c(\"1-mean\",\"2-mean\",\"3-mean\",\"1-median\", \"2-median\", \"3-median\")\n> z\n\n 1-mean 2-mean 3-mean 1-median 2-median 3-median\nTotal.Return.YTD..I.               -16.62   9.41  48.07   -13.45     8.25    42.28\nCash.Assets.Y.1                     15.58  13.11  12.98    11.49     9.07     8.95\nNet.Fixed.Assets.to.Tot.Assets.Y.1  26.93  29.76  31.97    21.87    24.73    26.78\nP.CF.5Yr.Avg.Y.1                    18.75  19.46  28.72    11.19    10.09    10.08\nAsset.Turnover.Y.1                   1.13   1.06   1.05     0.96     0.89     0.91\nOI...Net.Sales.Y.1                  13.77  14.71  15.02    10.59    11.23    11.49\nLTD.Capital.Y.1                     17.28  20.41  17.21    11.95    16.55    10.59\nMarket.Cap.Y.1                     278.06 659.94 603.10     3.27     4.97     4.43\nP.E.Y.1                             20.81  19.79  19.46    16.87    15.93    14.80\n\n```", "```py\nd$selected <- (d[,3] <= 14) & (d[,4] >= 23) & (d[,10] <= 1.7) & (d[,12] >= 11) & (d[17] <= 20)\nd$selected[is.na(d$selected)] <- FALSE\nh <- function(x) c(mean(x, na.rm = T), length(x[!is.na(x)]), sd(x, na.rm = T), median(x, na.rm = T))\nbacktest <- aggregate(d[,19], list(d$selected), h)\nbacktest <- backtest$x\nbacktest <- rbind(backtest, h(d[,19]))\ncolnames(backtest) = c(\"mean\", \"N\", \"Stdev\", \"Median\")\nrownames(backtest) = c(\"Not selected\", \"Selected\", \"Total\")\nprint(backtest)\n mean    N    Stdev   Median\nNot selected 5.887845 6255 23.08020 3.710650\nSelected     9.680451  943 22.84361 7.644033\nTotal        6.384709 7198 23.08327 4.245684\n\n```", "```py\nd$tree <- tree$where %in% c(13,17)\ncrosstable <- table(d$selected, d$tree)\nrownames(crosstable) = c(\"cluster-0\",\"cluser-1\")\ncolnames(crosstable) = c(\"tree-0\",\"tree-1\")\ncrosstable <- addmargins(crosstable)\ncrosstable\n\n tree-0 tree-1  Sum\n cluster-0   5970    285 6255\n cluser-1     817    126  943\n Sum         6787    411 7198\n\n```", "```py\nmean(d[d$selected & d$tree,19])\n[1] 19.90455\nmedian(d[d$selected & d$tree,19])\n[1] 14.43585\n\n```", "```py\nd_comm <- d[d[,18] == \"Communications\",c(3:17,19)]\nvars <- colnames(d_comm)\nm <- length(vars)\ntree_formula <- paste(vars[m], paste(vars[-m], collapse = \" + \"), sep = \" ~ \")\nlibrary(rpart)\ntree <- rpart(formula = tree_formula, data = d_comm, maxdepth = 5 ,cp = 0.01, control = rpart.control(minsplit = 100))\ntree <- prune(tree, cp = 0.006)\npar(xpd = T)\nplot(tree)\ntext(tree, cex = .5, use.n = T, all = T)\nprint(tree)\n\n```", "```py\ncross <- table(d[,18], d$selected)\ncolnames(cross) <- c(\"not selected\", \"selected\")\ncross\n not selected selected\n Communications                  488       11\n Consumer Discretionary         1476       44\n Consumer Staples                675       36\n Energy                          449       32\n Financials                      116        1\n Health Care                     535       37\n Industrials                    1179       53\n Materials                       762       99\n Technology                      894        7\n Utilities                       287       17\n\nprop.table(cross)\n\n not selected     selected\n Communications         0.0677966102 0.0015282023\n Consumer Discretionary 0.2050569603 0.0061128091\n Consumer Staples       0.0937760489 0.0050013893\n Energy                 0.0623784385 0.0044456794\n Financials             0.0161155877 0.0001389275\n Health Care            0.0743262017 0.0051403168\n Industrials            0.1637954987 0.0073631564\n Materials              0.1058627396 0.0137538205\n Technology             0.1242011670 0.0009724924\n Utilities              0.0398721867 0.0023617672\n\n```", "```py\nt1 <- aggregate(d[ d$tree,19], list(d[ d$tree,18]), function(x) c(mean(x), median(x))) \nt2 <- aggregate(d[!d$tree,19], list(d[!d$tree,18]), function(x) c(mean(x), median(x)))\nindustry_crosstab <- round(cbind(t1$x, t2$x),4)\ncolnames(industry_crosstab) <- c(\"mean-1\",\"median-1\",\"mean-0\",\"median-0\")\nrownames(industry_crosstab) <- t1[,1]\nindustry_crosstab\n\n mean-1 median-1 mean-0 median-0\nCommunications         10.4402  11.5531 1.8810   2.8154\nConsumer Discretionary 15.9422  10.7034 2.7963   1.3154\nConsumer Staples       14.2748   6.5512 4.5523   3.1839\nEnergy                 17.8265  16.7273 5.6107   5.0800\nFinancials             33.3632  33.9155 5.4558   3.5193\nHealth Care            26.6268  21.8815 7.5387   4.6022\nIndustrials            29.2173  17.6756 6.5487   3.7119\nMaterials              22.9989  21.3155 8.4270   5.6327\nTechnology             43.9722  46.8772 7.4596   5.3433\nUtilities              11.6620  11.1069 8.6993   7.7672\n\n```"]