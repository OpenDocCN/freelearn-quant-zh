["```py\nimport matplotlib.pyplot as plt\nfig = plt.figure(figsize=(12, 6), dpi=200)\n```", "```py\n<Figure size 2400x1200 with 0 Axes>\n```", "```py\nax1 = fig.add_subplot(1, 2, 1)\nax2 = fig.add_subplot(2, 2, 2)\nax3 = fig.add_subplot(2, 2, 4)\nfig\n```", "```py\nimport numpy as np\nx = np.linspace(0, 1, num=20)\ny1 = np.square(x)\nax1.plot(x, y1, color='black', linestyle='--')\ny2 = np.sin(x)\nax2.plot(x, y2, color='black', linestyle=':')\ny3 = np.cos(x)\nax3.plot(x, y3, color='black', linestyle='-.')\nfig\n```", "```py\nfig, (ax1, ax2) = plt.subplots(2, figsize=(12, 6),\n                               sharex=True)\nax1.plot(x, y1, color='black', linestyle='--')\ny2 = np.power(x, 10)\nax2.plot(x, y2, color='black', linestyle='-.')\n```", "```py\nfig, (ax1, ax2, ax3, ax4) = plt.subplots(4, \n                                         figsize=(12, 12), \n                                         sharex=True)\nx = np.linspace(0, 10, num=20)\ny1 = np.exp(x)\ny2 = x ** 3\ny3 = np.sin(y2)\ny4 = np.random.randn(20)\nax1.plot(x, y1, color='black', linestyle='--', linewidth=5,\n         marker='x', markersize=15)\nax2.plot(x, y2, color='green', linestyle='-.', linewidth=2, \n         marker='^', markersize=10, alpha=0.9)\nax3.plot(x, y3, color='red', linestyle=':', marker='*', \n         markersize=15, drawstyle='steps')\nax4.plot(x, y4, color='green', linestyle='-', marker='s', \n         markersize=15)\n```", "```py\nplt.xlim([8, 10.5])\nplt.xticks([8, 8.42, 8.94, 9.47, 10, 10.5])\nplt.plot(x, y1, color='black', linestyle='--', marker='o')\n```", "```py\nfig, ax = plt.subplots(1, figsize=(12, 6))\nax.set_yscale('log')\nax.set_xticks(x)\nax.set_xticklabels(list('ABCDEFGHIJKLMNOPQRSTUV'))\nax.plot(x, y1, color='black', linestyle='--', marker='o',\n        label='y=exp(x)')\n```", "```py\nax.set_title('xtickslabel example')\nax.set_xlabel('x labels')\nax.set_ylabel('log scale y values')\nax.legend(loc='best')\nfig\n```", "```py\nax.text(1, 10000, 'Generated using numpy and matplotlib')\nfig\n```", "```py\nfor i in [5, 10, 15]:\n    s = '(x=' + str(x[i]) + ',y=' + str(y1[i]) + ')'\n    ax.annotate(s, xy=(x[i], y1[i]), xytext=(x[i]+1, \n                y1[i]-5),\n                arrowprops=dict(facecolor='black', \n                shrink=0.05), horizontalalignment='left', \n                verticalalignment='top')\nfig\n```", "```py\nfig, ax = plt.subplots(1, figsize=(12, 6))\nax.plot(x, x, linestyle='--', color='black', marker='*', \n        markersize=15)\nfor val in x:\n    ax.add_patch(plt.Circle(xy=(val, val), radius=0.3, \n                 color='darkgray'))\n```", "```py\nfig.savefig('fig.png', dpi=200)\n```", "```py\nimport pandas as pd\ndf = pd.DataFrame(index=range(1000), \n                  columns=['Cont value', 'Delta1 value', \n                           'Delta2 value', 'Cat value'])\ndf['Cont value'] = np.random.randn(1000).cumsum()\ndf['Delta1 value'] = np.random.randn(1000)\ndf['Delta2 value'] = np.random.randn(1000)\ndf['Cat value'] = np.random.permutation(['Very high',\n                                         'High', 'Medium',\n                                         'Low', \n                                         'Very Low']*200)\ndf['Delta1 discrete'] = pd.cut(df['Delta1 value'], \n                               labels=[-2, -1, 0, 1, 2], \n                               bins=5).astype(np.int64)\ndf['Delta2 discrete'] = pd.cut(df['Delta2 value'], \n                               labels=[-2, -1, 0, 1, 2], \n                               bins=5).astype(np.int64)\ndf\n```", "```py\n    Cont value  Delta1 val  Delta2 val  Cat value  Delta1 discrete  Delta2 discrete\n0   -1.429618    0.595897   -0.552871   Very high    1    0\n1   -0.710593    1.626343    1.123142      Medium    1    1\n...       ...         ...         ...       ...    ...  ...\n998 -4.928133   -0.426593   -0.141742   Very high    0    0\n999 -5.947680    -0.183414  -0.358367      Medium    0    0\n1000 rows × 6 columns\n```", "```py\ndf.plot(y='Cont value', kind='line', color='black', \n        linestyle='-', figsize=(12, 6))\n```", "```py\ndf.groupby('Cat value')['Delta1 discrete']\\\n.value_counts().plot(kind='bar', color='darkgray',\n                     title='Occurrence by (Cat,Delta1)', \n                     figsize=(12, 6))\n```", "```py\ndf.groupby('Delta2 discrete')['Cat value'].value_counts()\\\n.plot(kind='barh', color='darkgray', \n      title='Occurrence by (Delta2,Cat)', \n      figsize=(12, 12))\n```", "```py\ndf['Delta1 discrete'].plot(kind='hist', color='darkgray', \n                           figsize=(12, 6), label='Delta1')\nplt.legend()\n```", "```py\ndf['Delta2 discrete'].plot(kind='kde', color='black', \n                           figsize=(12, 6), \n                           label='Delta2 kde')\nplt.legend()\n```", "```py\ndf.plot(kind='scatter', x='Delta1 value', y='Delta2 value',\n        alpha=0.5, color='black', figsize=(8, 8))\n```", "```py\npd.plotting.scatter_matrix(df[['Delta1 value', \n                               'Delta2 value']], \n                           diagonal='kde', color='black', \n                           figsize=(8, 8))\n```", "```py\ndates = pd.date_range('1992-01-01', '2012-10-22')\ntime_series = pd.DataFrame(index=dates, columns=['A', 'B'])\ntime_series['A'] = \\\nnp.random.randint(low=-100, high=101, \n                  size=len(dates)).cumsum() + 5000\ntime_series['B'] = \\\nnp.random.randint(low=-75, high=76, \n                  size=len(dates)).cumsum() + 5000\ntime_series\n```", "```py\n                 A      B\n1992-01-01    5079    5042\n1992-01-02    5088    5047\n    ...        ...     ...\n2012-10-21    6585    7209\n2012-10-22    6634    7247\n7601 rows × 2 columns\n```", "```py\ntime_series['A'].plot(kind='line', linestyle='—', \n                      color='black', figsize=(12, 6), \n                      label='A')\ntime_series['B'].plot(kind='line', linestyle='-.', \n                      color='darkgray', figsize=(12, 6), \n                      label='B')\nplt.legend()\n```", "```py\ntime_series['A_1_delta'] = \\\ntime_series['A'].shift(-1) – time_series['A'].fillna(0)\ntime_series['B_1_delta'] = \\\ntime_series['B'].shift(-1) – time_series['B'].fillna(0)\ntime_series['A_5_delta'] = \\\ntime_series['A'].shift(-5) – time_series['A'].fillna(0)\ntime_series['B_5_delta'] = \\\ntime_series['B'].shift(-5) – time_series['B'].fillna(0)\ntime_series['A_20_delta'] = \\\ntime_series['A'].shift(-20) – time_series['A'].fillna(0)\ntime_series['B_20_delta'] = \\\ntime_series['B'].shift(-20) – time_series['B'].fillna(0)\ntime_series_deltas = time_series[['A_1_delta', 'B_1_delta', \n                                  'A_5_delta', 'B_5_delta', \n                                  'A_20_delta', \n                                  'B_20_delta']].dropna()\ntime_series_deltas\n```", "```py\n           A_1_delta    B_1_delta    A_5_delta    B_5_delta    A_20_delta    B_20_delta\n1992-01-01     9.0    5.0   -49.0   118.0   -249.0   -56.0\n1992-01-02   -91.0   69.0   -84.0   123.0   -296.0   -92.0\n...            ...    ...     ...     ...      ...     ...\n2012-10-01    88.0   41.0   -40.0  -126.0   -148.0   -84.0\n2012-10-02   -10.0  -44.0   -71.0  -172.0   -187.0   -87.0\n7581 rows × 6 columns\n```", "```py\ntime_series_delt's['A_20_de'ta'].plot(ki'd='h'st', \n                                      col'r='bl'ck', \n                                      alpha=0.5, \n                                      lab'l='A_20_de'ta', \n                                      figsize=(8,8))\ntime_series_delt's['A_5_de'ta'].plot(ki'd='h'st', \n                                     col'r='darkg'ay', \n                                     alpha=0.5, \n                                     lab'l='A_5_de'ta', \n                                     figsize=(8,8))\ntime_series_delt's['A_1_de'ta'].plot(ki'd='h'st', \n                                     col'r='lightg'ay', \n                                     alpha=0.5, \n                                     lab'l='A_1_de'ta', \n                                     figsize=(8,8))\nplt.legend()\n```", "```py\ntime_series_deltas['B_20_delta'].plot(kind='kde', \n                                      linestyle='-', \n                                      linewidth=2, \n                                      color='black', \n                                      label='B_20_delta', \n                                      figsize=(8,8))\ntime_series_deltas['B_5_delta'].plot(kind='kde', \n                                     linestyle=':', \n                                     linewidth=2, \n                                     color='black', \n                                     label='B_5_delta', \n                                     figsize=(8,8))\ntime_series_deltas['B_1_delta'].plot(kind='kde', \n                                     linestyle='--', \n                                     linewidth=2, \n                                     color='black', \n                                     label='B_1_delta', \n                                     figsize=(8,8))\nplt.legend()\n```", "```py\ngroup_A = time_series[['A']].groupby(pd.Grouper(freq='A'))\ngroup_A.boxplot(color='black', subplots=False, rot=90, \n                figsize=(12,12))\n```", "```py\npd.plotting.scatter_matrix(time_series[['A_1_delta', \n                                        'A_5_delta', \n                                        'A_20_delta', \n                                        'B_1_delta', \n                                        'B_5_delta', \n                                        'B_20_delta']], \n                           diagonal='kde', color='black', \n                           alpha=0.25, figsize=(12, 12))\n```", "```py\nfig, (ax1, ax2, ax3) = plt.subplots(3, figsize=(12, 12))\npd.plotting.lag_plot(time_series['A'], ax=ax1, lag=1, \n                     c='black', alpha=0.2)\npd.plotting.lag_plot(time_series['A'], ax=ax2, lag=7, \n                     c='black', alpha=0.2)\npd.plotting.lag_plot(time_series['A'], ax=ax3, lag=20, \n                     c='black', alpha=0.2)\n```", "```py\nfig, ax = plt.subplots(1, figsize=(12, 6))\npd.plotting.autocorrelation_plot(time_series['A'], ax=ax)\n```"]